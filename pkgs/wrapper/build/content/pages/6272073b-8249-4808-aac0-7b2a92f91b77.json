{
  "id": "6272073b-8249-4808-aac0-7b2a92f91b77",
  "name": "form-kegiatan-poli",
  "url": "/ppds/all/activity/poli/item/:id",
  "content_tree": {
    "id": "root",
    "type": "root",
    "childs": [
      {
        "id": "c8kits52778tsblciqz78mro",
        "adv": {
          "js": "<div {...props}>\n  <Local\n    name=\"form\"\n    value={{\n      _valid: true,\n      _error: {},\n      _loading: isEditor ? false : true,\n      _saving: false,\n      _deleting: false,\n      _submit: async () => {},\n      _delete: async () => {},\n      date: \"\",\n      notes: \"\",\n      id_hospital: 0,\n      id_pengajar: 0,\n      id_participant: 0,\n    }}\n    cache={false}\n    effect={async (local) => {\n      if (params.id !== \"new\") {\n        const data = await db.t_logbook.findFirst({\n          where: {\n            id: parseInt(params.id),\n          },\n          select: {\n            id_hospital: true,\n            id: true,\n            date: true,\n            notes: true,\n            t_logbook_participants: {\n              select: {\n                id: true,\n                id_user: true,\n              },\n              where: {\n                id_logbook_role: 2,\n              },\n            },\n          },\n        });\n\n        if (data) {\n          for (const [k, v] of Object.entries(data)) {\n            local[k] = v;\n          }\n\n          if (data.t_logbook_participants.length > 0) {\n            const part = data.t_logbook_participants[0];\n            if (part) {\n              local.id_pengajar = part.id_user;\n              local.id_participant = part.id;\n            }\n          }\n        }\n      }\n      local._loading = false;\n      local.render();\n      console.log(local, 'coba local')\n    }}\n  >\n    {children}\n  </Local>\n</div>",
          "css": "& {\n  display: flex;\n  overflow: hidden;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"form\",value:{_valid:!0,_error:{},_loading:!isEditor,_saving:!1,_deleting:!1,_submit:async()=>{},_delete:async()=>{},date:\"\",notes:\"\",id_hospital:0,id_pengajar:0,id_participant:0},cache:!1,effect:async e=>{if(params.id!==\"new\"){let t=await db.t_logbook.findFirst({where:{id:parseInt(params.id)},select:{id_hospital:!0,id:!0,date:!0,notes:!0,t_logbook_participants:{select:{id:!0,id_user:!0},where:{id_logbook_role:2}}}});if(t){for(let[i,a]of Object.entries(t))e[i]=a;if(t.t_logbook_participants.length>0){let i=t.t_logbook_participants[0];i&&(e.id_pengajar=i.id_user,e.id_participant=i.id)}}}e._loading=!1,e.render(),console.log(e,\"coba local\")}},children)));\n"
        },
        "dim": {
          "h": "full",
          "w": "full"
        },
        "name": "screen",
        "type": "section",
        "childs": [
          {
            "id": "gs0syjv28o6goxdhs7u29w4p",
            "adv": {
              "css": ""
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "top",
            "type": "item",
            "childs": [
              {
                "id": "o5pcil5wp40fwlytchai9z8a",
                "name": "page-tittle",
                "type": "item",
                "childs": [
                  {
                    "id": "i2mo16ojb5yghiobppefj64i",
                    "adv": {},
                    "name": "title-back",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "a88a28fb-cc37-4910-8ebb-0bd20444d8f4",
                      "props": {
                        "url": {
                          "idx": 2,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "\"/ppds/all/activity/poli/list\"",
                          "valueBuilt": "\"/ppds/all/activity/poli/list\";\n"
                        },
                        "label": {
                          "idx": 1,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "params.id !== \"new\" ? \"Update Kegiatan Poli\" : \"Tambah Kegiatan Poli\" ",
                          "valueBuilt": " params.id!==\"new\"?\"Update Kegiatan Poli\":\"Tambah Kegiatan Poli\";\n"
                        },
                        "name_page": {
                          "idx": 2,
                          "meta": {
                            "type": "text"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"\"",
                          "valueBuilt": "\"\";\n"
                        }
                      },
                      "child_ids": {
                        "jzs4f7pqesf82f0c0wbsjb8g": "odif24qou6yw2q5yn73uzyz4",
                        "kk01mmgdeev5fsniwb47hbsj": "k2itk8j8n86ntbafcogzi6tx",
                        "sk60ygaym1y056tlymedyccj": "dahldxztjxa79h0f05lzirtp",
                        "wgmya2spijp28j59sf2iypbh": "sup0c7g4pr139wgbau51121m"
                      },
                      "updated_at": 1691568262168
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          },
          {
            "id": "rcqpwi7lkhglzah173juk1r0",
            "adv": {
              "css": "& {\n  display: flex;\n  overflow: auto;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "body_scroll",
            "type": "item",
            "childs": [
              {
                "id": "ag95isd3o8q5wup2fsz3ftr5",
                "adv": {
                  "js": "<>{!form._loading && <div {...props}>{children}</div>}</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,!form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "body",
                "type": "item",
                "childs": [
                  {
                    "id": "ej61gj24g45y7w58fc4ixhk6",
                    "adv": {},
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "form",
                    "type": "item",
                    "childs": [
                      {
                        "id": "btunvc24s70clctkiscpy96r",
                        "adv": {
                          "js": "<>\n  {debug === \"y\" && <div {...props}>{JSON.stringify(form, null, 2)}</div>}\n</>",
                          "css": "& {\n  display: flex;\n  white-space: pre;\n  font-size: 13px;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                          "jsBuilt": "render(React.createElement(React.Fragment,null,debug===\"y\"&&React.createElement(\"div\",{...props},JSON.stringify(form,null,2))));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "debug",
                        "type": "item",
                        "childs": []
                      },
                      {
                        "id": "w2m6h2auqfp0crd4kg8sedsj",
                        "adv": {
                          "js": "<form\n  {...props}\n  onSubmit={async (e) => {\n    e.preventDefault();\n    if (typeof on_submit === \"function\") {\n      form._saving = true;\n      form.render();\n      await on_submit(form._validate);\n      form._saving = false;\n      form.render();\n    }\n  }}\n>\n  {(() => {\n    form._validate = (validation) => {\n      for (const [k, v] of Object.entries(validation)) {\n        if (!form[k]) {\n          form._error[k] = v;\n        }\n      }\n      form._valid = Object.keys(form._error).length === 0;\n      form.render();\n      return form._valid;\n    };\n    form._submit = async () => {\n      form._saving = true;\n      form.render();\n      await on_submit(form._validate);\n      form._saving = false;\n      form.render();\n    };\n  })()}\n  {children}\n</form>",
                          "jsBuilt": "render(React.createElement(\"form\",{...props,onSubmit:async r=>{r.preventDefault(),typeof on_submit==\"function\"&&(form._saving=!0,form.render(),await on_submit(form._validate),form._saving=!1,form.render())}},(()=>{form._validate=r=>{for(let[e,o]of Object.entries(r))form[e]||(form._error[e]=o);return form._valid=Object.keys(form._error).length===0,form.render(),form._valid},form._submit=async()=>{form._saving=!0,form.render(),await on_submit(form._validate),form._saving=!1,form.render()}})(),children));\n"
                        },
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "s6g7kiso5ey4e7q8izhuc41f",
                            "adv": {
                              "js": "<div {...props}>{content}</div>",
                              "jsBuilt": "render(React.createElement(\"div\",{...props},content));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": "full",
                                "w": "full"
                              }
                            },
                            "component": {
                              "props": {}
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "full",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "full",
                        "w": "full"
                      }
                    },
                    "component": {
                      "id": "7233d1df-6c61-478f-860b-6a3c99ce6b4f",
                      "group": {
                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                        "name": "All"
                      },
                      "props": {
                        "debug": {
                          "idx": 2,
                          "meta": {
                            "type": "option",
                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"n\"",
                          "valueBuilt": "\"n\";\n"
                        },
                        "content": {
                          "idx": 2,
                          "meta": {
                            "type": "content-element",
                            "oldName": "children"
                          },
                          "type": "ReactElement",
                          "value": "<></>",
                          "content": {
                            "id": "kzdi7pmnyapmskbh7xg04otm",
                            "dim": {
                              "h": "full",
                              "w": "full"
                            },
                            "name": "content",
                            "type": "item",
                            "childs": [
                              {
                                "id": "jcu6hhpw26tetagd8m8yy9fc",
                                "adv": {
                                  "css": ""
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "field",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "el5jr9o8jvfg63z293x6msqk",
                                    "adv": {
                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "box",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "kq3u57gktjs7sz12fbcg2l3f",
                                        "adv": {
                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "label",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "uemndwmwdsj3pad4qlgsx070",
                                            "adv": {
                                              "js": "<div {...props}>{label}</div>",
                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "var",
                                            "type": "item",
                                            "childs": []
                                          },
                                          {
                                            "id": "ao7lbg5bfbmh2q9hm8btcw0a",
                                            "adv": {
                                              "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "full"
                                            },
                                            "html": "*",
                                            "name": "required",
                                            "text": "",
                                            "type": "text",
                                            "layout": {
                                              "dir": "col",
                                              "gap": 0,
                                              "align": "center"
                                            },
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "fit"
                                              },
                                              "font": {
                                                "size": 20,
                                                "align": "left",
                                                "color": "#ff0000",
                                                "height": 115,
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "align": "center"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 8,
                                                "r": 8,
                                                "t": 0
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "layout": {
                                            "dir": "row",
                                            "gap": 0,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 0,
                                            "t": 10
                                          }
                                        }
                                      },
                                      {
                                        "id": "a3oj34vd8kbjmjmh8qed0p4d",
                                        "adv": {
                                          "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                          "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "cpoy12dmai3avcfym8ct1a8f",
                                            "adv": {
                                              "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#e9e9e9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 7,
                                                "r": 7,
                                                "t": 3
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "s1k76zoi5ox9kuwr14zn7vac",
                                        "adv": {
                                          "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-area",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "vexxmvorg6jl71ati04x0svo",
                                            "adv": {
                                              "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 86,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 5,
                                                "l": 7,
                                                "r": 7,
                                                "t": 5
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "g1i2g0rz9u7l1hw8zuy5mkt5",
                                        "adv": {
                                          "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "dropdown",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "a2ukbp415de12j577x570enq",
                                            "adv": {
                                              "js": "<select\n  {...props}\n  value={form[name]}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                              "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name],onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 8,
                                                "l": 7,
                                                "r": 7,
                                                "t": 8
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "t9dr4dtfuq6s17d0iytky8qw",
                                        "adv": {
                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "error-msg",
                                        "type": "item",
                                        "childs": [],
                                        "mobile": {
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "color": "#f84848",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 20,
                                            "t": 3
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full"
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "padding": {
                                    "b": 7,
                                    "l": 0,
                                    "r": 0,
                                    "t": 0
                                  }
                                },
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "group": {
                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                  },
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"id_pengajar\"",
                                      "valueBuilt": "\"id_pengajar\";\n"
                                    },
                                    "type": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2\n    }\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  datanya.unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                    },
                                    "label": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Staff Pengajar\"",
                                      "valueBuilt": "\"Staff Pengajar\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text' || type === \"textarea\"",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  },
                                  "child_ids": {
                                    "cyhvxpe7rcqou5bfw9w35g4n": "fg6h4ik4qctd4soz3dv4hsoq",
                                    "gmp6phd1i4wipr5r0rzobwn3": "jp83szpjoi16vgcn03ff3y6f",
                                    "gweov0ufefa0fpp3f4dv8c5o": "a7qcnf0fhq6m63589k9wn3cq",
                                    "jl68cq663i110ifnpc5gxs7b": "d1yywursz6yqth7cdminaj1z",
                                    "k3sk3cv6uolwzglt5pxoqkve": "qmu7qsol2mhy6g5aue05h2uo",
                                    "kptna7o6yvxi8siixkcn9pex": "fikhmnvutypmg4xda9p848ea",
                                    "o7dz6y7ic0545ox31rpb0foz": "larqgldplltqs7m9kk7sw1c9",
                                    "oqppj8qbhxuylp8l15k403qx": "ox60da9uq122628fx8le0ipc",
                                    "s9q2qxgbhaxf95ot57ftqj5m": "tu42slqgibsgnzp644t7k21z",
                                    "vxt4mn2ay3mir338ii8auyz7": "o6ff9hqjlqvfmpgxlqatb359",
                                    "w5b8fzvkdh6uryxqknfqve9z": "a36o1quos4gzgtusf04bc93s",
                                    "w8x9df5ivk47nuobcwwc39ta": "o1ncnoqpapf1ez19v9dc2ev8",
                                    "x3zifqicbdlal8vvr1ji3ij2": "btskcy78n0iamc40e8eal8yw",
                                    "y5qj8gyykgq4za7pnhkzi7c2": "mnpqt75accv0qsq64j7dcted",
                                    "yqye4g8hos47hml28819ukg5": "js43xh8y87kvfbf50wps92va"
                                  }
                                }
                              },
                              {
                                "id": "zu3nuhbs1sx5r4q2n3wh0jav",
                                "adv": {
                                  "css": ""
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "field",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "b85hwfgb7rijm17tu0eirab7",
                                    "adv": {
                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "box",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "jdr5a8gbzpxqkacxqycprzr7",
                                        "adv": {
                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "label",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "rhz4wzz77vt7nc19819c6que",
                                            "adv": {
                                              "js": "<div {...props}>{label}</div>",
                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "var",
                                            "type": "item",
                                            "childs": []
                                          },
                                          {
                                            "id": "xy54zpi23v85exyp1mbaf2n9",
                                            "adv": {
                                              "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "full"
                                            },
                                            "html": "*",
                                            "name": "required",
                                            "text": "",
                                            "type": "text",
                                            "layout": {
                                              "dir": "col",
                                              "gap": 0,
                                              "align": "center"
                                            },
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "fit"
                                              },
                                              "font": {
                                                "size": 20,
                                                "align": "left",
                                                "color": "#ff0000",
                                                "height": 115,
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "align": "center"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 8,
                                                "r": 8,
                                                "t": 0
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "layout": {
                                            "dir": "row",
                                            "gap": 0,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 0,
                                            "t": 10
                                          }
                                        }
                                      },
                                      {
                                        "id": "ks5bsrh4v1j5t3hwmzw8d6ky",
                                        "adv": {
                                          "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                          "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "xaurxpk15j9c3jph6hi1chjf",
                                            "adv": {
                                              "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#e9e9e9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 7,
                                                "r": 7,
                                                "t": 3
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "q7f4jvndjqzvg3aeps7nizd4",
                                        "adv": {
                                          "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-area",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "hfcqk34pu2ergos6ottzj8dz",
                                            "adv": {
                                              "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 86,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 5,
                                                "l": 7,
                                                "r": 7,
                                                "t": 5
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "s30ylzbbpamdk68jexdz0e6k",
                                        "adv": {
                                          "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "dropdown",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "afcz4agyc916l4kid0dzd4h5",
                                            "adv": {
                                              "js": "<select\n  {...props}\n  value={form[name]}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                              "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name],onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 8,
                                                "l": 7,
                                                "r": 7,
                                                "t": 8
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "tisbbr0cpj0qhfp0c652shxn",
                                        "adv": {
                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "error-msg",
                                        "type": "item",
                                        "childs": [],
                                        "mobile": {
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "color": "#f84848",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 20,
                                            "t": 3
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full"
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "padding": {
                                    "b": 7,
                                    "l": 0,
                                    "r": 0,
                                    "t": 0
                                  }
                                },
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "group": {
                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                  },
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"date\"",
                                      "valueBuilt": "\"date\";\n"
                                    },
                                    "type": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"datetime\"",
                                      "valueBuilt": "\"datetime\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                    },
                                    "label": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Tanggal\"",
                                      "valueBuilt": "\"Tanggal\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text' || type === \"textarea\"",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  },
                                  "child_ids": {
                                    "cyhvxpe7rcqou5bfw9w35g4n": "y39fdbimfk7ix1zl34q7rqlo",
                                    "gmp6phd1i4wipr5r0rzobwn3": "yqb9hords9l280b1336w805y",
                                    "gweov0ufefa0fpp3f4dv8c5o": "ecpwrrmb7ea3jruflvn6wopz",
                                    "jl68cq663i110ifnpc5gxs7b": "wz8d22qt3e9xcvsye68y752j",
                                    "k3sk3cv6uolwzglt5pxoqkve": "kxfop0xmqbqv157a5oosj48u",
                                    "kptna7o6yvxi8siixkcn9pex": "s5dtij37bj04abwrjf1t05jn",
                                    "o7dz6y7ic0545ox31rpb0foz": "e2yzih4stmy5qmvf1lpzoxlm",
                                    "oqppj8qbhxuylp8l15k403qx": "efvje83gyihtug1aj5vyvp6v",
                                    "s9q2qxgbhaxf95ot57ftqj5m": "yunq0soh1o9mt61ryb96cctq",
                                    "vxt4mn2ay3mir338ii8auyz7": "mvxmj65bg6w43udwksi0ie3c",
                                    "w5b8fzvkdh6uryxqknfqve9z": "iragmrctafnmo6cia9nzeouo",
                                    "w8x9df5ivk47nuobcwwc39ta": "j24c8i4iyfr7vle1zcb4qpvl",
                                    "x3zifqicbdlal8vvr1ji3ij2": "qtyteajg1ykxdni4jm8g2vt6",
                                    "y5qj8gyykgq4za7pnhkzi7c2": "pagdctifg738uoqto28mt70w",
                                    "yqye4g8hos47hml28819ukg5": "cv1kw334up35xmll1n9fjyky"
                                  }
                                }
                              },
                              {
                                "id": "y7n0cb6wqdznn0lmaewlzpjn",
                                "adv": {
                                  "css": ""
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "field",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "xs33vgpa5nl5i7ymsjonqw4u",
                                    "adv": {
                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "box",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "ru21zqae5vgf4mhxe4vqneop",
                                        "adv": {
                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "label",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "kkyp7htxzyj9pnu0w904b7hu",
                                            "adv": {
                                              "js": "<div {...props}>{label}</div>",
                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "var",
                                            "type": "item",
                                            "childs": []
                                          },
                                          {
                                            "id": "dvwdwnum24636t7yzteek7yf",
                                            "adv": {
                                              "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "full"
                                            },
                                            "html": "*",
                                            "name": "required",
                                            "text": "",
                                            "type": "text",
                                            "layout": {
                                              "dir": "col",
                                              "gap": 0,
                                              "align": "center"
                                            },
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "fit"
                                              },
                                              "font": {
                                                "size": 20,
                                                "align": "left",
                                                "color": "#ff0000",
                                                "height": 115,
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "align": "center"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 8,
                                                "r": 8,
                                                "t": 0
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "layout": {
                                            "dir": "row",
                                            "gap": 0,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 0,
                                            "t": 10
                                          }
                                        }
                                      },
                                      {
                                        "id": "idp7amfio5m5zbgzxozn1svm",
                                        "adv": {
                                          "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                          "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "xuk3koa2vfwrm34oboe5scfj",
                                            "adv": {
                                              "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#e9e9e9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 7,
                                                "r": 7,
                                                "t": 3
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "u20kas45vsccnca96fozroq0",
                                        "adv": {
                                          "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-area",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "hlsqn8he6oz7vnpwt8ksrbpi",
                                            "adv": {
                                              "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 86,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 5,
                                                "l": 7,
                                                "r": 7,
                                                "t": 5
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "b590wv1l8mbi8bf1dkxscbz8",
                                        "adv": {
                                          "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "dropdown",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "uh753pqtn4e0kem6sbybq1w6",
                                            "adv": {
                                              "js": "<select\n  {...props}\n  value={form[name]}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                              "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name],onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 8,
                                                "l": 7,
                                                "r": 7,
                                                "t": 8
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "o72617ux1stvbmgm9wo2ls4y",
                                        "adv": {
                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "error-msg",
                                        "type": "item",
                                        "childs": [],
                                        "mobile": {
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "color": "#f84848",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 20,
                                            "t": 3
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full"
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "padding": {
                                    "b": 7,
                                    "l": 0,
                                    "r": 0,
                                    "t": 0
                                  }
                                },
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "group": {
                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                  },
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"notes\"",
                                      "valueBuilt": "\"notes\";\n"
                                    },
                                    "type": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"textarea\"",
                                      "valueBuilt": "\"textarea\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                    },
                                    "label": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Catatan\"",
                                      "valueBuilt": "\"Catatan\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Isi Catatan\"",
                                      "visible": "type === 'text' || type === \"textarea\"",
                                      "valueBuilt": "\"Isi Catatan\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  },
                                  "child_ids": {
                                    "cyhvxpe7rcqou5bfw9w35g4n": "oknrdz5enc2gbcm5odvmdzwu",
                                    "gmp6phd1i4wipr5r0rzobwn3": "nzxtswf1o812kvsyaawcuxu8",
                                    "gweov0ufefa0fpp3f4dv8c5o": "nbbab9co2ld1bbrvja3i6o9k",
                                    "jl68cq663i110ifnpc5gxs7b": "zgwr5s81mg3nsu7v69nq5s0a",
                                    "k3sk3cv6uolwzglt5pxoqkve": "t1ggp8rvyr5ytrsc2tu1c4s5",
                                    "kptna7o6yvxi8siixkcn9pex": "rzaqkzuwee8iiewujpcjm10i",
                                    "o7dz6y7ic0545ox31rpb0foz": "xd2uw3dxcy67wefx2gu2fya8",
                                    "oqppj8qbhxuylp8l15k403qx": "qw8e1kidvx82804grjer21f4",
                                    "s9q2qxgbhaxf95ot57ftqj5m": "evwmm8u5zpq65uzg0c94f10z",
                                    "vxt4mn2ay3mir338ii8auyz7": "q7dbp4wlhg3gi9m7wa330nre",
                                    "w5b8fzvkdh6uryxqknfqve9z": "gnrt9yrrrl17dvt8f46c84pm",
                                    "w8x9df5ivk47nuobcwwc39ta": "fo6nq9f8lg369s1eppk64i82",
                                    "x3zifqicbdlal8vvr1ji3ij2": "cdvfc1idlif972pcapicgtbw",
                                    "y5qj8gyykgq4za7pnhkzi7c2": "ng55hjuhl25yqffivj2szf7k",
                                    "yqye4g8hos47hml28819ukg5": "a135qbf4usotfc5fjlgoorok"
                                  }
                                }
                              },
                              {
                                "id": "megds7ccocf7nfq52pennlyg",
                                "adv": {
                                  "css": ""
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "field",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "jr8ke1mucyqj6sze4bqu78co",
                                    "adv": {
                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "box",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "ox62nc3b38evscwnx1p4y700",
                                        "adv": {
                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "label",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "tim0k2qq4lox9nviimhyi12r",
                                            "adv": {
                                              "js": "<div {...props}>{label}</div>",
                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "var",
                                            "type": "item",
                                            "childs": []
                                          },
                                          {
                                            "id": "ltjnkyqdily9z3w0k13if3eu",
                                            "adv": {
                                              "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "full"
                                            },
                                            "html": "*",
                                            "name": "required",
                                            "text": "",
                                            "type": "text",
                                            "layout": {
                                              "dir": "col",
                                              "gap": 0,
                                              "align": "center"
                                            },
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "fit"
                                              },
                                              "font": {
                                                "size": 20,
                                                "align": "left",
                                                "color": "#ff0000",
                                                "height": 115,
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "align": "center"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 8,
                                                "r": 8,
                                                "t": 0
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "layout": {
                                            "dir": "row",
                                            "gap": 0,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 0,
                                            "t": 10
                                          }
                                        }
                                      },
                                      {
                                        "id": "e8ty8uw5f8h8dr3w370hi5bq",
                                        "adv": {
                                          "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                          "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "nblwiwyqkdjkgz2gejo48zx7",
                                            "adv": {
                                              "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#e9e9e9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 7,
                                                "r": 7,
                                                "t": 3
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "j6m8zptbcp5ya4gxo3t2leck",
                                        "adv": {
                                          "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "text-area",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "kdxn6t2k2h89f71h9fn11w6y",
                                            "adv": {
                                              "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 86,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 5,
                                                "l": 7,
                                                "r": 7,
                                                "t": 5
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "azouc7twwrwmpy12batu5w28",
                                        "adv": {
                                          "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "dropdown",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "cxare2z5z1bert9eoyb5wqst",
                                            "adv": {
                                              "js": "<select\n  {...props}\n  value={form[name]}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                              "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                              "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name],onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "field",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 42,
                                                "w": "full"
                                              },
                                              "border": {
                                                "color": "#E9E9E9",
                                                "style": "solid",
                                                "stroke": {
                                                  "b": 1,
                                                  "l": 1,
                                                  "r": 1,
                                                  "t": 1
                                                },
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              },
                                              "padding": {
                                                "b": 8,
                                                "l": 7,
                                                "r": 7,
                                                "t": 8
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "border": {
                                            "color": "",
                                            "style": "solid",
                                            "stroke": {
                                              "b": 0,
                                              "l": 0,
                                              "r": 0,
                                              "t": 0
                                            }
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 20,
                                            "r": 20,
                                            "t": 0
                                          }
                                        }
                                      },
                                      {
                                        "id": "x6lg648fw4m94iv1krgtcujk",
                                        "adv": {
                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "error-msg",
                                        "type": "item",
                                        "childs": [],
                                        "mobile": {
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "color": "#f84848",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          },
                                          "padding": {
                                            "b": 3,
                                            "l": 20,
                                            "r": 20,
                                            "t": 3
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full"
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "padding": {
                                    "b": 7,
                                    "l": 0,
                                    "r": 0,
                                    "t": 0
                                  }
                                },
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "group": {
                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                  },
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"id_hospital\"",
                                      "valueBuilt": "\"id_hospital\";\n"
                                    },
                                    "type": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n  let data = await db.m_hospital.findMany({});\n  let datanya = data.map((item) => {\n    return {\n      label: item.name,\n      value: item.id,\n    };\n  });\n  datanya.unshift({\n    label: 'Pilih Rumah Sakit',\n    value: \"null\"\n  })\n  return datanya;\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>{let a=(await db.m_hospital.findMany({})).map(l=>({label:l.name,value:l.id}));return a.unshift({label:\"Pilih Rumah Sakit\",value:\"null\"}),a};\n"
                                    },
                                    "label": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Rumah Sakit\"",
                                      "valueBuilt": "\"Rumah Sakit\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text' || type === \"textarea\"",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  },
                                  "child_ids": {
                                    "cyhvxpe7rcqou5bfw9w35g4n": "s8yibxo9dcfp24vnd4ara134",
                                    "gmp6phd1i4wipr5r0rzobwn3": "fkbzh3ki4ttgm9ojtd8tkxex",
                                    "gweov0ufefa0fpp3f4dv8c5o": "ia4hnr5hquuizog8egzxuvsk",
                                    "jl68cq663i110ifnpc5gxs7b": "wtmqj33qh53pwi4r39a91znx",
                                    "k3sk3cv6uolwzglt5pxoqkve": "b37808rvppd36bu5z0jolbac",
                                    "kptna7o6yvxi8siixkcn9pex": "roys26o2ihkv6eds0c0jrp37",
                                    "o7dz6y7ic0545ox31rpb0foz": "pu9ew2ynfplpnyw6oowjw1e1",
                                    "oqppj8qbhxuylp8l15k403qx": "aulap75ox1hng781wow0rz2k",
                                    "s9q2qxgbhaxf95ot57ftqj5m": "lxt0c5rf4lekkmw2oetfvwa3",
                                    "vxt4mn2ay3mir338ii8auyz7": "tm6fz7ivrbsu8h5nib69vxjc",
                                    "w5b8fzvkdh6uryxqknfqve9z": "kffu41jfeyyxmw0x4cyx44bv",
                                    "w8x9df5ivk47nuobcwwc39ta": "x0fvruzqkvvrnznf8a06tznx",
                                    "x3zifqicbdlal8vvr1ji3ij2": "fcyy0blqtkfsc5adob9vy0a3",
                                    "y5qj8gyykgq4za7pnhkzi7c2": "wtjxz92b23x8l4dti8ovcygc",
                                    "yqye4g8hos47hml28819ukg5": "qlscgizwk4cod4vh4h7putqk"
                                  }
                                }
                              }
                            ],
                            "parentInstanceId": "ej61gj24g45y7w58fc4ixhk6"
                          },
                          "valueBuilt": " React.createElement(React.Fragment,null);\n"
                        },
                        "on_delete": {
                          "idx": 3,
                          "meta": {
                            "type": "text"
                          },
                          "name": "prop",
                          "type": "(validate: (arg: Record<string, string | (() => boolean)>) => boolean) => void | Promise<void>",
                          "value": "async (validate) => {\n  if (params.id !== \"new\") {\n    if (confirm(\"Anda yakin ingin menghapus data ini ?\")) {\n      await db.t_logbook_participants.deleteMany({\n        where: { id_logbook: Number(params.id) },\n      });\n      await db.t_logbook.delete({\n        where: { id: Number(params.id) },\n      });\n      for (const k of Object.keys(form)) {\n        if (k.startsWith(\"_\") && k === \"render\") {\n          continue;\n        }\n        delete form[k];\n      }\n      form.render();\n      navigate(\"/ppds/all/activity/poli/list\");\n    }\n  }\n}",
                          "valueBuilt": " async a=>{if(params.id!==\"new\"&&confirm(\"Anda yakin ingin menghapus data ini ?\")){await db.t_logbook_participants.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook.delete({where:{id:Number(params.id)}});for(let e of Object.keys(form))e.startsWith(\"_\")&&e===\"render\"||delete form[e];form.render(),navigate(\"/ppds/all/activity/poli/list\")}};\n"
                        },
                        "on_submit": {
                          "idx": 1,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "(validate: (arg: Record<string, string | (() => boolean)>) => boolean) => void | Promise<void>",
                          "value": "async (validate) => {\n  if (\n    validate({\n      id_pengajar: `Staff pengajar harus diisi`,\n      date: `Tanggal harus diisi`,\n      notes: `Notes harus diisi`,\n      id_hospital: `Rumah sakit harus diisi`,\n    })\n  ) {\n    const createParticipant = async (save: { id: number }) => {\n      const role_1 = await db.t_logbook_participants.create({\n        data: {\n          id_logbook: Number(save.id),\n          id_logbook_role: 1,\n          id_user: Number(user.id),\n        },\n      });\n      const role_2 = await db.t_logbook_participants.create({\n        data: {\n          id_logbook: Number(save.id),\n          id_logbook_role: 2,\n          id_user: Number(form.id_pengajar),\n        },\n      });\n    };\n\n    const data = {\n      id_action: 3,\n      created_by: user.id,\n      created_date: new Date(),\n      date: form[\"date\"],\n      notes: form[\"notes\"],\n      id_user: user.id,\n      id_hospital: Number(form[\"id_hospital\"]),\n      is_presentation: false,\n      id_client: user.id_client,\n    };\n    if (params.id !== \"new\") {\n      const save = await db.t_logbook.update({\n        where: { id: form[\"id\"] },\n        data,\n        select: { id: true },\n      });\n      await db.t_logbook_participants.deleteMany({\n        where: { id_logbook: save.id },\n      }); \n      await createParticipant(save);\n      navigate(\"/ppds/all/activity/poli/list\");\n    } else { \n      if (confirm(\"Yakin akan menambah data ini?\")) {\n        let save = await db.t_logbook.create({\n          data: {\n            ...data,\n          },\n        });\n        if (save) {\n          await createParticipant(save);\n          if (confirm(\"Berhasil. Lanjutkan menambah ?\")) {\n            for (const k of Object.keys(form)) {\n              if (k.startsWith(\"_\") && k === \"render\") {\n                continue;\n              }\n              delete form[k];\n            }\n            form.render();\n          } else {\n            navigate(\"/ppds/all/activity/poli/list\");\n          }\n        }\n      } else {\n        form.render();\n      }\n    }\n  }\n}",
                          "valueBuilt": " async o=>{if(o({id_pengajar:\"Staff pengajar harus diisi\",date:\"Tanggal harus diisi\",notes:\"Notes harus diisi\",id_hospital:\"Rumah sakit harus diisi\"})){let e=async a=>{let i=await db.t_logbook_participants.create({data:{id_logbook:Number(a.id),id_logbook_role:1,id_user:Number(user.id)}}),r=await db.t_logbook_participants.create({data:{id_logbook:Number(a.id),id_logbook_role:2,id_user:Number(form.id_pengajar)}})},t={id_action:3,created_by:user.id,created_date:new Date,date:form.date,notes:form.notes,id_user:user.id,id_hospital:Number(form.id_hospital),is_presentation:!1,id_client:user.id_client};if(params.id!==\"new\"){let a=await db.t_logbook.update({where:{id:form.id},data:t,select:{id:!0}});await db.t_logbook_participants.deleteMany({where:{id_logbook:a.id}}),await e(a),navigate(\"/ppds/all/activity/poli/list\")}else if(confirm(\"Yakin akan menambah data ini?\")){let a=await db.t_logbook.create({data:{...t}});if(a)if(await e(a),confirm(\"Berhasil. Lanjutkan menambah ?\")){for(let i of Object.keys(form))i.startsWith(\"_\")&&i===\"render\"||delete form[i];form.render()}else navigate(\"/ppds/all/activity/poli/list\")}else form.render()}};\n"
                        }
                      },
                      "child_ids": {
                        "dw1cl593iaihdm6hke2xshjk": "fby8le37cdo8stsz3ro9iex9",
                        "m29uuzchxho32afdpoksadz9": "zkd63xvqk8greyw5qgpejrwn",
                        "tph2jbghvnopzqzj42xr92uu": "u799c3xbrxch5i83tko9mh1i",
                        "z38nph7sqngvmv6j7h25z7i0": "wsdcsln7ksx1fvvme4d9mett"
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  }
                }
              },
              {
                "id": "jco3vi9icjvcj1er6q2mzkoo",
                "adv": {
                  "js": "<>{form._loading && <div {...props}>{children}</div>}</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "loading",
                "type": "item",
                "childs": [
                  {
                    "id": "qrho78q5ngdjm3z7rsygfb3p",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "audvhs83hwov7uoyompsepa8",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 16,
                            "w": 112
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "py66ibruadcyex47h0aicgeg",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "h1nzvippw74oofv6dear9k2p",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": 232
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "border": {
                            "color": "#d5d3d3",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 11,
                            "l": 16,
                            "r": 16,
                            "t": 11
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  },
                  {
                    "id": "l3c4905yl4f0u8eymjxkk1fh",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "e0jn8ip7pg8af7ofjqoyj77a",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 16,
                            "w": 112
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "uy4rmeyy7aanl54je0fy4phq",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "b63s142zbyc5ips9zeuyndua",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": 232
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "border": {
                            "color": "#d5d3d3",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 11,
                            "l": 16,
                            "r": 16,
                            "t": 11
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  },
                  {
                    "id": "snuaug3qvy1kstcgzebkfzpk",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "vt54hfi928olltves8zrpyxt",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 16,
                            "w": 112
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "hmhapo4rh5hdx54l45niy1cd",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "f33mtewrzzu8z97j7d94bc30",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": 232
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "border": {
                            "color": "#d5d3d3",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 11,
                            "l": 16,
                            "r": 16,
                            "t": 11
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 25,
                    "wrap": "flex-nowrap",
                    "align": "top-left"
                  },
                  "padding": {
                    "b": 9,
                    "l": 15,
                    "r": 15,
                    "t": 9
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "full",
                "w": "full"
              },
              "padding": {
                "b": 12,
                "l": 0,
                "r": 0,
                "t": 12
              }
            }
          },
          {
            "id": "nlx1im8caz8t0a6fzs2uxcjm",
            "adv": {
              "css": ""
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "menu",
            "type": "item",
            "childs": [
              {
                "id": "gma2ypqdfapocfc5n4uy41lf",
                "adv": {
                  "js": "<>{params.id === \"new\" && (<div {...props}>{children}</div>)}</>",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id===\"new\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "name": "button-create",
                "type": "item",
                "childs": [
                  {
                    "id": "vc8zacc8d76x4se6vmn0nqzs",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._submit();\n}",
                          "valueBuilt": "()=>{form._submit()};\n"
                        }
                      },
                      "child_ids": {
                        "lhbebj5irgn10waaupkot8z5": "wcerz1j24skgjbezd3snfzww",
                        "qj0c6h2yql08027tzgdytv72": "ktq687ztnq7m633pawebjndb",
                        "yf6d8en9ugjyvcpevvyze7uh": "ivx8kummzfz9x0jayann8enn"
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "bg": {
                    "pos": "center",
                    "size": "cover",
                    "color": "#ffffff"
                  },
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "align": "top-center"
                  },
                  "padding": {
                    "b": 0,
                    "l": 0,
                    "r": 0,
                    "t": 0
                  }
                },
                "component": {
                  "props": {}
                }
              },
              {
                "id": "fxz0iplirdsnd2azm9282al3",
                "adv": {
                  "js": "<>{params.id !== \"new\" && (<div {...props}>{children}</div>)}</>",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id!==\"new\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "name": "button-update",
                "type": "item",
                "childs": [
                  {
                    "id": "zrlmcxft8dua8sdxevx3zbbi",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Danger\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Danger\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "\"Hapus\"",
                          "valueBuilt": "\"Hapus\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"120px\"",
                          "valueBuilt": "\"120px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._delete();\n}",
                          "valueBuilt": "()=>{form._delete()};\n"
                        }
                      },
                      "child_ids": {
                        "lhbebj5irgn10waaupkot8z5": "ullj593dm56avn1rgwdnyegn",
                        "qj0c6h2yql08027tzgdytv72": "r9creacs749uftkx0847xsa0",
                        "yf6d8en9ugjyvcpevvyze7uh": "lhsws2jvtusaoairc3s8q3t0"
                      },
                      "updated_at": 1692005629672
                    }
                  },
                  {
                    "id": "hmi00dk6nty5i7swo7alg5xx",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"120px\"",
                          "valueBuilt": "\"120px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._submit();\n}",
                          "valueBuilt": "()=>{form._submit()};\n"
                        }
                      },
                      "child_ids": {
                        "lhbebj5irgn10waaupkot8z5": "ur2v7ydfcent8io4f9w54slt",
                        "qj0c6h2yql08027tzgdytv72": "q21e9rqdxoaishh6m8lpkbo5",
                        "yf6d8en9ugjyvcpevvyze7uh": "e04hkp4yba5phg6m7d5oqb3w"
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "bg": {
                    "pos": "center",
                    "size": "cover",
                    "color": "#ffffff"
                  },
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "row",
                    "gap": 20,
                    "align": "top-center"
                  },
                  "padding": {
                    "b": 0,
                    "l": 0,
                    "r": 0,
                    "t": 0
                  }
                },
                "component": {
                  "props": {}
                }
              },
              {
                "id": "icqp0j9ipeuh6eldkoydy9r9",
                "name": "menu-ppds",
                "type": "item",
                "childs": [],
                "component": {
                  "id": "dbff71a3-2123-4f33-b9b6-7155d4418522",
                  "props": {},
                  "child_ids": {
                    "bl6f0lqlxc9n32ecloxfn38c": "ruosv069hac9ppwhh2optie3",
                    "gp3c5lx3gk86rxeobgamq316": "ih8abvpmu1n6wuqwk2xljwvo",
                    "if2zs4oauck7m5b9uawqisuu": "jg6tyxxyvbeil0j1dty2u9om",
                    "il8uryqq4cmnkhvczwym9rhq": "pvynfvlju51h7uo1pr6pdv79",
                    "isfgycwn4vcdujkc60uayvxj": "zdp5u34kwspw6tlf8zfi4624",
                    "kqxxgql834si4byuttc886o0": "v041t7ea1du3ibaieuuhb586",
                    "mok97d5sjz0ykbj95xpnnvhb": "xiunjgzxuk2xtus4mu6iq3ne",
                    "msxysf2rhq3skyduhezz643g": "soxac44mu1etfvjolh7v3syt",
                    "pji1yksj3l0eerfi7un0rddn": "g1ckzs3e9ggupkpjbvr5kes2",
                    "qh55n2vwvrhu772phb52gwh5": "vxogrw8mwizgnf07dzoudrr7",
                    "qyfnwsnruhkiz1g1w5c2h7jo": "iltpdj3piy66875c76ygvnei",
                    "rhatq276pcth4w7s2otf6f0f": "n7tg3gtjbep2wgte9m711p87",
                    "rug6sawb51ycgq3ms009fpc8": "frs0c3cvnpakrkkaureupuoq",
                    "s8h942aal7q635ndhlhabkgh": "hbiblcb0kpyaidl8qdp146me",
                    "ua3ic5v6ryloymfoibqq6dtn": "yth7kbu264ahkju6r54pxpgp",
                    "uc3n6yqhb1l6t99rp1lradwd": "ojkbwaze2k3marc0wypsdtdr",
                    "w9eq3utljx7v052jqatb6iis": "jvbl444pgfaxg22mfqqvutxg"
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          }
        ]
      }
    ]
  },
  "id_site": "2512068e-fd68-44f5-9700-5153ccecf6a5",
  "created_at": "2023-08-28T04:13:39.985Z",
  "js_compiled": null,
  "js": null,
  "updated_at": "2023-09-19T12:52:36.947Z",
  "id_folder": "fe015c5e-6c11-46b2-a854-30e08349f473",
  "is_deleted": false,
  "id_layout": null,
  "is_default_layout": false
}