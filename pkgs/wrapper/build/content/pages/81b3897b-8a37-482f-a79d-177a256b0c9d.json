{
  "id": "81b3897b-8a37-482f-a79d-177a256b0c9d",
  "name": "form-laporan-jaga",
  "url": "/ppds/all/activity/jaga/item/:id",
  "content_tree": {
    "id": "root",
    "type": "root",
    "childs": [
      {
        "id": "c8kits52778tsblciqz78mro",
        "adv": {
          "js": "<div {...props}>\n  <Local\n    name=\"form\"\n    value={{\n      _valid: true,\n      _error: {},\n      _loading: isEditor ? false : true,\n      _saving: false,\n      _submit: async () => {},\n      date: \"\",\n      notes: \"\",\n      id_hospital: 0,\n      id_pengajar: 0,\n      id_participant: 0,\n    }}\n    cache={false}\n    effect={async (local) => {\n      if (params.id !== \"new\" && !isNaN(parseInt(params.id))) {\n        const data = await db.t_logbook.findFirst({\n          where: {\n            id: parseInt(params.id),\n          },\n          select: {\n            id_hospital: true,\n            id: true,\n            date: true,\n            notes: true,\n            t_logbook_participants: {\n              select: {\n                id: true,\n                id_user: true,\n              },\n              where: {\n                id_logbook_role: 2,\n              },\n            },\n          },\n        });\n\n        if (data) {\n          for (const [k, v] of Object.entries(data)) {\n            local[k] = v;\n          }\n\n          if (data.t_logbook_participants.length > 0) {\n            const part = data.t_logbook_participants[0];\n            if (part) {\n              local.id_pengajar = part.id_user;\n              local.id_participant = part.id;\n            }\n          }\n        }\n      }\n      local._loading = false;\n      local.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
          "css": "& {\n  display: flex;\n  overflow: hidden;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"form\",value:{_valid:!0,_error:{},_loading:!isEditor,_saving:!1,_submit:async()=>{},date:\"\",notes:\"\",id_hospital:0,id_pengajar:0,id_participant:0},cache:!1,effect:async e=>{if(params.id!==\"new\"&&!isNaN(parseInt(params.id))){let t=await db.t_logbook.findFirst({where:{id:parseInt(params.id)},select:{id_hospital:!0,id:!0,date:!0,notes:!0,t_logbook_participants:{select:{id:!0,id_user:!0},where:{id_logbook_role:2}}}});if(t){for(let[i,a]of Object.entries(t))e[i]=a;if(t.t_logbook_participants.length>0){let i=t.t_logbook_participants[0];i&&(e.id_pengajar=i.id_user,e.id_participant=i.id)}}}e._loading=!1,e.render()}},children)));\n"
        },
        "dim": {
          "h": "full",
          "w": "full"
        },
        "name": "screen",
        "type": "section",
        "childs": [
          {
            "id": "gs0syjv28o6goxdhs7u29w4p",
            "adv": {
              "css": ""
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "top",
            "type": "item",
            "childs": [
              {
                "id": "o5pcil5wp40fwlytchai9z8a",
                "adv": {
                  "css": "",
                  "html": ""
                },
                "name": "page-tittle",
                "type": "item",
                "childs": [
                  {
                    "id": "i2mo16ojb5yghiobppefj64i",
                    "adv": {},
                    "name": "title-back",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "a88a28fb-cc37-4910-8ebb-0bd20444d8f4",
                      "props": {
                        "url": {
                          "idx": 2,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "\"/ppds/all/activity/jaga/list\"",
                          "valueBuilt": "\"/ppds/all/activity/jaga/list\";\n"
                        },
                        "label": {
                          "idx": 1,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "params.id !== \"new\" ? \"Update Laporan Jaga\" : \"Tambah Laporan Jaga\" ",
                          "valueBuilt": " params.id!==\"new\"?\"Update Laporan Jaga\":\"Tambah Laporan Jaga\";\n"
                        }
                      },
                      "updated_at": 1691568262168
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          },
          {
            "id": "rcqpwi7lkhglzah173juk1r0",
            "adv": {
              "css": "& {\n  display: flex;\n  overflow: auto;\n\n  .shine {\n    background: #f6f7f8;\n    background-image: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: relative;\n\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: placeholderShimmer;\n    animation-timing-function: linear;\n  }\n\n  @keyframes placeholderShimmer {\n    0% {\n      background-position: -468px 0;\n    }\n\n    100% {\n      background-position: 468px 0;\n    }\n  }\n}"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "scroll",
            "type": "item",
            "childs": [
              {
                "id": "q0bhzzhuxfmtfrkjr0igxg9p",
                "adv": {
                  "js": "<>{!form._loading && <div {...props}>{children}</div>}</>",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,!form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "name": "body",
                "type": "item",
                "childs": [
                  {
                    "id": "xa5kohnnf1wzqdxr0kadvksc",
                    "adv": {
                      "js": "<form\n  {...props}\n  onSubmit={(e) => {\n    e.preventDefault();\n    if (typeof on_submit === \"function\") {\n      on_submit();\n    }\n  }}\n>\n  {children}\n</form>",
                      "jsBuilt": "render(React.createElement(\"form\",{...props,onSubmit:n=>{n.preventDefault(),typeof on_submit==\"function\"&&on_submit()}},children));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "form",
                    "type": "item",
                    "childs": [
                      {
                        "id": "wcgxaac62ud9cr9w6g6wcdvq",
                        "adv": {
                          "js": "<div {...props}>{content}</div>",
                          "jsBuilt": "render(React.createElement(\"div\",{...props},content));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full"
                          }
                        },
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full"
                      }
                    },
                    "component": {
                      "id": "7233d1df-6c61-478f-860b-6a3c99ce6b4f",
                      "group": {
                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                        "name": "All"
                      },
                      "props": {
                        "debug": {
                          "idx": 2,
                          "meta": {
                            "type": "option"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"n\"",
                          "valueBuilt": "\"n\";\n"
                        },
                        "content": {
                          "idx": 2,
                          "meta": {
                            "type": "content-element",
                            "oldName": "children"
                          },
                          "type": "ReactElement",
                          "value": "<></>",
                          "content": {
                            "id": "heeoyp20i7r0ml1p6izh04oo",
                            "dim": {
                              "h": "full",
                              "w": "full"
                            },
                            "name": "content",
                            "type": "item",
                            "childs": [
                              {
                                "id": "mrf53i6pnab9a8bsmfz7g3n8",
                                "name": "field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"id_pengajar\"",
                                      "valueBuilt": "\"id_pengajar\";\n"
                                    },
                                    "type": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                    },
                                    "label": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Staff Pengajar\"",
                                      "valueBuilt": "\"Staff Pengajar\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text'",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  }
                                }
                              },
                              {
                                "id": "vpc03zidtdu5gdswkvuapoft",
                                "name": "field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"date\"",
                                      "valueBuilt": "\"date\";\n"
                                    },
                                    "type": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"datetime\"",
                                      "valueBuilt": "\"datetime\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                    },
                                    "label": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Tanggal\"",
                                      "valueBuilt": "\"Tanggal\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "readonly": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"n\"",
                                      "valueBuilt": "\"n\";\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text'",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  }
                                }
                              },
                              {
                                "id": "rhas6rjc6axdtek8f8btrpzu",
                                "name": "field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"notes\"",
                                      "valueBuilt": "\"notes\";\n"
                                    },
                                    "type": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"textarea\"",
                                      "valueBuilt": "\"textarea\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                    },
                                    "label": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Catatan\"",
                                      "valueBuilt": "\"Catatan\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Isi Catatan...\"",
                                      "visible": "type === 'text'",
                                      "valueBuilt": "\"Isi Catatan...\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  }
                                }
                              },
                              {
                                "id": "b2r7a0ws20eca0r4buw3ceso",
                                "name": "field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                  "props": {
                                    "name": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"id_hospital\"",
                                      "valueBuilt": "\"id_hospital\";\n"
                                    },
                                    "type": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "items": {
                                      "idx": 30,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => any[] | Promise<any[]>",
                                      "value": "async () => {\n  let data = await db.m_hospital.findMany({});\n  let datanya = data.map((item) => {\n    return {\n      label: item.name,\n      value: item.id,\n    };\n  });\n  datanya.unshift({\n    label: 'Select hospital',\n    value: \"null\"\n  })\n  return datanya;\n}",
                                      "visible": "type === \"dropdown\"",
                                      "valueBuilt": " async()=>{let a=(await db.m_hospital.findMany({})).map(l=>({label:l.name,value:l.id}));return a.unshift({label:\"Select hospital\",value:\"null\"}),a};\n"
                                    },
                                    "label": {
                                      "idx": 5,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"Rumah Sakit\"",
                                      "valueBuilt": "\"Rumah Sakit\";\n"
                                    },
                                    "change": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "() => void | Promise<void>",
                                      "value": "async (val) => {}",
                                      "valueBuilt": " async a=>{};\n"
                                    },
                                    "required": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"y\"",
                                      "valueBuilt": "\"y\";\n"
                                    },
                                    "placeholder": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"-\"",
                                      "visible": "type === 'text'",
                                      "valueBuilt": "\"-\";\n"
                                    },
                                    "autocomplete": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"on\"",
                                      "visible": "type === 'password' || type === 'text'",
                                      "valueBuilt": "\"on\";\n"
                                    }
                                  }
                                }
                              }
                            ],
                            "parentInstanceId": "rud5ru24abh3ofauep3brq09"
                          },
                          "valueBuilt": " React.createElement(React.Fragment,null);\n"
                        },
                        "on_submit": {
                          "idx": 1,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "() => void | Promise<void>",
                          "value": "async (validate) => {\n  if (\n    validate({\n      id_pengajar: `Staff pengajar harus diisi`,\n      date: `Tanggal harus diisi`,\n      notes: `Notes harus diisi`,\n      id_hospital: `Rumah sakit harus diisi`,\n    })\n  ) {\n    const createParticipant = async (save: { id: number }) => {\n      const role_1 = await db.t_logbook_participants.create({\n        data: {\n          id_logbook: Number(save.id),\n          id_logbook_role: 1,\n          id_user: Number(user.id),\n        },\n      });\n      const role_2 = await db.t_logbook_participants.create({\n        data: {\n          id_logbook: Number(save.id),\n          id_logbook_role: 2,\n          id_user: Number(form.id_pengajar),\n        },\n      });\n    };\n\n    const data = {\n      id_action: 1,\n      created_by: user.id,\n      created_date: new Date(),\n      date: form[\"date\"],\n      notes: form[\"notes\"],\n      id_user: user.id,\n      id_hospital: Number(form[\"id_hospital\"]),\n      is_presentation: false,\n      id_client: user.id_client,\n    };\n    if (params.id !== \"new\") {\n      const save = await db.t_logbook.update({\n        where: { id: form[\"id\"] },\n        data,\n        select: { id: true },\n      });\n      await db.t_logbook_participants.deleteMany({\n        where: { id_logbook: save.id },\n      });\n      await createParticipant(save);\n      navigate(\"/ppds/all/activity/jaga/list\");\n    } else {\n      if (confirm(\"Yakin akan menambah data ini?\")) {\n        let save = await db.t_logbook.create({\n          data: {\n            ...data,\n          },\n        });\n        if (save) {\n          await createParticipant(save);\n          if (confirm(\"Berhasil. Lanjutkan menambah ?\")) {\n            for (const k of Object.keys(form)) {\n              if (k.startsWith(\"_\") || k === \"render\") {\n                continue;\n              }\n              delete form[k];\n            }\n            form.render();\n          } else {\n            navigate(\"/ppds/all/activity/jaga/list\");\n          }\n        }\n      } else {\n        form.render();\n      }\n    }\n  }\n}",
                          "valueBuilt": " async o=>{if(o({id_pengajar:\"Staff pengajar harus diisi\",date:\"Tanggal harus diisi\",notes:\"Notes harus diisi\",id_hospital:\"Rumah sakit harus diisi\"})){let i=async a=>{let e=await db.t_logbook_participants.create({data:{id_logbook:Number(a.id),id_logbook_role:1,id_user:Number(user.id)}}),r=await db.t_logbook_participants.create({data:{id_logbook:Number(a.id),id_logbook_role:2,id_user:Number(form.id_pengajar)}})},t={id_action:1,created_by:user.id,created_date:new Date,date:form.date,notes:form.notes,id_user:user.id,id_hospital:Number(form.id_hospital),is_presentation:!1,id_client:user.id_client};if(params.id!==\"new\"){let a=await db.t_logbook.update({where:{id:form.id},data:t,select:{id:!0}});await db.t_logbook_participants.deleteMany({where:{id_logbook:a.id}}),await i(a),navigate(\"/ppds/all/activity/jaga/list\")}else if(confirm(\"Yakin akan menambah data ini?\")){let a=await db.t_logbook.create({data:{...t}});if(a)if(await i(a),confirm(\"Berhasil. Lanjutkan menambah ?\")){for(let e of Object.keys(form))e.startsWith(\"_\")||e===\"render\"||delete form[e];form.render()}else navigate(\"/ppds/all/activity/jaga/list\")}else form.render()}};\n"
                        }
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  }
                }
              },
              {
                "id": "rwq5m0be890f4s5oijm5qnxr",
                "adv": {
                  "js": "<>{form._loading && <div {...props}>{children}</div>}</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "loading",
                "type": "item",
                "childs": [
                  {
                    "id": "k8arp9gw7378qeux8cshmpxa",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "gu0yqat32gmddfn5yln4smbx",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 12,
                            "w": 139
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "ayv7bggcwbv4xroyzsqmvm55",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "big9el8oe60fxme8mb5ca5ra",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": "full"
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "border": {
                            "color": "#f2f2f2",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 7,
                            "l": 6,
                            "r": 6,
                            "t": 7
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  },
                  {
                    "id": "ehebrqn80y9anij8thp38b3n",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "fsrl9h0ubp9wbp1tt83ungjx",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 12,
                            "w": 139
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "ijg89coazafccj0q7ckxhupa",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "ca325jtq0rhjjobzijqq3ib2",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": "full"
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "border": {
                            "color": "#f2f2f2",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 7,
                            "l": 6,
                            "r": 6,
                            "t": 7
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 25,
                    "wrap": "flex-nowrap",
                    "align": "top-left"
                  },
                  "padding": {
                    "b": 9,
                    "l": 15,
                    "r": 15,
                    "t": 9
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "full",
                "w": "full"
              },
              "padding": {
                "b": 0,
                "l": 0,
                "r": 0,
                "t": 0
              }
            }
          },
          {
            "id": "nlx1im8caz8t0a6fzs2uxcjm",
            "adv": {
              "css": ""
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "menu",
            "type": "item",
            "childs": [
              {
                "id": "p10uxjvm4zs8v7egqx5vs2z0",
                "adv": {
                  "css": ""
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "New Item",
                "type": "item",
                "childs": [
                  {
                    "id": "ifaoqpvxifch1uo26w7ndswy",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._submit();\n}",
                          "valueBuilt": "()=>{form._submit()};\n"
                        }
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 26,
                    "l": 0,
                    "r": 0,
                    "t": 26
                  }
                }
              },
              {
                "id": "tjlole1ny2tp9zlcyq2m4px2",
                "adv": {
                  "js": "<div {...props}>{children}</div>",
                  "css": "& {\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  &:hover {\r\n    display: flex;\r\n  }\r\n}",
                  "jsBuilt": "render(React.createElement(\"div\",{...props},children));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "menu-ppds-new",
                "type": "item",
                "childs": [
                  {
                    "id": "joa42kyr0jzz8yihrbcjj07c",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/home\") !== true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/home\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "css": "",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/home\")!==!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/home\")}},children)));\n"
                    },
                    "name": "home",
                    "type": "item",
                    "childs": [
                      {
                        "id": "o1s2b9q88dnj3kzh51z7o32l",
                        "adv": {
                          "js": "",
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\">\r\n  <mask id=\"mask0_219_6248\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"40\" height=\"40\">\r\n    <rect width=\"40\" height=\"40\" fill=\"#002B5B\" />\r\n  </mask>\r\n  <g mask=\"url(#mask0_219_6248)\">\r\n    <path\r\n      d=\"M10.0003 31.6667H15.0003V21.6667H25.0003V31.6667H30.0003V16.6667L20.0003 9.16667L10.0003 16.6667V31.6667ZM6.66699 35V15L20.0003 5L33.3337 15V35H21.667V25H18.3337V35H6.66699Z\"\r\n      fill=\"#002B5B\" />\r\n  </g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "home",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "txqem356durha3m7yo1b3owg",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/home\") === true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/home\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/home\")===!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/home\")}},children)));\n"
                    },
                    "name": "home-active",
                    "type": "item",
                    "childs": [
                      {
                        "id": "trhdq8xjtstuvxgeys8ijw36",
                        "adv": {
                          "js": "",
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\">\r\n  <mask id=\"mask0_946_6953\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"40\" height=\"40\">\r\n    <rect width=\"40\" height=\"40\" fill=\"#002B5B\" />\r\n  </mask>\r\n  <g mask=\"url(#mask0_946_6953)\">\r\n    <path\r\n      d=\"M10.0003 31.6667H15.0003V21.6667H25.0003V31.6667H30.0003V16.6667L20.0003 9.16667L10.0003 16.6667V31.6667ZM6.66699 35V15L20.0003 5L33.3337 15V35H21.667V25H18.3337V35H6.66699Z\"\r\n      fill=\"#0062A3\" />\r\n  </g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "home",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "tn079zbcxxto2l2rcw3ytrv9",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/all\") !== true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/all\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/all\")!==!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/all\")}},children)));\n"
                    },
                    "name": "all-menu",
                    "type": "item",
                    "childs": [
                      {
                        "id": "lkx7t3e58wwpmtmurnqn4t8d",
                        "adv": {
                          "js": "<div {...props}>{children}</div>",
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\">\r\n  <path\r\n    d=\"M7.08333 29.75C6.30417 29.75 5.63715 29.4725 5.08229 28.9177C4.52743 28.3628 4.25 27.6958 4.25 26.9166V7.08329C4.25 6.30413 4.52743 5.63711 5.08229 5.08225C5.63715 4.52739 6.30417 4.24996 7.08333 4.24996H13.0333C13.3403 3.39996 13.8538 2.71524 14.574 2.19579C15.2941 1.67635 16.1028 1.41663 17 1.41663C17.8972 1.41663 18.7059 1.67635 19.426 2.19579C20.1462 2.71524 20.6597 3.39996 20.9667 4.24996H26.9167C27.6958 4.24996 28.3628 4.52739 28.9177 5.08225C29.4726 5.63711 29.75 6.30413 29.75 7.08329V26.9166C29.75 27.6958 29.4726 28.3628 28.9177 28.9177C28.3628 29.4725 27.6958 29.75 26.9167 29.75H7.08333ZM7.08333 26.9166H26.9167V7.08329H7.08333V26.9166ZM9.91667 24.0833H19.8333V21.25H9.91667V24.0833ZM9.91667 18.4166H24.0833V15.5833H9.91667V18.4166ZM9.91667 12.75H24.0833V9.91663H9.91667V12.75ZM17 6.02079C17.3069 6.02079 17.5608 5.92045 17.7615 5.71975C17.9622 5.51906 18.0625 5.26524 18.0625 4.95829C18.0625 4.65135 17.9622 4.39753 17.7615 4.19683C17.5608 3.99614 17.3069 3.89579 17 3.89579C16.6931 3.89579 16.4392 3.99614 16.2385 4.19683C16.0378 4.39753 15.9375 4.65135 15.9375 4.95829C15.9375 5.26524 16.0378 5.51906 16.2385 5.71975C16.4392 5.92045 16.6931 6.02079 17 6.02079Z\"\r\n    fill=\"#002B5B\" />\r\n</svg>",
                          "jsBuilt": "render(React.createElement(\"div\",{...props},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "assignment",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "i3epcv1n25gpqtf3thb378vm",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/all\") === true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/all\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/all\")===!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/all\")}},children)));\n"
                    },
                    "name": "all-menu-active",
                    "type": "item",
                    "childs": [
                      {
                        "id": "z89beyykvlk1f32q71xi8ww9",
                        "adv": {
                          "js": "",
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"34\" height=\"34\" viewBox=\"0 0 34 34\" fill=\"none\">\r\n  <path\r\n    d=\"M7.08333 29.75C6.30417 29.75 5.63715 29.4725 5.08229 28.9177C4.52743 28.3628 4.25 27.6958 4.25 26.9166V7.08329C4.25 6.30413 4.52743 5.63711 5.08229 5.08225C5.63715 4.52739 6.30417 4.24996 7.08333 4.24996H13.0333C13.3403 3.39996 13.8538 2.71524 14.574 2.19579C15.2941 1.67635 16.1028 1.41663 17 1.41663C17.8972 1.41663 18.7059 1.67635 19.426 2.19579C20.1462 2.71524 20.6597 3.39996 20.9667 4.24996H26.9167C27.6958 4.24996 28.3628 4.52739 28.9177 5.08225C29.4726 5.63711 29.75 6.30413 29.75 7.08329V26.9166C29.75 27.6958 29.4726 28.3628 28.9177 28.9177C28.3628 29.4725 27.6958 29.75 26.9167 29.75H7.08333ZM7.08333 26.9166H26.9167V7.08329H7.08333V26.9166ZM9.91667 24.0833H19.8333V21.25H9.91667V24.0833ZM9.91667 18.4166H24.0833V15.5833H9.91667V18.4166ZM9.91667 12.75H24.0833V9.91663H9.91667V12.75ZM17 6.02079C17.3069 6.02079 17.5608 5.92045 17.7615 5.71975C17.9622 5.51906 18.0625 5.26524 18.0625 4.95829C18.0625 4.65135 17.9622 4.39753 17.7615 4.19683C17.5608 3.99614 17.3069 3.89579 17 3.89579C16.6931 3.89579 16.4392 3.99614 16.2385 4.19683C16.0378 4.39753 15.9375 4.65135 15.9375 4.95829C15.9375 5.26524 16.0378 5.51906 16.2385 5.71975C16.4392 5.92045 16.6931 6.02079 17 6.02079Z\"\r\n    fill=\"#0362a3\" />\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "assignment",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "y9ae3yz20luf7jm3n9gix46p",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/milestone\") !== true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/milestone\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/milestone\")!==!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/milestone\")}},children)));\n"
                    },
                    "name": "milestone",
                    "type": "item",
                    "childs": [
                      {
                        "id": "uvtjd4ueyydckwcftgge2x0e",
                        "adv": {
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" viewBox=\"0 0 35 35\" fill=\"none\">\r\n  <mask id=\"mask0_2608_6876\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"35\" height=\"35\">\r\n    <rect width=\"35\" height=\"35\" fill=\"#D9D9D9\" />\r\n  </mask>\r\n  <g mask=\"url(#mask0_2608_6876)\">\r\n    <path\r\n      d=\"M10.791 32.0833L8.74935 30.0417L18.8119 19.9427L23.916 25.0469L31.4629 17.5L33.541 19.5781L23.916 29.1667L18.8119 24.0625L10.791 32.0833ZM5.83268 30.625C5.0306 30.625 4.34397 30.3394 3.77279 29.7682C3.20161 29.1971 2.91602 28.5104 2.91602 27.7083V7.29167C2.91602 6.48958 3.20161 5.80295 3.77279 5.23177C4.34397 4.66059 5.0306 4.375 5.83268 4.375H26.2493C27.0514 4.375 27.7381 4.66059 28.3092 5.23177C28.8804 5.80295 29.166 6.48958 29.166 7.29167V13.4167H5.83268V30.625ZM5.83268 10.5H26.2493V7.29167H5.83268V10.5Z\"\r\n      fill=\"#002B5B\" />\r\n  </g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "schedule",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "zo6quq0xrusryzo12g3hevps",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/milestone\") === true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/milestone\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "html": "",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/milestone\")===!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/milestone\")}},children)));\n"
                    },
                    "name": "milestone-active",
                    "type": "item",
                    "childs": [
                      {
                        "id": "i7hc33gnnerlum3bmniaopfm",
                        "adv": {
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" viewBox=\"0 0 35 35\" fill=\"none\">\r\n<mask id=\"mask0_2570_6190\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"35\" height=\"35\">\r\n<rect x=\"0.5\" y=\"0.5\" width=\"34\" height=\"34\" fill=\"#D9D9D9\" stroke=\"black\"/>\r\n</mask>\r\n<g mask=\"url(#mask0_2570_6190)\">\r\n<path d=\"M9.45582 30.041L18.8125 20.6505L23.5625 25.4004L23.916 25.754L24.2696 25.4004L31.4629 18.2071L32.8332 19.5775L23.9167 28.4602L19.1654 23.7089L18.8119 23.3554L18.4583 23.7089L10.791 31.3762L9.45582 30.041ZM5.33268 30.0776C4.87859 29.9876 4.48013 29.7685 4.12634 29.4147C3.64818 28.9365 3.41602 28.3768 3.41602 27.7083V7.29167C3.41602 6.62325 3.64818 6.06348 4.12634 5.58532C4.6045 5.10716 5.16426 4.875 5.83268 4.875H26.2493C26.9178 4.875 27.4775 5.10716 27.9557 5.58532C28.4339 6.06348 28.666 6.62325 28.666 7.29167V12.9167H5.83268H5.33268V13.4167V30.0776ZM5.33268 10.5V11H5.83268H26.2493H26.7493V10.5V7.29167V6.79167H26.2493H5.83268H5.33268V7.29167V10.5Z\" fill=\"#0062A3\" stroke=\"#0062A3\"/>\r\n</g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "schedule",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "oaev67cwngmdlm74ylfqq0hu",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/profile\") !== true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        navigate(\"/ppds/profile\");\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/profile\")!==!0&&React.createElement(\"div\",{...props,onClick:e=>{navigate(\"/ppds/profile\")}},children)));\n"
                    },
                    "name": "profile",
                    "type": "item",
                    "childs": [
                      {
                        "id": "o0sdbdijnzo53aml9bohazm8",
                        "adv": {
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"37\" height=\"37\" viewBox=\"0 0 37 37\" fill=\"none\">\r\n<mask id=\"mask0_219_6257\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"37\" height=\"37\">\r\n<rect width=\"37\" height=\"37\" fill=\"#002B5B\"/>\r\n</mask>\r\n<g mask=\"url(#mask0_219_6257)\">\r\n<path d=\"M18.5003 18.5C16.8045 18.5 15.3528 17.8961 14.1451 16.6885C12.9375 15.4809 12.3337 14.0291 12.3337 12.3333C12.3337 10.6375 12.9375 9.18572 14.1451 7.97808C15.3528 6.77045 16.8045 6.16663 18.5003 6.16663C20.1962 6.16663 21.6479 6.77045 22.8555 7.97808C24.0632 9.18572 24.667 10.6375 24.667 12.3333C24.667 14.0291 24.0632 15.4809 22.8555 16.6885C21.6479 17.8961 20.1962 18.5 18.5003 18.5ZM6.16699 30.8333V26.5166C6.16699 25.643 6.39182 24.8401 6.84147 24.1078C7.29112 23.3755 7.88852 22.8166 8.63366 22.4312C10.2267 21.6347 11.8455 21.0373 13.4899 20.639C15.1344 20.2408 16.8045 20.0416 18.5003 20.0416C20.1962 20.0416 21.8663 20.2408 23.5107 20.639C25.1552 21.0373 26.7739 21.6347 28.367 22.4312C29.1121 22.8166 29.7095 23.3755 30.1592 24.1078C30.6088 24.8401 30.8337 25.643 30.8337 26.5166V30.8333H6.16699ZM9.25033 27.75H27.7503V26.5166C27.7503 26.234 27.6797 25.977 27.5383 25.7458C27.397 25.5145 27.2107 25.3347 26.9795 25.2062C25.592 24.5125 24.1916 23.9921 22.7785 23.6453C21.3653 23.2984 19.9392 23.125 18.5003 23.125C17.0614 23.125 15.6354 23.2984 14.2222 23.6453C12.809 23.9921 11.4087 24.5125 10.0212 25.2062C9.78991 25.3347 9.60362 25.5145 9.4623 25.7458C9.32099 25.977 9.25033 26.234 9.25033 26.5166V27.75ZM18.5003 15.4166C19.3482 15.4166 20.0741 15.1147 20.6779 14.5109C21.2818 13.9071 21.5837 13.1812 21.5837 12.3333C21.5837 11.4854 21.2818 10.7595 20.6779 10.1557C20.0741 9.55187 19.3482 9.24996 18.5003 9.24996C17.6524 9.24996 16.9265 9.55187 16.3227 10.1557C15.7189 10.7595 15.417 11.4854 15.417 12.3333C15.417 13.1812 15.7189 13.9071 16.3227 14.5109C16.9265 15.1147 17.6524 15.4166 18.5003 15.4166Z\" fill=\"#002B5B\"/>\r\n</g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "profile",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  },
                  {
                    "id": "mmy7jtajrtyrmn2euz6v6kvb",
                    "adv": {
                      "js": "<>\r\n  {location.pathname.includes(\"/ppds/profile\") === true && (\r\n    <div\r\n      {...props}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )}\r\n</>",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,location.pathname.includes(\"/ppds/profile\")===!0&&React.createElement(\"div\",{...props,onClick:e=>{e.preventDefault()}},children)));\n"
                    },
                    "name": "profile-active",
                    "type": "item",
                    "childs": [
                      {
                        "id": "k72qtekff799bixd1g27ss3v",
                        "adv": {
                          "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"37\" height=\"37\" viewBox=\"0 0 37 37\" fill=\"none\">\r\n<mask id=\"mask0_946_6962\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"37\" height=\"37\">\r\n<rect width=\"37\" height=\"37\" fill=\"#002B5B\"/>\r\n</mask>\r\n<g mask=\"url(#mask0_946_6962)\">\r\n<path d=\"M18.5003 18.5C16.8045 18.5 15.3528 17.8961 14.1451 16.6885C12.9375 15.4809 12.3337 14.0291 12.3337 12.3333C12.3337 10.6375 12.9375 9.18572 14.1451 7.97808C15.3528 6.77045 16.8045 6.16663 18.5003 6.16663C20.1962 6.16663 21.6479 6.77045 22.8555 7.97808C24.0632 9.18572 24.667 10.6375 24.667 12.3333C24.667 14.0291 24.0632 15.4809 22.8555 16.6885C21.6479 17.8961 20.1962 18.5 18.5003 18.5ZM6.16699 30.8333V26.5166C6.16699 25.643 6.39182 24.8401 6.84147 24.1078C7.29112 23.3755 7.88852 22.8166 8.63366 22.4312C10.2267 21.6347 11.8455 21.0373 13.4899 20.639C15.1344 20.2408 16.8045 20.0416 18.5003 20.0416C20.1962 20.0416 21.8663 20.2408 23.5107 20.639C25.1552 21.0373 26.7739 21.6347 28.367 22.4312C29.1121 22.8166 29.7095 23.3755 30.1592 24.1078C30.6088 24.8401 30.8337 25.643 30.8337 26.5166V30.8333H6.16699ZM9.25033 27.75H27.7503V26.5166C27.7503 26.234 27.6797 25.977 27.5383 25.7458C27.397 25.5145 27.2107 25.3347 26.9795 25.2062C25.592 24.5125 24.1916 23.9921 22.7785 23.6453C21.3653 23.2984 19.9392 23.125 18.5003 23.125C17.0614 23.125 15.6354 23.2984 14.2222 23.6453C12.809 23.9921 11.4087 24.5125 10.0212 25.2062C9.78991 25.3347 9.60362 25.5145 9.4623 25.7458C9.32099 25.977 9.25033 26.234 9.25033 26.5166V27.75ZM18.5003 15.4166C19.3482 15.4166 20.0741 15.1147 20.6779 14.5109C21.2818 13.9071 21.5837 13.1812 21.5837 12.3333C21.5837 11.4854 21.2818 10.7595 20.6779 10.1557C20.0741 9.55187 19.3482 9.24996 18.5003 9.24996C17.6524 9.24996 16.9265 9.55187 16.3227 10.1557C15.7189 10.7595 15.417 11.4854 15.417 12.3333C15.417 13.1812 15.7189 13.9071 16.3227 14.5109C16.9265 15.1147 17.6524 15.4166 18.5003 15.4166Z\" fill=\"#0062A3\"/>\r\n</g>\r\n</svg>"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "profile",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "component": {
                      "props": {}
                    }
                  }
                ],
                "mobile": {
                  "bg": {
                    "pos": "center",
                    "size": "cover",
                    "color": "#ffffff"
                  },
                  "dim": {
                    "h": 82,
                    "w": "full"
                  },
                  "layout": {
                    "dir": "row",
                    "gap": "auto",
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 20,
                    "l": 20,
                    "r": 20,
                    "t": 20
                  }
                },
                "component": {
                  "id": "29696634-35d5-4f70-8e2d-b3496984bd04",
                  "name": "menu-ppds-new",
                  "group": {
                    "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                    "name": "All"
                  },
                  "props": {}
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          }
        ]
      }
    ]
  },
  "id_site": "2512068e-fd68-44f5-9700-5153ccecf6a5",
  "created_at": "2023-08-28T04:13:39.985Z",
  "js_compiled": null,
  "js": null,
  "updated_at": "2023-09-18T03:16:46.567Z",
  "id_folder": "313c4205-80c1-404c-9edf-62c7d52d7578",
  "is_deleted": false,
  "id_layout": null,
  "is_default_layout": false
}