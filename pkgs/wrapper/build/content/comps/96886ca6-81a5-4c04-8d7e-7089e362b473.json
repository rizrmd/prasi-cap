{
  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
  "name": "field",
  "content_tree": {
    "id": "k3sk3cv6uolwzglt5pxoqkve",
    "adv": {
      "js": "",
      "css": ""
    },
    "dim": {
      "h": "fit",
      "w": "fit"
    },
    "name": "field",
    "type": "item",
    "childs": [
      {
        "id": "yqye4g8hos47hml28819ukg5",
        "adv": {
          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    idx={name}\n    value={{\n      //local object\n      name,\n      val: null,\n      items: [],\n      isNumber: false,\n      itemLoaded: false,\n    }}\n    cache={false}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\" && !isEditor) {\n        local.itemLoaded = false;\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.itemLoaded = true;\n      }\n      form.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",idx:name,value:{name,val:null,items:[],isNumber:!1,itemLoaded:!1},cache:!1,effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&!isEditor&&(e.itemLoaded=!1,e.isNumber=isNaN(s)===!1,e.items=await items(),e.itemLoaded=!0),form.render()}},children)));\n"
        },
        "dim": {
          "h": "fit",
          "w": "fit"
        },
        "name": "box",
        "type": "item",
        "childs": [
          {
            "id": "w5b8fzvkdh6uryxqknfqve9z",
            "adv": {
              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "label",
            "type": "item",
            "childs": [
              {
                "id": "x3zifqicbdlal8vvr1ji3ij2",
                "adv": {
                  "js": "<div {...props}>{label}</div>",
                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "var",
                "type": "item",
                "childs": []
              },
              {
                "id": "oqppj8qbhxuylp8l15k403qx",
                "adv": {
                  "js": "<>{required === \"y\" && readonly === \"n\" && <div {...props}>*</div>}</>",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&readonly===\"n\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "full"
                },
                "html": "*",
                "name": "required",
                "text": "",
                "type": "text",
                "layout": {
                  "dir": "col",
                  "gap": 0,
                  "align": "center"
                },
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "fit"
                  },
                  "font": {
                    "size": 20,
                    "align": "left",
                    "color": "#ff0000",
                    "height": 115,
                    "wordBreak": "break-normal",
                    "whitespace": "whitespace-normal"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "align": "center"
                  },
                  "padding": {
                    "b": 0,
                    "l": 8,
                    "r": 8,
                    "t": 0
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              },
              "font": {
                "size": 15,
                "align": "left",
                "family": "Poppins",
                "height": "auto",
                "wordBreak": "break-normal",
                "whitespace": "whitespace-normal"
              },
              "layout": {
                "dir": "row",
                "gap": 0,
                "wrap": "flex-nowrap",
                "align": "top-left"
              },
              "padding": {
                "b": 3,
                "l": 20,
                "r": 0,
                "t": 10
              }
            }
          },
          {
            "id": "jl68cq663i110ifnpc5gxs7b",
            "adv": {
              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
              "css": "",
              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "readonly",
            "type": "item",
            "childs": [
              {
                "id": "w8x9df5ivk47nuobcwwc39ta",
                "adv": {
                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e,\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (type === \"toggle\") {\n      return val === true ? \"Ya\" : \"Tidak\";\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"-\";\n  })()}\n</div>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(r=>typeof r==\"object\"?r.value===e:e===r);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):type===\"toggle\"?e===!0?\"Ya\":\"Tidak\":typeof e==\"object\"&&e?JSON.stringify(e):e||\"-\"})()));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "full"
                },
                "html": "",
                "name": "value",
                "text": "",
                "type": "text",
                "layout": {
                  "dir": "col",
                  "gap": 0,
                  "align": "center"
                },
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 10,
                    "t": 0
                  }
                }
              }
            ]
          },
          {
            "id": "cyhvxpe7rcqou5bfw9w35g4n",
            "adv": {
              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
              "css": "",
              "html": "",
              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
            },
            "name": "editable",
            "type": "item",
            "childs": [
              {
                "id": "s9q2qxgbhaxf95ot57ftqj5m",
                "adv": {
                  "js": "<>\n  {type === \"dropdown\" && (\n    <div {...props}>\n      {children}\n    </div>\n  )}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "dropdown",
                "type": "item",
                "childs": [
                  {
                    "id": "vxt4mn2ay3mir338ii8auyz7",
                    "adv": {
                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local?.items.map((e) => {\n    return (\n      <option value={e.value} key={e.value}>\n        {e.label}\n      </option>\n    );\n  })}\n</select>",
                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local?.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "field",
                    "type": "item",
                    "childs": [],
                    "mobile": {
                      "dim": {
                        "h": 42,
                        "w": "full"
                      },
                      "border": {
                        "color": "#E9E9E9",
                        "style": "solid",
                        "stroke": {
                          "b": 1,
                          "l": 1,
                          "r": 1,
                          "t": 1
                        },
                        "rounded": {
                          "bl": 8,
                          "br": 8,
                          "tl": 8,
                          "tr": 8
                        }
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "left"
                      },
                      "padding": {
                        "b": 8,
                        "l": 7,
                        "r": 7,
                        "t": 8
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "border": {
                    "color": "",
                    "style": "solid",
                    "stroke": {
                      "b": 0,
                      "l": 0,
                      "r": 0,
                      "t": 0
                    }
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 20,
                    "t": 0
                  }
                }
              },
              {
                "id": "y5qj8gyykgq4za7pnhkzi7c2",
                "adv": {
                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "text-area",
                "type": "item",
                "childs": [
                  {
                    "id": "gmp6phd1i4wipr5r0rzobwn3",
                    "adv": {
                      "js": "<textarea\n  {...props}\n  id={\"textarea\"}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onInput={(e) => {\n    let textarea = document.getElementById(\"textarea\");\n    let limit = 300; //height limit\n    textarea.style.height = \"100px\";\n    textarea.style.height = Math.min(textarea.scrollHeight, limit) + \"px\";\n  }}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`,\n  )}\n/>",
                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n    min-height: 100px !important;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,id:\"textarea\",placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onInput:a=>{let e=document.getElementById(\"textarea\"),r=300;e.style.height=\"100px\",e.style.height=Math.min(e.scrollHeight,r)+\"px\"},onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "field",
                    "type": "item",
                    "childs": [],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full"
                      },
                      "border": {
                        "color": "#E9E9E9",
                        "style": "solid",
                        "stroke": {
                          "b": 1,
                          "l": 1,
                          "r": 1,
                          "t": 1
                        },
                        "rounded": {
                          "bl": 8,
                          "br": 8,
                          "tl": 8,
                          "tr": 8
                        }
                      },
                      "layout": {
                        "dir": "row",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "left"
                      },
                      "padding": {
                        "b": 5,
                        "l": 7,
                        "r": 7,
                        "t": 5
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "border": {
                    "color": "",
                    "style": "solid",
                    "stroke": {
                      "b": 0,
                      "l": 0,
                      "r": 0,
                      "t": 0
                    }
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 20,
                    "t": 0
                  }
                }
              },
              {
                "id": "vh9jq4zaryn14s4y0h76xbie",
                "adv": {
                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "text-field",
                "type": "item",
                "childs": [
                  {
                    "id": "t3css3mxn19o63k5l06l38v8",
                    "adv": {
                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDTHH:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`,\n  )}\n/>",
                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let t=form[name]||\"\";return type===\"date\"&&!isEditor?moment(t).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(t).format(\"YYYY-MM-DDTHH:mm\")||\"\":t})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:t=>{let e=form,r=name;e[r]=t.currentTarget.value,type===\"date\"&&(e[r]=new Date(e[r])),type===\"datetime\"&&(e[r]=new Date(e[r])),typeof change==\"function\"&&change(t.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "field",
                    "type": "item",
                    "childs": [],
                    "mobile": {
                      "dim": {
                        "h": 42,
                        "w": "full"
                      },
                      "border": {
                        "color": "#e9e9e9",
                        "style": "solid",
                        "stroke": {
                          "b": 1,
                          "l": 1,
                          "r": 1,
                          "t": 1
                        },
                        "rounded": {
                          "bl": 8,
                          "br": 8,
                          "tl": 8,
                          "tr": 8
                        }
                      },
                      "layout": {
                        "dir": "row",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "left"
                      },
                      "padding": {
                        "b": 3,
                        "l": 7,
                        "r": 7,
                        "t": 3
                      }
                    },
                    "originalId": "k8rm1atyzo39875wu7dik7fe"
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "border": {
                    "color": "",
                    "style": "solid",
                    "stroke": {
                      "b": 0,
                      "l": 0,
                      "r": 0,
                      "t": 0
                    }
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 20,
                    "t": 0
                  }
                },
                "originalId": "djjmjfnnt9tvn00hinec3gog"
              },
              {
                "id": "f83c30w2xxtswznuo6boui1w",
                "adv": {
                  "js": "<>{type === \"toggle\" && <div {...props}>{children}</div>}</>",
                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"toggle\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "toggle",
                "type": "item",
                "childs": [
                  {
                    "id": "rw5zfz2mzzr6632cr5cbtgu3",
                    "adv": {
                      "js": "<label className=\"switch\" {...props}>\n  <input\n    {...props}\n    placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n    type={\"checkbox\"}\n    checked={(() => {\n      const val = form[name] || false;\n      return val;\n    })()}\n    onChange={(e) => {\n      const f = form as unknown as {\n        _error: Record<string, string>;\n        _valid: boolean;\n        render: () => void;\n      };\n      const n = name as any;\n\n      f[n] = e.target.checked;\n\n      // if (!f._error) f._error = {};\n      // if (required === \"y\" && !f[n]) {\n      //   f._error[n] = `${label} harus terisi.`;\n      // } else {\n      //   delete f._error[n];\n      // }\n\n      // if (Object.keys(f._error).length > 0) {\n      //   f._valid = false;\n      // } else {\n      //   f._valid = true;\n      // }\n\n      f.render();\n    }}\n  />\n  <span className=\"slider round\"></span>\n  <p\n    style={\n      form[name] === true\n        ? {\n            position: \"absolute\",\n            left: \"15px\",\n            fontWeight: \"bold\",\n            color: \"white\",\n          }\n        : {\n            position: \"absolute\",\n            right: \"15px\",\n            fontWeight: \"bold\",\n            color: \"black\",\n          }\n    }\n  >\n    {form[name] === true ? \"Ya\" : \"Tidak\"}\n  </p>\n</label>",
                      "css": "& {\n  display: flex;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 100px;\n    height: 34px;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }\n\n  input:checked+.slider {\n    background-color: #159895;\n  }\n\n  input:focus+.slider {\n    box-shadow: 0 0 1px #159895;\n  }\n\n  input:checked+.slider:before {\n    -webkit-transform: translateX(62px);\n    -ms-transform: translateX(62px);\n    transform: translateX(62px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n\n}",
                      "jsBuilt": "render(React.createElement(\"label\",{className:\"switch\",...props},React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",type:\"checkbox\",checked:(()=>form[name]||!1)(),onChange:e=>{let o=form,a=name;o[a]=e.target.checked,o.render()}}),React.createElement(\"span\",{className:\"slider round\"}),React.createElement(\"p\",{style:form[name]===!0?{position:\"absolute\",left:\"15px\",fontWeight:\"bold\",color:\"white\"}:{position:\"absolute\",right:\"15px\",fontWeight:\"bold\",color:\"black\"}},form[name]===!0?\"Ya\":\"Tidak\")));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "field",
                    "type": "item",
                    "childs": [],
                    "mobile": {
                      "dim": {
                        "h": 34,
                        "w": 100,
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "border": {
                        "color": "#e9e9e9",
                        "style": "solid",
                        "stroke": {
                          "b": 0,
                          "l": 0,
                          "r": 0,
                          "t": 0
                        },
                        "rounded": {
                          "bl": 8,
                          "br": 8,
                          "tl": 8,
                          "tr": 8
                        }
                      },
                      "layout": {
                        "dir": "row",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "center"
                      },
                      "padding": {
                        "b": 0,
                        "l": 0,
                        "r": 0,
                        "t": 0
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "border": {
                    "color": "",
                    "style": "solid",
                    "stroke": {
                      "b": 0,
                      "l": 0,
                      "r": 0,
                      "t": 0
                    }
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "left"
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 20,
                    "t": 0
                  }
                }
              },
              {
                "id": "kptna7o6yvxi8siixkcn9pex",
                "adv": {
                  "js": "<>{type === \"attachment\" && <div {...props}>{children}</div>}</>",
                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"attachment\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "attachment",
                "type": "item",
                "childs": [
                  {
                    "id": "bqh84wpqgtkjptkmujx75q7z",
                    "adv": {
                      "js": "<input\n  {...props}\n  // placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  type={\"file\"}\n  onChange={async (e) => {\n    const check_type = e.currentTarget.files[0].type;\n    const check_name = e.currentTarget.files[0].name;\n    let a = await api._upload(e.currentTarget.files[0]);\n\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = { typefile: check_type, url: a, name_file: check_name };\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\n    font-weight: bold;\n\n    &:focus {\n      border-color: green;\n    }\n    `,\n  )}\n/>;",
                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                      "jsBuilt": "render(React.createElement(\"input\",{...props,type:\"file\",onChange:async a=>{let l=a.currentTarget.files[0].type,n=a.currentTarget.files[0].name,o=await api._upload(a.currentTarget.files[0]),e=form,r=name;e[r]={typefile:l,url:o,name_file:n},e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\n    font-weight: bold;\n\n    &:focus {\n      border-color: green;\n    }\n    `)}));\n"
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "field",
                    "type": "item",
                    "childs": [],
                    "mobile": {
                      "bg": {
                        "pos": "center",
                        "size": "cover",
                        "color": ""
                      },
                      "dim": {
                        "h": 42,
                        "w": "full",
                        "wUnit": "%"
                      },
                      "border": {
                        "color": "#e9e9e9",
                        "style": "solid",
                        "stroke": {
                          "b": 1,
                          "l": 1,
                          "r": 1,
                          "t": 1
                        },
                        "rounded": {
                          "bl": 8,
                          "br": 8,
                          "tl": 8,
                          "tr": 8
                        }
                      },
                      "layout": {
                        "dir": "row",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "left"
                      },
                      "padding": {
                        "b": 3,
                        "l": 7,
                        "r": 7,
                        "t": 3
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "border": {
                    "color": "",
                    "style": "solid",
                    "stroke": {
                      "b": 0,
                      "l": 0,
                      "r": 0,
                      "t": 0
                    }
                  },
                  "padding": {
                    "b": 0,
                    "l": 20,
                    "r": 20,
                    "t": 0
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "full",
                "w": "full",
                "hUnit": "px",
                "wUnit": "px"
              }
            }
          },
          {
            "id": "gweov0ufefa0fpp3f4dv8c5o",
            "adv": {
              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
              "css": "",
              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "error-msg",
            "type": "item",
            "childs": [],
            "mobile": {
              "font": {
                "size": 15,
                "align": "left",
                "color": "#f84848",
                "family": "Poppins",
                "height": "auto",
                "wordBreak": "break-normal",
                "whitespace": "whitespace-normal"
              },
              "padding": {
                "b": 3,
                "l": 20,
                "r": 20,
                "t": 3
              }
            }
          }
        ],
        "mobile": {
          "dim": {
            "h": "fit",
            "w": "full"
          },
          "font": {
            "size": 15,
            "align": "left",
            "family": "Poppins",
            "height": "auto",
            "wordBreak": "break-normal",
            "whitespace": "whitespace-normal"
          }
        }
      }
    ],
    "mobile": {
      "dim": {
        "h": "fit",
        "w": "full"
      },
      "padding": {
        "b": 7,
        "l": 0,
        "r": 0,
        "t": 0
      }
    },
    "component": {
      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
      "group": {
        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
      },
      "props": {
        "name": {
          "idx": 3,
          "meta": {
            "type": "text"
          },
          "name": "prop",
          "type": "string",
          "value": "\"id_category\"",
          "valueBuilt": "\"id_category\";\n"
        },
        "type": {
          "gen": "async () => {}",
          "idx": 5,
          "meta": {
            "type": "option",
            "options": "[\n  {\n    label: \"text\",\n    value: \"text\",\n  },\n  {\n    label: \"password\",\n    value: \"password\",\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\",\n  },\n  {\n    label: \"date\",\n    value: \"date\",\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\",\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\",\n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\",\n  },\n]",
            "optionsBuilt": "[{label:\"text\",value:\"text\"},{label:\"password\",value:\"password\"},{label:\"dropdown\",value:\"dropdown\"},{label:\"date\",value:\"date\"},{label:\"datetime\",value:\"datetime\"},{label:\"textarea\",value:\"textarea\"},{label:\"toggle\",value:\"toggle\"}];\n"
          },
          "name": "prop",
          "type": "string",
          "value": "\"dropdown\"",
          "option": "[\n  {\n    label: \"text\",\n    value: \"text\",\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\",\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\",\n  },\n  {\n    label: \"password\",\n    value: \"password\",\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\",\n  },\n  {\n    label: \"date\",\n    value: \"date\",\n  },\n  {\n    label: \"attachment\",\n    value: \"attachment\",\n  },\n]",
          "visible": "true",
          "valueBuilt": "\"dropdown\";\n"
        },
        "items": {
          "idx": 30,
          "meta": {
            "type": "text"
          },
          "name": "prop",
          "type": "() => any[] | Promise<any[]>",
          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
          "visible": "type === \"dropdown\"",
          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
        },
        "label": {
          "idx": 4,
          "meta": {
            "type": "text"
          },
          "name": "prop",
          "type": "string",
          "value": "\"Category\"",
          "valueBuilt": "\"Category\";\n"
        },
        "change": {
          "idx": 8,
          "meta": {
            "type": "text"
          },
          "name": "prop",
          "type": "() => void | Promise<void>",
          "value": "async (val) => {}",
          "valueBuilt": " async a=>{};\n"
        },
        "readonly": {
          "idx": 7,
          "meta": {
            "type": "option",
            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
          },
          "name": "prop",
          "type": "string",
          "value": "\"n\"",
          "option": "[\n  {\n    label: \"yes\",\n    value: \"y\"\n  },\n  {\n    label: \"no\",\n    value: \"n\"\n  },\n]",
          "valueBuilt": "\"n\";\n"
        },
        "required": {
          "idx": 6,
          "meta": {
            "type": "option",
            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
          },
          "name": "prop",
          "type": "string",
          "value": "\"n\"",
          "valueBuilt": "\"n\";\n"
        },
        "placeholder": {
          "idx": 20,
          "meta": {
            "type": "text"
          },
          "name": "prop",
          "type": "string",
          "value": "\"-\"",
          "visible": "type === 'text' || type === \"textarea\"",
          "valueBuilt": "\"-\";\n"
        },
        "autocomplete": {
          "idx": 21,
          "meta": {
            "type": "option",
            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
          },
          "name": "prop",
          "type": "string",
          "value": "\"on\"",
          "visible": "type === \"password\" || type === \"text\"",
          "valueBuilt": "\"on\";\n"
        }
      }
    }
  },
  "created_at": "2023-09-12T00:35:11.472Z",
  "updated_at": "2023-11-10T08:30:24.567Z",
  "type": "item",
  "id_component_group": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc",
  "props": []
}