{
  "id": "b0bf38be-3592-4947-b076-47444ae97d21",
  "name": "form-logbook",
  "content_tree": {
    "id": "z36cgczugeue2c7j5evs8lff",
    "adv": {
      "js": "<div {...props}>{children}</div>",
      "css": "",
      "html": ""
    },
    "name": "form-logbook",
    "type": "item",
    "childs": [
      {
        "id": "b7h7l29pzvowffxk4vhacenw",
        "adv": {
          "js": "<div {...props}>\n  <Local\n    name=\"form\"\n    value={{\n      _valid: true,\n      _error: {},\n      _loading: isEditor ? false : true,\n      _saving: false,\n      _submit: async () => {},\n      _delete: async () => {},\n      _deleting: false,\n      date: new Date(),\n      total_score: 0,\n      notes: \"\",\n      verified: false,\n      multi_verified: false,\n      id_hospital: 0,\n      id_staff: 0,\n      id_participant: 0,\n      id_stase: 0,\n      id_another_role: 0,\n      is_presentation: false,\n      m_action: {\n        id: 0,\n        name: \"\",\n        has_notes: false,\n        has_category: false,\n        has_attachment: false,\n        is_milestone: false,\n        show_on_milestone: false,\n        multiple_verification: false,\n        has_score: false,\n        has_presentation: false,\n        has_location: false,\n        has_emr: false,\n        has_another_role: false,\n        has_operation_code: false,\n        has_title: false,\n        has_status: false,\n        attachment_name: [],\n        has_score_option: false,\n        has_hospital: false,\n        m_action_rolemap: [],\n        m_action_type: null,\n      },\n      title: \"\",\n    }}\n    cache={false}\n    effect={async (local) => {\n      local.render();\n      sessionStorage.setItem(\"previousPage\", window.location.href);\n      const params_id = params.id;\n      if (params.id_action !== undefined) {\n        local.render();\n        local.m_action = (await db.m_action.findFirst({\n          where: {\n            id: { equals: Number(params.id_action) },\n          },\n          include: {\n            m_action_rolemap: {\n              where: {\n                type: \"verificator\",\n              },\n              include: {\n                m_action_role: true,\n              },\n            },\n            m_action_type: true,\n          },\n        })) as any;\n        local.render();\n      }\n\n      if (\n        params_id !== \"new\" &&\n        !isNaN(parseInt(params_id)) &&\n        params_id !== null &&\n        params_id\n      ) {\n        const data = await db.t_logbook.findFirst({\n          where: {\n            id: parseInt(params_id),\n          },\n          select: {\n            id_hospital: true,\n            id: true,\n            date: true,\n            notes: true,\n            verified: true,\n            title: true,\n            id_user: true,\n            id_category: true,\n            id_stase: true,\n            location: true,\n            id_another_role: true,\n            is_presentation: true,\n          },\n        });\n\n        if (user.role === \"staff\" && params_id) {\n          let total = await db.t_logbook_asm.groupBy({\n            by: [\"id_logbook\"],\n            where: {\n              id_client: Number(user.id_client),\n              id_logbook: Number(params_id),\n            },\n            _sum: {\n              score: true,\n            },\n            _avg: {\n              score: true,\n            },\n          });\n          let data_score = await db.t_logbook_asm.findMany({\n            where: {\n              id_client: Number(user.id_client),\n              id_logbook: Number(params_id),\n            },\n          });\n          data_score?.map((item) => {\n            local[`asm_param_${Number(params_id)}_${item.id_asm_param}`] =\n              item.score;\n            local.render();\n          });\n          if (total && total.length !== 0) {\n            local.total_score = total[0]._avg.score;\n            local.render();\n          }\n          let data_attachment = await db.t_logbook_attachment.findMany({\n            where: {\n              id_client: user.id_client,\n              id_logbook: Number(params_id),\n            },\n          });\n          data_attachment?.map(async (item, index) => {\n            const response = await fetch(`${apiurl}${item.url_file}`);\n            const blob = await response.blob();\n            const filenya = new File([blob], item?.name, { type: blob.type });\n            local[`${item.name}_${index + 1}`] = {\n              typefile: blob.type,\n              name_file: item.url_file.replace(\n                `/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\n                \"\",\n              ),\n              url: item.url_file,\n            };\n            local.render();\n          });\n          local.id_participant = data.id_user;\n          local.id_staff = user.id;\n          local.render();\n        }\n        if (user.role === \"institution\" && params_id) {\n          let total = await db.t_logbook_asm.groupBy({\n            by: [\"id_logbook\"],\n            where: {\n              id_client: Number(user.id_client),\n              id_logbook: Number(params_id),\n            },\n            _sum: {\n              score: true,\n            },\n            _avg: {\n              score: true,\n            },\n          });\n          let data_score = await db.t_logbook_asm.findMany({\n            where: {\n              id_client: Number(user.id_client),\n              id_logbook: Number(params_id),\n            },\n          });\n          data_score?.map((item) => {\n            local[`asm_param_${Number(params_id)}_${item.id_asm_param}`] =\n              item.score;\n            local.render();\n          });\n          if (total && total.length !== 0) {\n            local.total_score = total[0]._avg.score;\n            local.render();\n          }\n          let data_attachment = await db.t_logbook_attachment.findMany({\n            where: {\n              id_client: user.id_client,\n              id_logbook: Number(params_id),\n            },\n          });\n          data_attachment?.map(async (item, index) => {\n            const response = await fetch(`${apiurl}${item.url_file}`);\n            const blob = await response.blob();\n            const filenya = new File([blob], item?.name, { type: blob.type });\n            local[`${item.name}_${index + 1}`] = {\n              typefile: blob.type,\n              name_file: item.url_file.replace(\n                `/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\n                \"\",\n              ),\n              url: item.url_file,\n            };\n            local.render();\n          });\n          local.id_participant = data.id_user;\n          const data_staff = await db.t_logbook_status.findFirst({\n            where: {\n              id_logbook: parseInt(params_id),\n              id_action_role: {\n                not: 1,\n              },\n            },\n            include: {\n              m_user: {\n                select: {\n                  display_name: true,\n                  id: true,\n                },\n              },\n            },\n          });\n          if (data_staff) {\n            local.id_staff = Number(data_staff.m_user.id);\n          }\n          local.render();\n        }\n        if (user.role === \"ppds\" && params_id) {\n          if (local.m_action.multiple_verification !== true) {\n            const data_staff = await db.t_logbook_status.findFirst({\n              where: {\n                id_logbook: parseInt(params_id),\n                id_action_role: {\n                  not: 1,\n                },\n              },\n              include: {\n                m_user: {\n                  select: {\n                    display_name: true,\n                    id: true,\n                  },\n                },\n              },\n            });\n            if (data_staff) {\n              local.id_staff = Number(data_staff.m_user.id);\n            }\n          } else {\n            let data_staff = await db.m_action_rolemap.findMany({\n              where: {\n                id_action: Number(params.id_action),\n                id_client: user.id_client,\n                type: { equals: \"verificator\" },\n              },\n              include: {\n                m_action_role: true,\n              },\n            });\n            let multi_verified = [];\n            data_staff?.map(async (item) => {\n              let staff_id = await db.t_logbook_status.findFirst({\n                where: {\n                  id_action_role: Number(item.id_action_role),\n                  id_client: user.id_client,\n                  id_logbook: Number(params_id),\n                },\n              });\n              if (staff_id.status === \"verified\") {\n                multi_verified.push(staff_id);\n              }\n              if (staff_id) {\n                local[`staff_${item.m_action_role.identifier}`] =\n                  staff_id.id_user;\n                local.render();\n              }\n            });\n            if (Number(data_staff.length) === Number(multi_verified.length)) {\n              local.multi_verified = true;\n              local.render();\n            }\n          }\n          let data_attachment = await db.t_logbook_attachment.findMany({\n            where: {\n              id_client: user.id_client,\n              id_logbook: Number(params_id),\n            },\n          });\n          data_attachment?.map(async (item, index) => {\n            const response = await fetch(`${apiurl}${item.url_file}`);\n            const blob = await response.blob();\n            const filenya = new File([blob], item?.name, { type: blob.type });\n            console.log(filenya, \"file\");\n            local[`${item.name}_${index + 1}`] = {\n              typefile: blob.type,\n              name_file: item.url_file.replace(\n                `/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\n                \"\",\n              ),\n              url: item.url_file,\n            };\n            local.render();\n          });\n\n          local.id_participant = user.id;\n          local.render();\n        }\n\n        if (local.m_action.has_emr === true && params_id) {\n          let data_emr = await db.t_logbook_emr.findFirst({\n            where: {\n              id_client: user.id_client,\n              id_logbook: Number(params_id),\n            },\n          });\n          console.log(data_emr, \"hai\");\n          if (data_emr) {\n            local[\"emr_number\"] = data_emr.emr_number;\n            local[\"age\"] = data_emr.age;\n            local[\"gender\"] = data_emr.gender;\n            local[\"diagnosis\"] = data_emr.diagnosis;\n            local[\"treatment\"] = data_emr.treatment;\n            local.render();\n          } else {\n            local[\"emr_number\"] = \"\";\n            local[\"age\"] = \"\";\n            local[\"gender\"] = \"\";\n            local[\"diagnosis\"] = \"\";\n            local[\"treatment\"] = \"\";\n            local.render();\n          }\n        }\n\n        if (data) {\n          for (const [k, v] of Object.entries(data)) {\n            local[k] = v;\n          }\n        }\n      }\n\n      local._loading = false;\n      local.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
          "css": "",
          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"form\",value:{_valid:!0,_error:{},_loading:!isEditor,_saving:!1,_submit:async()=>{},_delete:async()=>{},_deleting:!1,date:new Date,total_score:0,notes:\"\",verified:!1,multi_verified:!1,id_hospital:0,id_staff:0,id_participant:0,id_stase:0,id_another_role:0,is_presentation:!1,m_action:{id:0,name:\"\",has_notes:!1,has_category:!1,has_attachment:!1,is_milestone:!1,show_on_milestone:!1,multiple_verification:!1,has_score:!1,has_presentation:!1,has_location:!1,has_emr:!1,has_another_role:!1,has_operation_code:!1,has_title:!1,has_status:!1,attachment_name:[],has_score_option:!1,has_hospital:!1,m_action_rolemap:[],m_action_type:null},title:\"\"},cache:!1,effect:async e=>{e.render(),sessionStorage.setItem(\"previousPage\",window.location.href);let t=params.id;if(params.id_action!==void 0&&(e.render(),e.m_action=await db.m_action.findFirst({where:{id:{equals:Number(params.id_action)}},include:{m_action_rolemap:{where:{type:\"verificator\"},include:{m_action_role:!0}},m_action_type:!0}}),e.render()),t!==\"new\"&&!isNaN(parseInt(t))&&t!==null&&t){let s=await db.t_logbook.findFirst({where:{id:parseInt(t)},select:{id_hospital:!0,id:!0,date:!0,notes:!0,verified:!0,title:!0,id_user:!0,id_category:!0,id_stase:!0,location:!0,id_another_role:!0,is_presentation:!0}});if(user.role===\"staff\"&&t){let i=await db.t_logbook_asm.groupBy({by:[\"id_logbook\"],where:{id_client:Number(user.id_client),id_logbook:Number(t)},_sum:{score:!0},_avg:{score:!0}});(await db.t_logbook_asm.findMany({where:{id_client:Number(user.id_client),id_logbook:Number(t)}}))?.map(n=>{e[`asm_param_${Number(t)}_${n.id_asm_param}`]=n.score,e.render()}),i&&i.length!==0&&(e.total_score=i[0]._avg.score,e.render()),(await db.t_logbook_attachment.findMany({where:{id_client:user.id_client,id_logbook:Number(t)}}))?.map(async(n,a)=>{let d=await(await fetch(`${apiurl}${n.url_file}`)).blob(),u=new File([d],n?.name,{type:d.type});e[`${n.name}_${a+1}`]={typefile:d.type,name_file:n.url_file.replace(`/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\"\"),url:n.url_file},e.render()}),e.id_participant=s.id_user,e.id_staff=user.id,e.render()}if(user.role===\"institution\"&&t){let i=await db.t_logbook_asm.groupBy({by:[\"id_logbook\"],where:{id_client:Number(user.id_client),id_logbook:Number(t)},_sum:{score:!0},_avg:{score:!0}});(await db.t_logbook_asm.findMany({where:{id_client:Number(user.id_client),id_logbook:Number(t)}}))?.map(a=>{e[`asm_param_${Number(t)}_${a.id_asm_param}`]=a.score,e.render()}),i&&i.length!==0&&(e.total_score=i[0]._avg.score,e.render()),(await db.t_logbook_attachment.findMany({where:{id_client:user.id_client,id_logbook:Number(t)}}))?.map(async(a,o)=>{let u=await(await fetch(`${apiurl}${a.url_file}`)).blob(),f=new File([u],a?.name,{type:u.type});e[`${a.name}_${o+1}`]={typefile:u.type,name_file:a.url_file.replace(`/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\"\"),url:a.url_file},e.render()}),e.id_participant=s.id_user;let n=await db.t_logbook_status.findFirst({where:{id_logbook:parseInt(t),id_action_role:{not:1}},include:{m_user:{select:{display_name:!0,id:!0}}}});n&&(e.id_staff=Number(n.m_user.id)),e.render()}if(user.role===\"ppds\"&&t){if(e.m_action.multiple_verification!==!0){let r=await db.t_logbook_status.findFirst({where:{id_logbook:parseInt(t),id_action_role:{not:1}},include:{m_user:{select:{display_name:!0,id:!0}}}});r&&(e.id_staff=Number(r.m_user.id))}else{let r=await db.m_action_rolemap.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client,type:{equals:\"verificator\"}},include:{m_action_role:!0}}),_=[];r?.map(async n=>{let a=await db.t_logbook_status.findFirst({where:{id_action_role:Number(n.id_action_role),id_client:user.id_client,id_logbook:Number(t)}});a.status===\"verified\"&&_.push(a),a&&(e[`staff_${n.m_action_role.identifier}`]=a.id_user,e.render())}),Number(r.length)===Number(_.length)&&(e.multi_verified=!0,e.render())}(await db.t_logbook_attachment.findMany({where:{id_client:user.id_client,id_logbook:Number(t)}}))?.map(async(r,_)=>{let a=await(await fetch(`${apiurl}${r.url_file}`)).blob(),o=new File([a],r?.name,{type:a.type});console.log(o,\"file\"),e[`${r.name}_${_+1}`]={typefile:a.type,name_file:r.url_file.replace(`/_file/${new Date().getFullYear()}-${new Date().getMonth()}/${new Date().getDate()}/`,\"\"),url:r.url_file},e.render()}),e.id_participant=user.id,e.render()}if(e.m_action.has_emr===!0&&t){let i=await db.t_logbook_emr.findFirst({where:{id_client:user.id_client,id_logbook:Number(t)}});console.log(i,\"hai\"),i?(e.emr_number=i.emr_number,e.age=i.age,e.gender=i.gender,e.diagnosis=i.diagnosis,e.treatment=i.treatment,e.render()):(e.emr_number=\"\",e.age=\"\",e.gender=\"\",e.diagnosis=\"\",e.treatment=\"\",e.render())}if(s)for(let[i,r]of Object.entries(s))e[i]=r}e._loading=!1,e.render()}},children)));\n"
        },
        "dim": {
          "h": "fit",
          "w": "fit"
        },
        "name": "body",
        "type": "item",
        "childs": [
          {
            "id": "ut0k6ve6kmpkemh7kz8c16jc",
            "adv": {
              "css": ""
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "top",
            "type": "item",
            "childs": [
              {
                "id": "nbwzutazg9nylz5jpkcvqgdb",
                "adv": {},
                "name": "title-back",
                "type": "item",
                "childs": [],
                "component": {
                  "id": "a88a28fb-cc37-4910-8ebb-0bd20444d8f4",
                  "props": {
                    "url": {
                      "idx": 2,
                      "meta": {
                        "type": "text",
                        "oldName": "new_prop"
                      },
                      "type": "string",
                      "value": "Number(params.id_action) !== 9\n  ?  \"null\"\n  // `/${user.role}/list/${params.id_action}`\n  : (user.role === \"staff\" || user.role === \"institution\")\n  ? \"/staff-pengajar/milestone\"\n  : \"/ppds/milestone\"",
                      "valueBuilt": " Number(params.id_action)!==9?\"null\":user.role===\"staff\"||user.role===\"institution\"?\"/staff-pengajar/milestone\":\"/ppds/milestone\";\n"
                    },
                    "label": {
                      "idx": 1,
                      "meta": {
                        "type": "text",
                        "oldName": "new_prop"
                      },
                      "type": "string",
                      "value": "params.id !== \"new\" &&\n(user.role === \"staff\" || user.role === \"institution\") &&\nNumber(params.id_action) !== 9\n  ? `Detail ${form.m_action.name}`\n  : params.id !== \"new\" &&\n    user.role === \"ppds\" &&\n    Number(params.id_action) !== 9\n  ? `${form.verified === true ? \"Detail\" : \"Update\"} ${form.m_action.name}`\n  : params.id !== \"new\" &&\n    (user.role === \"staff\" || user.role === \"institution\") &&\n    Number(params.id_action) === 9\n  ? \"Update Milestone\"\n  : params.id !== \"new\" &&\n    user.role === \"ppds\" &&\n    Number(params.id_action) === 9\n  ? \"Detail Milestone\"\n  : `Tambah ${form.m_action.name}`",
                      "valueBuilt": " params.id!==\"new\"&&(user.role===\"staff\"||user.role===\"institution\")&&Number(params.id_action)!==9?`Detail ${form.m_action.name}`:params.id!==\"new\"&&user.role===\"ppds\"&&Number(params.id_action)!==9?`${form.verified===!0?\"Detail\":\"Update\"} ${form.m_action.name}`:params.id!==\"new\"&&(user.role===\"staff\"||user.role===\"institution\")&&Number(params.id_action)===9?\"Update Milestone\":params.id!==\"new\"&&user.role===\"ppds\"&&Number(params.id_action)===9?\"Detail Milestone\":`Tambah ${form.m_action.name}`;\n"
                    },
                    "name_page": {
                      "idx": 2,
                      "meta": {
                        "type": "text"
                      },
                      "name": "prop",
                      "type": "string",
                      "value": "form.m_action.name",
                      "valueBuilt": " form.m_action.name;\n"
                    }
                  },
                  "updated_at": 1691568262168
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          },
          {
            "id": "f3dhnr0qkwtl9wzvqkej3h0x",
            "adv": {
              "css": "& {\n  display: flex;\n  overflow: auto;\n\n  .shine {\n    background: #f6f7f8;\n    background-image: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: relative;\n\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: placeholderShimmer;\n    animation-timing-function: linear;\n  }\n\n  @keyframes placeholderShimmer {\n    0% {\n      background-position: -468px 0;\n    }\n\n    100% {\n      background-position: 468px 0;\n    }\n  }\n}"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "scroll",
            "type": "item",
            "childs": [
              {
                "id": "byve4a7bxgpyk1914tb2vqmg",
                "adv": {
                  "js": "<>{!form._loading && <div {...props}>{children}</div>}</>",
                  "css": "& {\n  display: flex;\n  position:absolute;\n  top:0;\n  left:0;\n  right:0;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,!form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "name": "ready",
                "type": "item",
                "childs": [
                  {
                    "id": "vdohyw83nswzaqt1vcohtln5",
                    "adv": {},
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "form",
                    "type": "item",
                    "childs": [
                      {
                        "id": "zuzw851jvikisc05c0gu0vkb",
                        "adv": {
                          "js": "<div {...props}>{content}</div>",
                          "jsBuilt": "render(React.createElement(\"div\",{...props},content));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full"
                          }
                        },
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full"
                      }
                    },
                    "component": {
                      "id": "7233d1df-6c61-478f-860b-6a3c99ce6b4f",
                      "group": {
                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                        "name": "All"
                      },
                      "props": {
                        "debug": {
                          "idx": 2,
                          "meta": {
                            "type": "option"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"n\"",
                          "valueBuilt": "\"n\";\n"
                        },
                        "content": {
                          "idx": 2,
                          "meta": {
                            "type": "content-element",
                            "oldName": "children"
                          },
                          "type": "ReactElement",
                          "value": "<></>",
                          "content": {
                            "id": "syp4mvqfnyk1jvfiwqxejt3b",
                            "dim": {
                              "h": "full",
                              "w": "full"
                            },
                            "name": "content",
                            "type": "item",
                            "childs": [
                              {
                                "id": "dddgykfk1xcf1eaz0zmcnnzq",
                                "adv": {
                                  "js": "<>\n  {((user.role === \"ppds\" && form?.m_action?.multiple_verification !== true) ||\n    (user.role === \"institution\" && Number(params.id_action) === 9)) && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"ppds\"&&form?.m_action?.multiple_verification!==!0||user.role===\"institution\"&&Number(params.id_action)===9)&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "staff_pengajar",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "edc42fvhhpt824lgc5ismtwa",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_staff\"",
                                          "valueBuilt": "\"id_staff\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "sepcqji32zxi3sm2mnh4nj67",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n      is_show: true,\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2,is_show:!0,id_client:Number(user.id_client)}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form?.m_action?.m_action_rolemap[0]?.m_action_role?.role || \"Staff Pengajar\"",
                                          "valueBuilt": " form?.m_action?.m_action_rolemap[0]?.m_action_role?.role||\"Staff Pengajar\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {\n  console.log(form, 'formdata')\n}",
                                          "valueBuilt": " async o=>{console.log(form,\"formdata\")};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "(form.verified || user.role === \"staff\") && Number(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": "(form.verified||user.role===\"staff\")&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "bg": {
                                    "color": ""
                                  },
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                }
                              },
                              {
                                "id": "xqvu9i0wjtrqv8wacbk6g6wi",
                                "adv": {
                                  "js": "<>\n  {user.role === \"ppds\" && form?.m_action?.multiple_verification === true && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form?.m_action?.multiple_verification===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "multi_verificator",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "ikhk47qnmovhvql3edqqzyj7",
                                    "name": "loader",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                                      "props": {
                                        "load": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  return {};\n}",
                                          "valueBuilt": " async()=>({});\n"
                                        },
                                        "mode": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"sample\"",
                                          "valueBuilt": "\"sample\";\n"
                                        },
                                        "debug": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "ready": {
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "content": {
                                            "id": "gw2cjdpm8wui5ksbgjqh1qnq",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "ready",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "nbssms3bt7y467agfbnndvh8",
                                                "adv": {
                                                  "js": "<div {...props}>\n  {(data?.rolemap || []).map((item, idx) => {\n    return (\n      <PassProp y={item} key={idx} idx={idx}>\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(data?.rolemap||[]).map((a,r)=>React.createElement(PassProp,{y:a,key:r,idx:r},children))));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "items",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "d5fy13d262dr05fhd0q9bf8w",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "xxhzymy2qd5o9ag3y4vpcjji",
                                                        "adv": {
                                                          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "box",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "e2btj1tk14hhkbppkv9gnerz",
                                                            "adv": {
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "label",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "tlybhetmsupytl6d090ie9ez",
                                                                "adv": {
                                                                  "js": "<div {...props}>{label}</div>",
                                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "var",
                                                                "type": "item",
                                                                "childs": [],
                                                                "originalId": "m4r0z9suwha1g09fxevfcmrf"
                                                              },
                                                              {
                                                                "id": "uqaphlesx24wzj44fewj4ltl",
                                                                "adv": {
                                                                  "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "*",
                                                                "name": "required",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "fit"
                                                                  },
                                                                  "font": {
                                                                    "size": 20,
                                                                    "align": "left",
                                                                    "color": "#ff0000",
                                                                    "height": 115,
                                                                    "wordBreak": "break-normal",
                                                                    "whitespace": "whitespace-normal"
                                                                  },
                                                                  "layout": {
                                                                    "dir": "col",
                                                                    "gap": 0,
                                                                    "align": "center"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 8,
                                                                    "r": 8,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "pz6rmkkydsf6ed84kbibpgiw"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "layout": {
                                                                "dir": "row",
                                                                "gap": 0,
                                                                "wrap": "flex-nowrap",
                                                                "align": "top-left"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 0,
                                                                "t": 10
                                                              }
                                                            },
                                                            "originalId": "rza1e04j7nenof5nwbmjt024"
                                                          },
                                                          {
                                                            "id": "rledr3mnmlfx052qckfyimrh",
                                                            "adv": {
                                                              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "readonly",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "bfdjbj7lwacpzuzhozs3in8s",
                                                                "adv": {
                                                                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "",
                                                                "name": "value",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "full",
                                                                    "w": "full"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 10,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "o72t8rhfuf43c4577zthr4q2"
                                                              }
                                                            ],
                                                            "originalId": "ujfkdudtk6xncze1toxemxb6"
                                                          },
                                                          {
                                                            "id": "r6aqr4dnr9apaslg66zienox",
                                                            "adv": {
                                                              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "html": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "name": "editable",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "b31n6w5wrav4nond8aei84et",
                                                                "adv": {
                                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "dropdown",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "diyb5fckau1inksjofp41b29",
                                                                    "adv": {
                                                                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "col",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 8,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 8
                                                                      }
                                                                    },
                                                                    "originalId": "tezr47ujd4ctaooeiolfd5ag"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "ucki05dvk5dibmxpbgmccu3z"
                                                              },
                                                              {
                                                                "id": "z4my4bnve6x7zs2djyqv0hkl",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-area",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "krmanagzeknrwz397vygnost",
                                                                    "adv": {
                                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 86,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 5,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 5
                                                                      }
                                                                    },
                                                                    "originalId": "okffitrdeptxywwjstwr8rpa"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "towi1usdpgkh6doa5f9bvx5l"
                                                              },
                                                              {
                                                                "id": "nfma4a6itk2t33ekxou5hba6",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-field",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "oqpw26ym65yf9znk4yiuwarj",
                                                                    "adv": {
                                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#e9e9e9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 3,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 3
                                                                      }
                                                                    },
                                                                    "originalId": "k0nriizfm3shn9bjulldt726"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "ujj9nd098kvmfiv2q54johbh"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "full",
                                                                "w": "full",
                                                                "hUnit": "px",
                                                                "wUnit": "px"
                                                              }
                                                            },
                                                            "originalId": "n3429xr4tprij4a0ymv3zaqd"
                                                          },
                                                          {
                                                            "id": "vrkit7b79uhohrqmyxh5ms4u",
                                                            "adv": {
                                                              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "error-msg",
                                                            "type": "item",
                                                            "childs": [],
                                                            "mobile": {
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "color": "#f84848",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 3
                                                              }
                                                            },
                                                            "originalId": "ec5cq6f5ayzz1wan26trvxaq"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          }
                                                        },
                                                        "originalId": "y7liv06brmeyrawt8vaz24oy"
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full"
                                                      },
                                                      "padding": {
                                                        "b": 7,
                                                        "l": 0,
                                                        "r": 0,
                                                        "t": 0
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                      "group": {
                                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                      },
                                                      "props": {
                                                        "name": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`staff_${y?.identifier}`",
                                                          "valueBuilt": "`staff_${y?.identifier}`;\n"
                                                        },
                                                        "type": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"dropdown\"",
                                                          "content": {
                                                            "id": "t9953dlzojdxiaq1bg2ns1cq",
                                                            "adv": {
                                                              "css": ""
                                                            },
                                                            "dim": {
                                                              "h": "full",
                                                              "w": "full"
                                                            },
                                                            "name": "type",
                                                            "type": "item",
                                                            "childs": []
                                                          },
                                                          "valueBuilt": "\"dropdown\";\n"
                                                        },
                                                        "items": {
                                                          "idx": 30,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => any[] | Promise<any[]>",
                                                          "value": "async () => {\n  let data_muser = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n      is_show: true,\n      id_client: Number(user.id_client),\n    },\n    select: {\n      display_name: true,\n      id: true,\n    },\n  });\n  let c = [];\n  if (data_muser !== null) {\n    c.push({\n      label: `Pilih Staff`,\n      value: \"null\",\n    });\n    data_muser?.map((item) => {\n      c.push({\n        label: item?.display_name,\n        value: Number(item?.id),\n      });\n    });\n  }\n  return c.length !== 0 ? c : [];\n}",
                                                          "visible": "type === \"dropdown\"",
                                                          "valueBuilt": " async()=>{let l=await db.m_user.findMany({where:{id_role:2,is_show:!0,id_client:Number(user.id_client)},select:{display_name:!0,id:!0}}),e=[];return l!==null&&(e.push({label:\"Pilih Staff\",value:\"null\"}),l?.map(a=>{e.push({label:a?.display_name,value:Number(a?.id)})})),e.length!==0?e:[]};\n"
                                                        },
                                                        "label": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "y?.name",
                                                          "valueBuilt": " y?.name;\n"
                                                        },
                                                        "change": {
                                                          "idx": 8,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => void | Promise<void>",
                                                          "value": "async (val) => {}",
                                                          "valueBuilt": " async a=>{};\n"
                                                        },
                                                        "readonly": {
                                                          "idx": 7,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "(form.verified ||\n  user.role === \"staff\" ||\n  (form.m_action.multiple_verification === true &&\n    form.multi_verified === true)) &&\nNumber(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                                          "valueBuilt": "(form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0)&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                                        },
                                                        "required": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"y\"",
                                                          "valueBuilt": "\"y\";\n"
                                                        },
                                                        "placeholder": {
                                                          "idx": 20,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"-\"",
                                                          "visible": "type === 'text' || type === \"textarea\"",
                                                          "valueBuilt": "\"-\";\n"
                                                        },
                                                        "autocomplete": {
                                                          "idx": 21,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"off\"",
                                                          "visible": "type === \"password\" || type === \"text\"",
                                                          "valueBuilt": "\"off\";\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "pn67lhtyfdmthiwe2svefpqm"
                                                  }
                                                ],
                                                "mobile": {
                                                  "bg": {
                                                    "pos": "center",
                                                    "size": "cover",
                                                    "color": ""
                                                  },
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "wrap": "flex-wrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 0,
                                                    "r": 0,
                                                    "t": 0
                                                  }
                                                },
                                                "originalId": "tobiqmmik59t3y177qawt438"
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "full",
                                                "w": "full"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            },
                                            "originalId": "fb297y96hrerx8ktoegz8zly"
                                          }
                                        },
                                        "sample": {
                                          "idx": 4,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  let data = await db.m_action_rolemap.findMany({\n    where: {\n      id_action: Number(params.id_action),\n      id_client: user.id_client,\n      type: \"verificator\",\n    },\n    select: {\n      id: true,\n      m_action_role: {\n        select: {\n          identifier: true,\n          role: true,\n        },\n      },\n    },\n    orderBy: {\n      m_action_role: {\n        role: 'asc'\n      }\n    }\n  });\n\n  let rolemap = [] as any;\n\n  data?.map((item) => {\n    rolemap.push({\n      identifier: item.m_action_role.identifier,\n      id: item.id,\n      name: item.m_action_role.role\n    });\n  });\n\n  console.log(rolemap, \"coba rolemap\");\n\n  return { rolemap };\n}",
                                          "valueBuilt": " async()=>{let i=await db.m_action_rolemap.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client,type:\"verificator\"},select:{id:!0,m_action_role:{select:{identifier:!0,role:!0}}},orderBy:{m_action_role:{role:\"asc\"}}}),e=[];return i?.map(r=>{e.push({identifier:r.m_action_role.identifier,id:r.id,name:r.m_action_role.role})}),console.log(e,\"coba rolemap\"),{rolemap:e}};\n"
                                        },
                                        "loading": {
                                          "idx": 1,
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"hello\"",
                                          "content": {
                                            "id": "yllv4l06ri8rvy50s93pu6nb",
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "loading",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            },
                                            "originalId": "v8ac6q69u7rxapkdxd0zgnx9",
                                            "parentInstanceId": "vm81u5esw0gsqsjtnnnde9jd"
                                          },
                                          "valueBuilt": "\"hello\""
                                        },
                                        "preview": {
                                          "idx": 2,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"ready\"",
                                          "valueBuilt": "\"ready\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "kvk5zmgc7urwuhbsdf6bercg"
                                  }
                                ],
                                "hidden": false,
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  }
                                },
                                "originalId": "m9d1g676euq85dw042qda72n"
                              },
                              {
                                "id": "zkmv462t5fh81o3git7etqut",
                                "adv": {
                                  "js": "<>\n  {user.role === \"ppds\" && form?.m_action?.multiple_verification === true && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form?.m_action?.multiple_verification===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "multi_verificator",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "ecijvzrsu2eva0b710cl916p",
                                    "adv": {
                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      list_role: [],\n    }}\n    effect={async (local) => {\n      let data = await db.m_action_rolemap.findMany({\n        where: {\n          id_action: Number(params.id_action),\n          id_client: user.id_client,\n          type: \"verificator\",\n        },\n        select: {\n          id: true,\n          m_action_role: {\n            select: {\n              identifier: true,\n              role: true,\n            },\n          },\n        },\n        orderBy: {\n          m_action_role: {\n            role: \"asc\",\n          },\n        },\n      });\n\n      let rolemap = [] as any;\n\n      data?.map((item) => {\n        rolemap.push({\n          identifier: item.m_action_role.identifier,\n          id: item.id,\n          name: item.m_action_role.role,\n        });\n      });\n\n      local.list_role = rolemap;\n      local.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                      "css": "",
                                      "html": "",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{list_role:[]},effect:async i=>{let a=await db.m_action_rolemap.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client,type:\"verificator\"},select:{id:!0,m_action_role:{select:{identifier:!0,role:!0}}},orderBy:{m_action_role:{role:\"asc\"}}}),r=[];a?.map(e=>{r.push({identifier:e.m_action_role.identifier,id:e.id,name:e.m_action_role.role})}),i.list_role=r,i.render()}},children)));\n"
                                    },
                                    "name": "list",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "kdue0i74qp5j9h8ijwcncak6",
                                        "adv": {
                                          "js": "<div {...props}>\n  {(local.list_role || []).map((item, idx) => {\n    return (\n      <PassProp y={item} key={idx}>\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                          "css": "",
                                          "jsBuilt": "render(React.createElement(\"div\",{...props},(local.list_role||[]).map((r,e)=>React.createElement(PassProp,{y:r,key:e},children))));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "items",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "cg7mlvjmfcjxk8gupazrmgj9",
                                            "adv": {
                                              "js": "<div {...props} id={y?.id}>{children}</div>",
                                              "css": "",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,id:y?.id},children));\n"
                                            },
                                            "name": "item",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "urom44g7felrwap7i599pdyq",
                                                "adv": {
                                                  "css": ""
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "vl3qwkkka68jzmc7g1j0ta3j",
                                                    "adv": {
                                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "box",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "qxwhpqyi0p0i8yaoaszmcmo4",
                                                        "adv": {
                                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "label",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "bilbjgmhfskbhrxhf9ztxw1h",
                                                            "adv": {
                                                              "js": "<div {...props}>{label}</div>",
                                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "var",
                                                            "type": "item",
                                                            "childs": [],
                                                            "originalId": "nf9cnv7ghjzeaylxsk80r8yc"
                                                          },
                                                          {
                                                            "id": "ksugebslwt7hlb4kv55w2w5i",
                                                            "adv": {
                                                              "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "full"
                                                            },
                                                            "html": "*",
                                                            "name": "required",
                                                            "text": "",
                                                            "type": "text",
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "fit"
                                                              },
                                                              "font": {
                                                                "size": 20,
                                                                "align": "left",
                                                                "color": "#ff0000",
                                                                "height": 115,
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "layout": {
                                                                "dir": "col",
                                                                "gap": 0,
                                                                "align": "center"
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 8,
                                                                "r": 8,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "z6cezn5g2g4tidmowb1fooo8"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          },
                                                          "layout": {
                                                            "dir": "row",
                                                            "gap": 0,
                                                            "wrap": "flex-nowrap",
                                                            "align": "top-left"
                                                          },
                                                          "padding": {
                                                            "b": 3,
                                                            "l": 20,
                                                            "r": 0,
                                                            "t": 10
                                                          }
                                                        },
                                                        "originalId": "oyg4ahuyrukpgzcnp86a8p0w"
                                                      },
                                                      {
                                                        "id": "hv0ze3p1b80hd3majdr8nl2b",
                                                        "adv": {
                                                          "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                          "css": "",
                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "readonly",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "njx0wie57l8q9dpxpe0v7lf1",
                                                            "adv": {
                                                              "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "full"
                                                            },
                                                            "html": "",
                                                            "name": "value",
                                                            "text": "",
                                                            "type": "text",
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "full",
                                                                "w": "full"
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 20,
                                                                "r": 10,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "f3ukj9lnq8aib60ot3bscpmo"
                                                          }
                                                        ],
                                                        "originalId": "f4nnd6jruxybybqq1ngebdyd"
                                                      },
                                                      {
                                                        "id": "dxnqrclrzp8q15a3gf5u82qp",
                                                        "adv": {
                                                          "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                          "css": "",
                                                          "html": "",
                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                        },
                                                        "name": "editable",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "io61vhec7y4v79dev2pvvb6m",
                                                            "adv": {
                                                              "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "dropdown",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "rzbwpz1fxoj9ltwu45919goc",
                                                                "adv": {
                                                                  "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                  "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "field",
                                                                "type": "item",
                                                                "childs": [],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": 42,
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "#E9E9E9",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 1,
                                                                      "l": 1,
                                                                      "r": 1,
                                                                      "t": 1
                                                                    },
                                                                    "rounded": {
                                                                      "bl": 8,
                                                                      "br": 8,
                                                                      "tl": 8,
                                                                      "tr": 8
                                                                    }
                                                                  },
                                                                  "layout": {
                                                                    "dir": "col",
                                                                    "gap": 0,
                                                                    "wrap": "flex-nowrap",
                                                                    "align": "left"
                                                                  },
                                                                  "padding": {
                                                                    "b": 8,
                                                                    "l": 7,
                                                                    "r": 7,
                                                                    "t": 8
                                                                  }
                                                                },
                                                                "originalId": "u6ri5wnkq1tui3nevd4wpl21"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "border": {
                                                                "color": "",
                                                                "style": "solid",
                                                                "stroke": {
                                                                  "b": 0,
                                                                  "l": 0,
                                                                  "r": 0,
                                                                  "t": 0
                                                                }
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "uik3onxtutfwspz2fe3dnsam"
                                                          },
                                                          {
                                                            "id": "ocfmxu4io60rqvxel9ksnnii",
                                                            "adv": {
                                                              "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "text-area",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "ua94cfncumoge7kfbj9hhwxu",
                                                                "adv": {
                                                                  "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "field",
                                                                "type": "item",
                                                                "childs": [],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": 86,
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "#E9E9E9",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 1,
                                                                      "l": 1,
                                                                      "r": 1,
                                                                      "t": 1
                                                                    },
                                                                    "rounded": {
                                                                      "bl": 8,
                                                                      "br": 8,
                                                                      "tl": 8,
                                                                      "tr": 8
                                                                    }
                                                                  },
                                                                  "layout": {
                                                                    "dir": "row",
                                                                    "gap": 0,
                                                                    "wrap": "flex-nowrap",
                                                                    "align": "left"
                                                                  },
                                                                  "padding": {
                                                                    "b": 5,
                                                                    "l": 7,
                                                                    "r": 7,
                                                                    "t": 5
                                                                  }
                                                                },
                                                                "originalId": "dq9d83xiabfc7o1iajetrc6i"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "border": {
                                                                "color": "",
                                                                "style": "solid",
                                                                "stroke": {
                                                                  "b": 0,
                                                                  "l": 0,
                                                                  "r": 0,
                                                                  "t": 0
                                                                }
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "ephsjy8nbdiyxfx1w7lj2d4y"
                                                          },
                                                          {
                                                            "id": "esrs72pvru5n7mcndy10ji6k",
                                                            "adv": {
                                                              "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                              "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "text-field",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "mha730i92x8bbe8jczphfd0q",
                                                                "adv": {
                                                                  "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "field",
                                                                "type": "item",
                                                                "childs": [],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": 42,
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "#e9e9e9",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 1,
                                                                      "l": 1,
                                                                      "r": 1,
                                                                      "t": 1
                                                                    },
                                                                    "rounded": {
                                                                      "bl": 8,
                                                                      "br": 8,
                                                                      "tl": 8,
                                                                      "tr": 8
                                                                    }
                                                                  },
                                                                  "layout": {
                                                                    "dir": "row",
                                                                    "gap": 0,
                                                                    "wrap": "flex-nowrap",
                                                                    "align": "left"
                                                                  },
                                                                  "padding": {
                                                                    "b": 3,
                                                                    "l": 7,
                                                                    "r": 7,
                                                                    "t": 3
                                                                  }
                                                                },
                                                                "originalId": "p3rxretuqlagy6opa54ag2mr"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "border": {
                                                                "color": "",
                                                                "style": "solid",
                                                                "stroke": {
                                                                  "b": 0,
                                                                  "l": 0,
                                                                  "r": 0,
                                                                  "t": 0
                                                                }
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "xbs3rd4p4k78dyihahc5137k"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "full",
                                                            "w": "full",
                                                            "hUnit": "px",
                                                            "wUnit": "px"
                                                          }
                                                        },
                                                        "originalId": "rfcene0bgrwyc3ekl4rtg6u2"
                                                      },
                                                      {
                                                        "id": "efe03lqnmff957ohuqj8gpzm",
                                                        "adv": {
                                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                          "css": "",
                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "error-msg",
                                                        "type": "item",
                                                        "childs": [],
                                                        "mobile": {
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "color": "#f84848",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          },
                                                          "padding": {
                                                            "b": 3,
                                                            "l": 20,
                                                            "r": 20,
                                                            "t": 3
                                                          }
                                                        },
                                                        "originalId": "spp0fjuhfdptw9xmmj93rmog"
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full"
                                                      },
                                                      "font": {
                                                        "size": 15,
                                                        "align": "left",
                                                        "family": "Poppins",
                                                        "height": "auto",
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      }
                                                    },
                                                    "originalId": "zyoczju8tj4onwnawaujlxxl"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "padding": {
                                                    "b": 7,
                                                    "l": 0,
                                                    "r": 0,
                                                    "t": 0
                                                  }
                                                },
                                                "component": {
                                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                  "group": {
                                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                  },
                                                  "props": {
                                                    "name": {
                                                      "idx": 3,
                                                      "meta": {
                                                        "type": "text"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "`staff_${y?.identifier}`",
                                                      "valueBuilt": "`staff_${y?.identifier}`;\n"
                                                    },
                                                    "type": {
                                                      "idx": 5,
                                                      "meta": {
                                                        "type": "option",
                                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "\"dropdown\"",
                                                      "content": {
                                                        "id": "t9953dlzojdxiaq1bg2ns1cq",
                                                        "adv": {
                                                          "css": ""
                                                        },
                                                        "dim": {
                                                          "h": "full",
                                                          "w": "full"
                                                        },
                                                        "name": "type",
                                                        "type": "item",
                                                        "childs": []
                                                      },
                                                      "valueBuilt": "\"dropdown\";\n"
                                                    },
                                                    "items": {
                                                      "idx": 30,
                                                      "meta": {
                                                        "type": "text"
                                                      },
                                                      "name": "prop",
                                                      "type": "() => any[] | Promise<any[]>",
                                                      "value": "async () => {\n  let data_muser = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n      is_show: true,\n    },\n  });\n  let c = [];\n  if (data_muser !== null) {\n    c.push({\n      label: `Pilih Staff`,\n      value: \"null\",\n    });\n    data_muser?.map((item) => {\n      c.push({\n        label: item?.display_name,\n        value: Number(item?.id),\n      });\n    });\n  }\n  return c.length !== 0 ? c : [];\n}",
                                                      "visible": "type === \"dropdown\"",
                                                      "valueBuilt": " async()=>{let l=await db.m_user.findMany({where:{id_role:2,is_show:!0}}),e=[];return l!==null&&(e.push({label:\"Pilih Staff\",value:\"null\"}),l?.map(a=>{e.push({label:a?.display_name,value:Number(a?.id)})})),e.length!==0?e:[]};\n"
                                                    },
                                                    "label": {
                                                      "idx": 4,
                                                      "meta": {
                                                        "type": "text"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "y?.name",
                                                      "valueBuilt": " y?.name;\n"
                                                    },
                                                    "change": {
                                                      "idx": 8,
                                                      "meta": {
                                                        "type": "text"
                                                      },
                                                      "name": "prop",
                                                      "type": "() => void | Promise<void>",
                                                      "value": "async (val) => {}",
                                                      "valueBuilt": " async a=>{};\n"
                                                    },
                                                    "readonly": {
                                                      "idx": 7,
                                                      "meta": {
                                                        "type": "option",
                                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "(form.verified ||\n  user.role === \"staff\" ||\n  (form.m_action.multiple_verification === true &&\n    form.multi_verified === true)) &&\nNumber(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                                      "valueBuilt": "(form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0)&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                                    },
                                                    "required": {
                                                      "idx": 6,
                                                      "meta": {
                                                        "type": "option",
                                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "\"y\"",
                                                      "valueBuilt": "\"y\";\n"
                                                    },
                                                    "placeholder": {
                                                      "idx": 20,
                                                      "meta": {
                                                        "type": "text"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "\"-\"",
                                                      "visible": "type === 'text' || type === \"textarea\"",
                                                      "valueBuilt": "\"-\";\n"
                                                    },
                                                    "autocomplete": {
                                                      "idx": 21,
                                                      "meta": {
                                                        "type": "option",
                                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                      },
                                                      "name": "prop",
                                                      "type": "string",
                                                      "value": "\"off\"",
                                                      "visible": "type === \"password\" || type === \"text\"",
                                                      "valueBuilt": "\"off\";\n"
                                                    }
                                                  }
                                                },
                                                "originalId": "m98e05ghcml60w8ql7egx2w5"
                                              }
                                            ],
                                            "mobile": {
                                              "bg": {
                                                "pos": "center",
                                                "size": "cover",
                                                "color": ""
                                              },
                                              "dim": {
                                                "h": "fit",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "bg": {
                                            "pos": "center",
                                            "size": "cover",
                                            "color": ""
                                          },
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "layout": {
                                            "dir": "row",
                                            "wrap": "flex-wrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 0,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "originalId": "tfvhnxi42dm5a6ynxui27fzd"
                                      }
                                    ],
                                    "hidden": false
                                  }
                                ],
                                "hidden": "all",
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  }
                                },
                                "originalId": "x4vj3trubom3i8t2m40tbapi"
                              },
                              {
                                "id": "uj7ipo6tbf354sbq9zi6xt37",
                                "adv": {
                                  "js": "<>\n  {(user.role === \"staff\" || user.role === \"institution\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"staff\"||user.role===\"institution\")&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "ppds",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "dfgcpdf4ua1uvcrmhe9w9jx3",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_participant\"",
                                          "valueBuilt": "\"id_participant\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "c39vyv6gat6pcyqa275tfxwu",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 1,\n      is_show: true,\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih ppds\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:1,is_show:!0,id_client:Number(user.id_client)}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih ppds\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Peserta PPDS\"",
                                          "valueBuilt": "\"Peserta PPDS\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "(form.verified || user.role === \"staff\") && Number(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": "(form.verified||user.role===\"staff\")&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "bg": {
                                    "color": ""
                                  },
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                }
                              },
                              {
                                "id": "afjs9h0a60gfylx9w0s23v55",
                                "adv": {
                                  "js": "<>{Number(params.id_action) === 9 && <div {...props}>{children}</div>}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,Number(params.id_action)===9&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "stase",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "v6su9zxuoze4y98vfgtuksng",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_stase\"",
                                          "valueBuilt": "\"id_stase\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "h5jj7lswjceug90y5pnjpuvc",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_stase.findMany({\n    where: {\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih stase\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_stase.findMany({where:{id_client:Number(user.id_client)}})).map(e=>({label:e.name,value:e.id}));return a.unshift({label:\"Pilih stase\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "user.role === \"staff\" ? \"Stase\" : \"Milestone\"",
                                          "valueBuilt": " user.role===\"staff\"?\"Stase\":\"Milestone\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "(form.verified ||\n  user.role === \"staff\" ||\n  (form.m_action.multiple_verification === true &&\n    form.multi_verified === true)) &&\nNumber(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": "(form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0)&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "bg": {
                                    "color": ""
                                  },
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                }
                              },
                              {
                                "id": "qx00uixyyay5mw3lmgws4zv0",
                                "name": "date",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "i88dhq31kgxeb3t1aupygz74",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"date\"",
                                          "valueBuilt": "\"date\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"datetime\"",
                                          "content": {
                                            "id": "at7jigajy67vye97pyqix5f3",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"datetime\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Tanggal\"",
                                          "valueBuilt": "\"Tanggal\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "(form.verified ||\n  user.role === \"staff\" ||\n  (form.m_action.multiple_verification === true &&\n    form.multi_verified === true)) &&\nNumber(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": "(form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0)&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                }
                              },
                              {
                                "id": "pe20swncnkl9wd16vu0rcjd3",
                                "adv": {
                                  "js": "<>{form.m_action.has_another_role === true && (<div {...props}>{children}</div>)}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_another_role===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "another_role",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "gk4imslfhwvw24654js966bx",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_another_role\"",
                                          "valueBuilt": "\"id_another_role\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_another_role.findMany({\n    where: {\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.role_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih peran\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_another_role.findMany({where:{id_client:Number(user.id_client)}})).map(e=>({label:e.role_name,value:e.id}));return a.unshift({label:\"Pilih peran\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Peran\"",
                                          "valueBuilt": "\"Peran\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Peran...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Peran...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "h8t50hk2l1hvuozunrwsnndh"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "tuh8y1p34zimd5mtwjhzcoyr"
                              },
                              {
                                "id": "netceob2jlelvft4rrc871rb",
                                "adv": {
                                  "js": "<>{form.m_action.has_emr === true && (<div {...props}>{children}</div>)}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_emr===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "emr",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "m0bcpb2dxwmcapt79vksdkrb",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"emr_number\"",
                                          "valueBuilt": "\"emr_number\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"text\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"text\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Nomor Rekam Medis\"",
                                          "valueBuilt": "\"Nomor Rekam Medis\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi No. Rekam Medis...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi No. Rekam Medis...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "jvcr95x9kbtz8linq32aub7w"
                                  },
                                  {
                                    "id": "h3f3m6sf61zuulcaopjgi3dy",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"age\"",
                                          "valueBuilt": "\"age\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"text\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"text\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Usia\"",
                                          "valueBuilt": "\"Usia\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Usia...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Usia...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "vp37pjymnggz7vgoe2z5ormf"
                                  },
                                  {
                                    "id": "bdt6gl0580fn05928ih9ueds",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"gender\"",
                                          "valueBuilt": "\"gender\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n return [\n  {label: \"Pilih Jenis Kelamin\", value: null},\n  {label: \"Laki-Laki\", value: \"Laki-Laki\"},\n  {label: \"Perempuan\", value: \"Perempuan\"},\n ]\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>[{label:\"Pilih Jenis Kelamin\",value:null},{label:\"Laki-Laki\",value:\"Laki-Laki\"},{label:\"Perempuan\",value:\"Perempuan\"}];\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Jenis Kelamin\"",
                                          "valueBuilt": "\"Jenis Kelamin\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Jenis Kelamin...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Jenis Kelamin...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "cltiwvhi8q0an66no7kuha02"
                                  },
                                  {
                                    "id": "mzw3gq4rcm7083jet1aj9twx",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"diagnosis\"",
                                          "valueBuilt": "\"diagnosis\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"textarea\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"textarea\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Diagnosa\"",
                                          "valueBuilt": "\"Diagnosa\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Diagnosa...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Diagnosa...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "p3r0hlidfat5ffwufrgch4y4"
                                  },
                                  {
                                    "id": "aqkffo9twxvi1lytcvdnhsus",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"treatment\"",
                                          "valueBuilt": "\"treatment\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"textarea\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"textarea\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Tindakan\"",
                                          "valueBuilt": "\"Tindakan\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Tindakan...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Tindakan...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "w97wlljn70v2vcis33xkvsda"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "ubga3sh5y78cei7agbij4r7p"
                              },
                              {
                                "id": "n9bkzgjjac2owhvga8pocdn2",
                                "adv": {
                                  "js": "<>{form.m_action.has_title === true && (<div {...props}>{children}</div>)}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_title===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "title",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "u51wg1mq7key4zsuu3ydzy03",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"title\"",
                                          "valueBuilt": "\"title\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"text\"",
                                          "content": {
                                            "id": "bn2gqncdsh2qxk1kf5zq1ywd",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"text\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_user.findMany({\n    where: {\n      id_role: 2,\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.display_name,\n      value: item.id,\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih staff\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_user.findMany({where:{id_role:2}})).map(e=>({label:e.display_name,value:e.id}));return a.unshift({label:\"Pilih staff\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form?.m_action?.m_action_type.id === 3 ? \"Nama Kegiatan\" : \"Judul\"",
                                          "valueBuilt": " form?.m_action?.m_action_type.id===3?\"Nama Kegiatan\":\"Judul\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified ||\nuser.role === \"staff\" ||\n(form.m_action.multiple_verification === true && form.multi_verified === true)\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"||form.m_action.multiple_verification===!0&&form.multi_verified===!0?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Judul...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Judul...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "bcy0pob9kbcnvgnoqz5unfi6"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "ttgckjenpskzvchm34a6a1q7"
                              },
                              {
                                "id": "d4dfe1w32izgkwl7j3fc7ztt",
                                "adv": {
                                  "js": "<>\n  {form.m_action.has_attachment === true && (\n    // form.verified === false &&\n    <div {...props}>{children}</div>\n  )}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_attachment===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "attachment",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "iljlrgqh610oi15ujn4v48k9",
                                    "adv": {
                                      "js": "<div {...props}>\n  {(Object.entries(form) || []).map(([k, v]) => {\n    if (k.includes(\"Attachment\") === true)\n      return <PassProp item={k}>{children}</PassProp>;\n  })}\n</div>",
                                      "css": "",
                                      "html": "",
                                      "jsBuilt": "render(React.createElement(\"div\",{...props},(Object.entries(form)||[]).map(([e,r])=>{if(e.includes(\"Attachment\")===!0)return React.createElement(PassProp,{item:e},children)})));\n"
                                    },
                                    "name": "list_preview",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "odf9fq7lm8k39q3lhp02fa5i",
                                        "adv": {
                                          "js": "<>\n  {form[item] && <div {...props}>{children}</div>}\n</>",
                                          "css": "",
                                          "html": "",
                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form[item]&&React.createElement(\"div\",{...props},children)));\n"
                                        },
                                        "name": "preview",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "c94boxnmcphbo570grksz2pd",
                                            "adv": {
                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "label",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "e6u3yrf60mjvb71n1nux9m04",
                                                "adv": {
                                                  "js": "<div {...props}>{String(item).replace(\"_\", \" \")}</div>",
                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},String(item).replace(\"_\",\" \")));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "var",
                                                "type": "item",
                                                "childs": [],
                                                "originalId": "fjrs66hblvut20mhe5y1msyg"
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              },
                                              "font": {
                                                "size": 15,
                                                "align": "left",
                                                "family": "Poppins",
                                                "height": "auto",
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 20,
                                                "r": 20,
                                                "t": 10
                                              }
                                            },
                                            "originalId": "ap36370r13hkhla3nnzkva9u"
                                          },
                                          {
                                            "id": "xtf6wbaegwveiq7ebqt7qvwi",
                                            "adv": {
                                              "js": "<>\n  {(form[item].name_file.slice(-3).includes(\"png\") === true ||\n    form[item].name_file.slice(-3).includes(\"jpg\") === true ||\n    form[item].name_file.slice(-4).includes(\"jpeg\") === true) && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                              "css": "",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(form[item].name_file.slice(-3).includes(\"png\")===!0||form[item].name_file.slice(-3).includes(\"jpg\")===!0||form[item].name_file.slice(-4).includes(\"jpeg\")===!0)&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "name": "imagetype",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "lwnclr0gwk33q9y961uwg0x2",
                                                "adv": {
                                                  "js": "<img\n  src={`${apiurl}${form[item].url}`}\n  width={`100%`}\n  style={{\n    opacity: 0.7\n  }}\n/>",
                                                  "jsBuilt": "render(React.createElement(\"img\",{src:`${apiurl}${form[item].url}`,width:\"100%\",style:{opacity:.7}}));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "image",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-center"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                },
                                                "originalId": "ps7o1z39t0sz3ea70ygaga7y"
                                              },
                                              {
                                                "id": "bbu5ywgc6svuhyfiqj7rd3wd",
                                                "adv": {
                                                  "js": "<>\n  {user.role === \"ppds\" && form.verified === false && (\n    <div\n      {...props}\n      onClick={(e) => {\n        e.preventDefault();\n        delete form[item];\n        form.render();\n      }}\n    >\n      {children}\n    </div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n  position: absolute;\n  width: 90%;\n  top: 0px;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form.verified===!1&&React.createElement(\"div\",{...props,onClick:e=>{e.preventDefault(),delete form[item],form.render()}},children)));\n"
                                                },
                                                "name": "button",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "b3moxnjlvwz23zsyzi67wf0f",
                                                    "adv": {
                                                      "css": "",
                                                      "html": "<svg width=\"30\" height=\"30\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"ipSCloseOne0\">\n        <g fill=\"none\" stroke-linejoin=\"round\" stroke-width=\"4\">\n            <path fill=\"#fff\" stroke=\"#fff\" d=\"M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z\"/>\n            <path stroke=\"#000\" stroke-linecap=\"round\" d=\"M29.657 18.343L18.343 29.657m0-11.314l11.314 11.314\"/>\n        </g>\n    </mask>\n    <path fill=\"#002b5b\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSCloseOne0)\"/>\n</svg>"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "button-delete",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "top-center"
                                                      }
                                                    },
                                                    "originalId": "c0wsirfov46fmxoy8ye170pv"
                                                  }
                                                ],
                                                "mobile": {
                                                  "bg": {
                                                    "pos": "center",
                                                    "size": "cover",
                                                    "color": ""
                                                  },
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-right"
                                                  }
                                                },
                                                "originalId": "lhqfzjeguc0t5x2tsr0li5zm"
                                              },
                                              {
                                                "id": "yy1gdq07v2t8k63c4nql1zkb",
                                                "adv": {
                                                  "js": "<>\n  {((user.role === \"ppds\" && form.verified === true) ||\n    user.role === \"staff\") && <div {...props}>{children}</div>}\n</>",
                                                  "css": "",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"ppds\"&&form.verified===!0||user.role===\"staff\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "name": "download",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "vpeyt2eczgfarkdb09s7ef0m",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": 0,
                                                      "wUnit": "px"
                                                    },
                                                    "name": "button",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "arhdqczxkrlf23c63f6priye",
                                                        "adv": {
                                                          "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onClick={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                                                          "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                          "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onClick:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "inside",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "vxut7ecvzrh5815m8960rkgi",
                                                            "adv": {
                                                              "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "html": "Login",
                                                            "name": "text_button",
                                                            "text": "",
                                                            "type": "text",
                                                            "childs": [],
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "bg": {
                                                                "pos": "center",
                                                                "size": "cover",
                                                                "color": ""
                                                              },
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 16,
                                                                "color": "",
                                                                "family": "Poppins",
                                                                "height": "auto"
                                                              }
                                                            },
                                                            "component": {
                                                              "props": {}
                                                            },
                                                            "originalId": "f325c6tlbgneb95bb2ca30ov"
                                                          }
                                                        ],
                                                        "layout": {
                                                          "dir": "col",
                                                          "gap": 0,
                                                          "align": "center"
                                                        },
                                                        "mobile": {
                                                          "bg": {
                                                            "pos": "center",
                                                            "size": "cover",
                                                            "color": ""
                                                          },
                                                          "dim": {
                                                            "h": 39,
                                                            "w": "fit"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "height": "auto"
                                                          },
                                                          "border": {
                                                            "color": "",
                                                            "style": "solid",
                                                            "rounded": {
                                                              "bl": 0,
                                                              "br": 0,
                                                              "tl": 0,
                                                              "tr": 0
                                                            }
                                                          },
                                                          "layout": {
                                                            "dir": "col",
                                                            "gap": 0,
                                                            "align": "center"
                                                          },
                                                          "linktag": {
                                                            "link": ""
                                                          }
                                                        },
                                                        "component": {
                                                          "props": {}
                                                        },
                                                        "originalId": "e35c4n82880til60ewp43onu"
                                                      }
                                                    ],
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "left"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 0,
                                                          "br": 0,
                                                          "tl": 0,
                                                          "tr": 0
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "linktag": {
                                                        "link": ""
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                                                      "name": "button",
                                                      "group": {
                                                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                                                        "name": "All"
                                                      },
                                                      "props": {
                                                        "action": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"function\"",
                                                          "visible": "type_button !== 'Submit'",
                                                          "valueBuilt": "\"function\";\n"
                                                        },
                                                        "type_button": {
                                                          "idx": 1,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"Success\"",
                                                          "valueBuilt": "\"Success\";\n"
                                                        },
                                                        "label_button": {
                                                          "idx": 2,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop"
                                                          },
                                                          "type": "string",
                                                          "value": "\"unduh\"",
                                                          "valueBuilt": "\"unduh\";\n"
                                                        },
                                                        "width_button": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text",
                                                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"100px\"",
                                                          "valueBuilt": "\"100px\";\n"
                                                        },
                                                        "navigate_link": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "oldName": "navigate"
                                                          },
                                                          "type": "string",
                                                          "value": "\"/login\"",
                                                          "visible": "type_button !== 'Submit' && action === 'navigate'",
                                                          "valueBuilt": "\"/login\";\n"
                                                        },
                                                        "action_function": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop_1"
                                                          },
                                                          "type": "() => void",
                                                          "value": "() => {\n  window.location.replace(`${apiurl}${form[item].url}`)\n  alert('Media telah di unduh')\n}",
                                                          "visible": "type_button !== 'Submit' && action === 'function'",
                                                          "valueBuilt": "()=>{window.location.replace(`${apiurl}${form[item].url}`),alert(\"Media telah di unduh\")};\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "k3qodke4k8tm6mbun6i4vxm8"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-center"
                                                  }
                                                },
                                                "originalId": "cjnr6zfjgnabdd8d8h5u7l9i"
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 20,
                                                "r": 20,
                                                "t": 0
                                              }
                                            },
                                            "originalId": "vnc2orb5wdbkqbiltqr30nqk"
                                          },
                                          {
                                            "id": "z5vt4p51xfx3m8ue3xhulbxq",
                                            "adv": {
                                              "js": "<>\n  {form[item].name_file.slice(-3).includes(\"pdf\") === true && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form[item].name_file.slice(-3).includes(\"pdf\")===!0&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "name": "pdftype",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "c8546qq8gx119to7jmu4gcxw",
                                                "adv": {
                                                  "css": "",
                                                  "html": "<svg width=\"70\" height=\"70\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"#909090\" d=\"m24.1 2.072l5.564 5.8v22.056H8.879V30h20.856V7.945L24.1 2.072\"/>\n    <path fill=\"#f4f4f4\" d=\"M24.031 2H8.808v27.928h20.856V7.873L24.03 2\"/>\n    <path fill=\"#7a7b7c\" d=\"M8.655 3.5h-6.39v6.827h20.1V3.5H8.655\"/>\n    <path fill=\"#dd2025\" d=\"M22.472 10.211H2.395V3.379h20.077v6.832\"/>\n    <path fill=\"#464648\" d=\"M9.052 4.534H7.745v4.8h1.028V7.715L9 7.728a2.042 2.042 0 0 0 .647-.117a1.427 1.427 0 0 0 .493-.291a1.224 1.224 0 0 0 .335-.454a2.13 2.13 0 0 0 .105-.908a2.237 2.237 0 0 0-.114-.644a1.173 1.173 0 0 0-.687-.65a2.149 2.149 0 0 0-.409-.104a2.232 2.232 0 0 0-.319-.026m-.189 2.294h-.089v-1.48h.193a.57.57 0 0 1 .459.181a.92.92 0 0 1 .183.558c0 .246 0 .469-.222.626a.942.942 0 0 1-.524.114m3.671-2.306c-.111 0-.219.008-.295.011L12 4.538h-.78v4.8h.918a2.677 2.677 0 0 0 1.028-.175a1.71 1.71 0 0 0 .68-.491a1.939 1.939 0 0 0 .373-.749a3.728 3.728 0 0 0 .114-.949a4.416 4.416 0 0 0-.087-1.127a1.777 1.777 0 0 0-.4-.733a1.63 1.63 0 0 0-.535-.4a2.413 2.413 0 0 0-.549-.178a1.282 1.282 0 0 0-.228-.017m-.182 3.937h-.1V5.392h.013a1.062 1.062 0 0 1 .6.107a1.2 1.2 0 0 1 .324.4a1.3 1.3 0 0 1 .142.526c.009.22 0 .4 0 .549a2.926 2.926 0 0 1-.033.513a1.756 1.756 0 0 1-.169.5a1.13 1.13 0 0 1-.363.36a.673.673 0 0 1-.416.106m5.08-3.915H15v4.8h1.028V7.434h1.3v-.892h-1.3V5.43h1.4v-.892\"/>\n    <path fill=\"#dd2025\" d=\"M21.781 20.255s3.188-.578 3.188.511s-1.975.646-3.188-.511Zm-2.357.083a7.543 7.543 0 0 0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216 14.216 0 0 0 1.658 2.252a13.033 13.033 0 0 0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787 10.787 0 0 1-.517 2.434a4.426 4.426 0 0 1-.547-2.162Zm-4.649 10.516c-.978-.585 2.051-2.386 2.6-2.444c-.003.001-1.576 3.056-2.6 2.444ZM25.9 20.895c-.01-.1-.1-1.207-2.07-1.16a14.228 14.228 0 0 0-2.453.173a12.542 12.542 0 0 1-2.012-2.655a11.76 11.76 0 0 0 .623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933 2.013a9.309 9.309 0 0 0 .665 2.338s-.425 1.323-.987 2.639s-.946 2.006-.946 2.006a9.622 9.622 0 0 0-2.725 1.4c-.824.767-1.159 1.356-.725 1.945c.374.508 1.683.623 2.853-.91a22.549 22.549 0 0 0 1.7-2.492s1.784-.489 2.339-.623s1.226-.24 1.226-.24s1.629 1.639 3.2 1.581s1.495-.939 1.485-1.035\"/>\n    <path fill=\"#909090\" d=\"M23.954 2.077V7.95h5.633l-5.633-5.873Z\"/>\n    <path fill=\"#f4f4f4\" d=\"M24.031 2v5.873h5.633L24.031 2Z\"/>\n    <path fill=\"#fff\" d=\"M8.975 4.457H7.668v4.8H8.7V7.639l.228.013a2.042 2.042 0 0 0 .647-.117a1.428 1.428 0 0 0 .493-.291a1.224 1.224 0 0 0 .332-.454a2.13 2.13 0 0 0 .105-.908a2.237 2.237 0 0 0-.114-.644a1.173 1.173 0 0 0-.687-.65a2.149 2.149 0 0 0-.411-.105a2.232 2.232 0 0 0-.319-.026m-.189 2.294h-.089v-1.48h.194a.57.57 0 0 1 .459.181a.92.92 0 0 1 .183.558c0 .246 0 .469-.222.626a.942.942 0 0 1-.524.114m3.67-2.306c-.111 0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677 2.677 0 0 0 1.028-.175a1.71 1.71 0 0 0 .68-.491a1.939 1.939 0 0 0 .373-.749a3.728 3.728 0 0 0 .114-.949a4.416 4.416 0 0 0-.087-1.127a1.777 1.777 0 0 0-.4-.733a1.63 1.63 0 0 0-.535-.4a2.413 2.413 0 0 0-.549-.178a1.282 1.282 0 0 0-.228-.017m-.182 3.937h-.1V5.315h.013a1.062 1.062 0 0 1 .6.107a1.2 1.2 0 0 1 .324.4a1.3 1.3 0 0 1 .142.526c.009.22 0 .4 0 .549a2.926 2.926 0 0 1-.033.513a1.756 1.756 0 0 1-.169.5a1.13 1.13 0 0 1-.363.36a.673.673 0 0 1-.416.106m5.077-3.915h-2.43v4.8h1.028V7.357h1.3v-.892h-1.3V5.353h1.4v-.892\"/>\n</svg>"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "pdf_icon",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  }
                                                },
                                                "originalId": "bmjitn875b44pulyhix9btzd"
                                              },
                                              {
                                                "id": "mi5uf6x6mdu0gpiic1exg0om",
                                                "adv": {
                                                  "js": "<div {...props}>{form[item].name_file}</div>",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},form[item].name_file));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "full"
                                                },
                                                "html": "",
                                                "name": "title",
                                                "text": "",
                                                "type": "text",
                                                "layout": {
                                                  "dir": "col",
                                                  "gap": 0,
                                                  "align": "center"
                                                },
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "align": "left"
                                                  }
                                                },
                                                "originalId": "a7vlm5ripzzc8xrckdpvn2lx"
                                              },
                                              {
                                                "id": "cct32o01mv8umuufhp4axvdj",
                                                "adv": {
                                                  "js": "<>\n  {user.role === \"ppds\" && form.verified === false && (\n    <div\n      {...props}\n      onClick={(e) => {\n        e.preventDefault();\n        delete form[item];\n        form.render();\n      }}\n    >\n      {children}\n    </div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n  position: absolute;\n  width: 30%;\n  top: 0px;\n  left: 0;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form.verified===!1&&React.createElement(\"div\",{...props,onClick:e=>{e.preventDefault(),delete form[item],form.render()}},children)));\n"
                                                },
                                                "name": "button",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "h0psx6m4lcvblhdsddjjejc4",
                                                    "adv": {
                                                      "css": "",
                                                      "html": "<svg width=\"30\" height=\"30\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"ipSCloseOne0\">\n        <g fill=\"none\" stroke-linejoin=\"round\" stroke-width=\"4\">\n            <path fill=\"#fff\" stroke=\"#fff\" d=\"M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z\"/>\n            <path stroke=\"#000\" stroke-linecap=\"round\" d=\"M29.657 18.343L18.343 29.657m0-11.314l11.314 11.314\"/>\n        </g>\n    </mask>\n    <path fill=\"#002b5b\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSCloseOne0)\"/>\n</svg>"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "button-delete",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "top-center"
                                                      }
                                                    },
                                                    "originalId": "i6rzb89awhpt070kpq46zkrf"
                                                  }
                                                ],
                                                "mobile": {
                                                  "bg": {
                                                    "pos": "center",
                                                    "size": "cover",
                                                    "color": ""
                                                  },
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-right"
                                                  }
                                                },
                                                "originalId": "ntek1xfrqxi7bk588m5vd5ye"
                                              },
                                              {
                                                "id": "wqe41fof1ktxb6j9rz2issye",
                                                "adv": {
                                                  "js": "<>\n  {((user.role === \"ppds\" && form.verified === true) ||\n    user.role === \"staff\") && <div {...props}>{children}</div>}\n</>",
                                                  "css": "",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"ppds\"&&form.verified===!0||user.role===\"staff\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "name": "button_unduh",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "hqxyt9ruuf7uuosrhblw7a9i",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": 0,
                                                      "wUnit": "px"
                                                    },
                                                    "name": "button",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "c3ds6zaw47ae0fd1zaxpftpn",
                                                        "adv": {
                                                          "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onClick={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                                                          "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                          "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onClick:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "inside",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "ltr5zalbihygymkb6h7gdjmj",
                                                            "adv": {
                                                              "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "html": "Login",
                                                            "name": "text_button",
                                                            "text": "",
                                                            "type": "text",
                                                            "childs": [],
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "bg": {
                                                                "pos": "center",
                                                                "size": "cover",
                                                                "color": ""
                                                              },
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 16,
                                                                "color": "",
                                                                "family": "Poppins",
                                                                "height": "auto"
                                                              }
                                                            },
                                                            "component": {
                                                              "props": {}
                                                            },
                                                            "originalId": "hp1me8w1gayjf97cfe87g03a"
                                                          }
                                                        ],
                                                        "layout": {
                                                          "dir": "col",
                                                          "gap": 0,
                                                          "align": "center"
                                                        },
                                                        "mobile": {
                                                          "bg": {
                                                            "pos": "center",
                                                            "size": "cover",
                                                            "color": ""
                                                          },
                                                          "dim": {
                                                            "h": 39,
                                                            "w": "fit"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "height": "auto"
                                                          },
                                                          "border": {
                                                            "color": "",
                                                            "style": "solid",
                                                            "rounded": {
                                                              "bl": 0,
                                                              "br": 0,
                                                              "tl": 0,
                                                              "tr": 0
                                                            }
                                                          },
                                                          "layout": {
                                                            "dir": "col",
                                                            "gap": 0,
                                                            "align": "center"
                                                          },
                                                          "linktag": {
                                                            "link": ""
                                                          }
                                                        },
                                                        "component": {
                                                          "props": {}
                                                        },
                                                        "originalId": "l4whmh2kstunaq2hc4c8trkf"
                                                      }
                                                    ],
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "left"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 0,
                                                          "br": 0,
                                                          "tl": 0,
                                                          "tr": 0
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "linktag": {
                                                        "link": ""
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                                                      "name": "button",
                                                      "group": {
                                                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                                                        "name": "All"
                                                      },
                                                      "props": {
                                                        "action": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"function\"",
                                                          "visible": "type_button !== 'Submit'",
                                                          "valueBuilt": "\"function\";\n"
                                                        },
                                                        "type_button": {
                                                          "idx": 1,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"Success\"",
                                                          "valueBuilt": "\"Success\";\n"
                                                        },
                                                        "label_button": {
                                                          "idx": 2,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop"
                                                          },
                                                          "type": "string",
                                                          "value": "\"unduh\"",
                                                          "valueBuilt": "\"unduh\";\n"
                                                        },
                                                        "width_button": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text",
                                                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"100px\"",
                                                          "valueBuilt": "\"100px\";\n"
                                                        },
                                                        "navigate_link": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "oldName": "navigate"
                                                          },
                                                          "type": "string",
                                                          "value": "\"/login\"",
                                                          "visible": "type_button !== 'Submit' && action === 'navigate'",
                                                          "valueBuilt": "\"/login\";\n"
                                                        },
                                                        "action_function": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop_1"
                                                          },
                                                          "type": "() => void",
                                                          "value": "() => {\n  window.location.replace(`${apiurl}${form[item].url}`)\n  alert('Media telah di unduh')\n}",
                                                          "visible": "type_button !== 'Submit' && action === 'function'",
                                                          "valueBuilt": "()=>{window.location.replace(`${apiurl}${form[item].url}`),alert(\"Media telah di unduh\")};\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "x72uw5rm81xdr2t0bix7kdxs"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-center"
                                                  }
                                                },
                                                "originalId": "rajn77jz1g437jhp0ciyant9"
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 20,
                                                "r": 20,
                                                "t": 0
                                              }
                                            },
                                            "originalId": "ujigp4f97zusdul2lxdl3kz6"
                                          },
                                          {
                                            "id": "pl9wm69466wgbic6wbbrjk3i",
                                            "adv": {
                                              "js": "<>\n  {(form[item].name_file.slice(-3).includes(\"doc\") === true ||\n    form[item].name_file.slice(-4).includes(\"docx\") === true) && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(form[item].name_file.slice(-3).includes(\"doc\")===!0||form[item].name_file.slice(-4).includes(\"docx\")===!0)&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "name": "doctype",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "lypdnnc96rg7gp2xgov3pjn3",
                                                "adv": {
                                                  "css": "",
                                                  "html": "<svg width=\"70\" height=\"70\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n        <linearGradient id=\"vscodeIconsFileTypeWord0\" x1=\"4.494\" x2=\"13.832\" y1=\"-1712.086\" y2=\"-1695.914\" gradientTransform=\"translate(0 1720)\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stop-color=\"#2368c4\"/>\n            <stop offset=\".5\" stop-color=\"#1a5dbe\"/>\n            <stop offset=\"1\" stop-color=\"#1146ac\"/>\n        </linearGradient>\n    </defs>\n    <path fill=\"#41a5ee\" d=\"M28.806 3H9.705a1.192 1.192 0 0 0-1.193 1.191V9.5l11.069 3.25L30 9.5V4.191A1.192 1.192 0 0 0 28.806 3Z\"/>\n    <path fill=\"#2b7cd3\" d=\"M30 9.5H8.512V16l11.069 1.95L30 16Z\"/>\n    <path fill=\"#185abd\" d=\"M8.512 16v6.5l10.418 1.3L30 22.5V16Z\"/>\n    <path fill=\"#103f91\" d=\"M9.705 29h19.1A1.192 1.192 0 0 0 30 27.809V22.5H8.512v5.309A1.192 1.192 0 0 0 9.705 29Z\"/>\n    <path d=\"M16.434 8.2H8.512v16.25h7.922a1.2 1.2 0 0 0 1.194-1.191V9.391A1.2 1.2 0 0 0 16.434 8.2Z\" opacity=\".1\"/>\n    <path d=\"M15.783 8.85H8.512V25.1h7.271a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path d=\"M15.783 8.85H8.512V23.8h7.271a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path d=\"M15.132 8.85h-6.62V23.8h6.62a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path fill=\"url(#vscodeIconsFileTypeWord0)\" d=\"M3.194 8.85h11.938a1.193 1.193 0 0 1 1.194 1.191v11.918a1.193 1.193 0 0 1-1.194 1.191H3.194A1.192 1.192 0 0 1 2 21.959V10.041A1.192 1.192 0 0 1 3.194 8.85Z\"/>\n    <path fill=\"#fff\" d=\"M6.9 17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3 5.326a7.761 7.761 0 0 1 .162 1h.022a7.6 7.6 0 0 1 .135-.975l1.039-5.358h1.477l-1.824 7.748h-1.727l-1.237-5.126q-.054-.222-.122-.578t-.084-.52h-.021q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78 19.871H6.024L4.19 12.127h1.5l1.131 5.418a4.469 4.469 0 0 1 .079.443Z\"/>\n</svg>"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "word_icon",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  }
                                                },
                                                "originalId": "ymrzh06ovh64ew41qoqkt45f"
                                              },
                                              {
                                                "id": "nb89c0a00bjhkao4djl4yezs",
                                                "adv": {
                                                  "js": "<div {...props}>{form[item].name_file}</div>",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},form[item].name_file));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "full"
                                                },
                                                "html": "",
                                                "name": "title",
                                                "text": "",
                                                "type": "text",
                                                "layout": {
                                                  "dir": "col",
                                                  "gap": 0,
                                                  "align": "center"
                                                },
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "align": "left"
                                                  }
                                                },
                                                "originalId": "n76te4eu6x3yfh3itziyoxsn"
                                              },
                                              {
                                                "id": "ybw9rzksnbzor5c7xwmyeif9",
                                                "adv": {
                                                  "js": "<>\n  {user.role === \"ppds\" && form.verified === false && (\n    <div\n      {...props}\n      onClick={(e) => {\n        e.preventDefault();\n        delete form[item];\n        form.render();\n      }}\n    >\n      {children}\n    </div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n  position: absolute;\n  width: 30%;\n  top: 0px;\n  left: 0;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form.verified===!1&&React.createElement(\"div\",{...props,onClick:e=>{e.preventDefault(),delete form[item],form.render()}},children)));\n"
                                                },
                                                "name": "button",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "llfa745mny9nbjcsavhmqqdt",
                                                    "adv": {
                                                      "css": "",
                                                      "html": "<svg width=\"30\" height=\"30\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"ipSCloseOne0\">\n        <g fill=\"none\" stroke-linejoin=\"round\" stroke-width=\"4\">\n            <path fill=\"#fff\" stroke=\"#fff\" d=\"M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z\"/>\n            <path stroke=\"#000\" stroke-linecap=\"round\" d=\"M29.657 18.343L18.343 29.657m0-11.314l11.314 11.314\"/>\n        </g>\n    </mask>\n    <path fill=\"#002b5b\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSCloseOne0)\"/>\n</svg>"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "button-delete",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "top-center"
                                                      }
                                                    },
                                                    "originalId": "uyfpt6qb8j4o5tqkgbu0eyxa"
                                                  }
                                                ],
                                                "mobile": {
                                                  "bg": {
                                                    "pos": "center",
                                                    "size": "cover",
                                                    "color": ""
                                                  },
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-right"
                                                  }
                                                },
                                                "originalId": "j9jxp59mw0emutgdbwr6li9k"
                                              },
                                              {
                                                "id": "ms86btur81rqaz5s2xs4zrvi",
                                                "adv": {
                                                  "js": "<>\n  {((user.role === \"ppds\" && form.verified === true) ||\n    user.role === \"staff\") && <div {...props}>{children}</div>}\n</>",
                                                  "css": "",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"ppds\"&&form.verified===!0||user.role===\"staff\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "name": "unduh",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "zw46rxn5oe4gbyte9v9pf3yz",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": 0,
                                                      "wUnit": "px"
                                                    },
                                                    "name": "button",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "hhyph4m50m017cxtmyqmjp2s",
                                                        "adv": {
                                                          "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onClick={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                                                          "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                          "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onClick:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "inside",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "x0pyhsed40w7sbaboogga0au",
                                                            "adv": {
                                                              "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "html": "Login",
                                                            "name": "text_button",
                                                            "text": "",
                                                            "type": "text",
                                                            "childs": [],
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "bg": {
                                                                "pos": "center",
                                                                "size": "cover",
                                                                "color": ""
                                                              },
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 16,
                                                                "color": "",
                                                                "family": "Poppins",
                                                                "height": "auto"
                                                              }
                                                            },
                                                            "component": {
                                                              "props": {}
                                                            },
                                                            "originalId": "uf5b3qdbjkk6sob2fv92ju3t"
                                                          }
                                                        ],
                                                        "layout": {
                                                          "dir": "col",
                                                          "gap": 0,
                                                          "align": "center"
                                                        },
                                                        "mobile": {
                                                          "bg": {
                                                            "pos": "center",
                                                            "size": "cover",
                                                            "color": ""
                                                          },
                                                          "dim": {
                                                            "h": 39,
                                                            "w": "fit"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "height": "auto"
                                                          },
                                                          "border": {
                                                            "color": "",
                                                            "style": "solid",
                                                            "rounded": {
                                                              "bl": 0,
                                                              "br": 0,
                                                              "tl": 0,
                                                              "tr": 0
                                                            }
                                                          },
                                                          "layout": {
                                                            "dir": "col",
                                                            "gap": 0,
                                                            "align": "center"
                                                          },
                                                          "linktag": {
                                                            "link": ""
                                                          }
                                                        },
                                                        "component": {
                                                          "props": {}
                                                        },
                                                        "originalId": "r16356j2yeqeytqwi5vu5szp"
                                                      }
                                                    ],
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "left"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 0,
                                                          "br": 0,
                                                          "tl": 0,
                                                          "tr": 0
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "linktag": {
                                                        "link": ""
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                                                      "name": "button",
                                                      "group": {
                                                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                                                        "name": "All"
                                                      },
                                                      "props": {
                                                        "action": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"function\"",
                                                          "visible": "type_button !== 'Submit'",
                                                          "valueBuilt": "\"function\";\n"
                                                        },
                                                        "type_button": {
                                                          "idx": 1,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"Success\"",
                                                          "valueBuilt": "\"Success\";\n"
                                                        },
                                                        "label_button": {
                                                          "idx": 2,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop"
                                                          },
                                                          "type": "string",
                                                          "value": "\"unduh\"",
                                                          "valueBuilt": "\"unduh\";\n"
                                                        },
                                                        "width_button": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text",
                                                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"100px\"",
                                                          "valueBuilt": "\"100px\";\n"
                                                        },
                                                        "navigate_link": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "oldName": "navigate"
                                                          },
                                                          "type": "string",
                                                          "value": "\"/login\"",
                                                          "visible": "type_button !== 'Submit' && action === 'navigate'",
                                                          "valueBuilt": "\"/login\";\n"
                                                        },
                                                        "action_function": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop_1"
                                                          },
                                                          "type": "() => void",
                                                          "value": "() => {\n  window.location.replace(`${apiurl}${form[item].url}`)\n  alert('Media telah di unduh')\n}",
                                                          "visible": "type_button !== 'Submit' && action === 'function'",
                                                          "valueBuilt": "()=>{window.location.replace(`${apiurl}${form[item].url}`),alert(\"Media telah di unduh\")};\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "ir4ab4e5gzr488ocdpt709fs"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-center"
                                                  }
                                                },
                                                "originalId": "ehj7yka4t2ohpb063a8ljt7l"
                                              }
                                            ],
                                            "mobile": {
                                              "bg": {
                                                "pos": "center",
                                                "size": "cover",
                                                "color": ""
                                              },
                                              "dim": {
                                                "h": "fit",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 20,
                                                "r": 20,
                                                "t": 0
                                              }
                                            },
                                            "originalId": "p1opqv5bb8giyx95sqcsmcd1"
                                          },
                                          {
                                            "id": "y0o0g55etwiu604rfh3xwfxm",
                                            "adv": {
                                              "js": "<>\n  {(form[item].name_file.slice(-3).includes(\"xls\") === true ||\n    form[item].name_file.slice(-4).includes(\"xlsx\") === true ||\n    form[item].name_file.slice(-3).includes(\"csv\") === true) && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(form[item].name_file.slice(-3).includes(\"xls\")===!0||form[item].name_file.slice(-4).includes(\"xlsx\")===!0||form[item].name_file.slice(-3).includes(\"csv\")===!0)&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "name": "xlstype",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "ce9bgstvt1cjqrw4q69nw7dl",
                                                "adv": {
                                                  "css": "",
                                                  "html": "<svg width=\"70\" height=\"70\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n    <defs>\n        <linearGradient id=\"vscodeIconsFileTypeExcel0\" x1=\"4.494\" x2=\"13.832\" y1=\"-2092.086\" y2=\"-2075.914\" gradientTransform=\"translate(0 2100)\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stop-color=\"#18884f\"/>\n            <stop offset=\".5\" stop-color=\"#117e43\"/>\n            <stop offset=\"1\" stop-color=\"#0b6631\"/>\n        </linearGradient>\n    </defs>\n    <path fill=\"#185c37\" d=\"M19.581 15.35L8.512 13.4v14.409A1.192 1.192 0 0 0 9.705 29h19.1A1.192 1.192 0 0 0 30 27.809V22.5Z\"/>\n    <path fill=\"#21a366\" d=\"M19.581 3H9.705a1.192 1.192 0 0 0-1.193 1.191V9.5L19.581 16l5.861 1.95L30 16V9.5Z\"/>\n    <path fill=\"#107c41\" d=\"M8.512 9.5h11.069V16H8.512Z\"/>\n    <path d=\"M16.434 8.2H8.512v16.25h7.922a1.2 1.2 0 0 0 1.194-1.191V9.391A1.2 1.2 0 0 0 16.434 8.2Z\" opacity=\".1\"/>\n    <path d=\"M15.783 8.85H8.512V25.1h7.271a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path d=\"M15.783 8.85H8.512V23.8h7.271a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path d=\"M15.132 8.85h-6.62V23.8h6.62a1.2 1.2 0 0 0 1.194-1.191V10.041a1.2 1.2 0 0 0-1.194-1.191Z\" opacity=\".2\"/>\n    <path fill=\"url(#vscodeIconsFileTypeExcel0)\" d=\"M3.194 8.85h11.938a1.193 1.193 0 0 1 1.194 1.191v11.918a1.193 1.193 0 0 1-1.194 1.191H3.194A1.192 1.192 0 0 1 2 21.959V10.041A1.192 1.192 0 0 1 3.194 8.85Z\"/>\n    <path fill=\"#fff\" d=\"m5.7 19.873l2.511-3.884l-2.3-3.862h1.847L9.013 14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359 3.84l2.419 3.905h-1.809l-1.45-2.711A2.355 2.355 0 0 1 9.2 16.8h-.024a1.688 1.688 0 0 1-.168.351l-1.493 2.722Z\"/>\n    <path fill=\"#33c481\" d=\"M28.806 3h-9.225v6.5H30V4.191A1.192 1.192 0 0 0 28.806 3Z\"/>\n    <path fill=\"#107c41\" d=\"M19.581 16H30v6.5H19.581Z\"/>\n</svg>"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "excel_icon",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  }
                                                },
                                                "originalId": "xkrsznb1zspvqzlanfyzyx13"
                                              },
                                              {
                                                "id": "a88957i2towhneslkscd033i",
                                                "adv": {
                                                  "js": "<div {...props}>{form[item].name_file}</div>",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},form[item].name_file));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "full"
                                                },
                                                "html": "",
                                                "name": "title",
                                                "text": "",
                                                "type": "text",
                                                "layout": {
                                                  "dir": "col",
                                                  "gap": 0,
                                                  "align": "center"
                                                },
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "align": "left"
                                                  }
                                                },
                                                "originalId": "rj6nj23cavx6lz6q062xmnyy"
                                              },
                                              {
                                                "id": "g7qpz843gn0ldodf4qwp2qft",
                                                "adv": {
                                                  "js": "<>\n  {user.role === \"ppds\" && form.verified === false && (\n    <div\n      {...props}\n      onClick={(e) => {\n        e.preventDefault();\n        delete form[item];\n        form.render();\n      }}\n    >\n      {children}\n    </div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n  position: absolute;\n  width: 30%;\n  top: 0px;\n  left: 0;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"ppds\"&&form.verified===!1&&React.createElement(\"div\",{...props,onClick:e=>{e.preventDefault(),delete form[item],form.render()}},children)));\n"
                                                },
                                                "name": "button",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "l5v8dj2uyfw8uxx4ngenl67m",
                                                    "adv": {
                                                      "css": "",
                                                      "html": "<svg width=\"30\" height=\"30\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"ipSCloseOne0\">\n        <g fill=\"none\" stroke-linejoin=\"round\" stroke-width=\"4\">\n            <path fill=\"#fff\" stroke=\"#fff\" d=\"M24 44c11.046 0 20-8.954 20-20S35.046 4 24 4S4 12.954 4 24s8.954 20 20 20Z\"/>\n            <path stroke=\"#000\" stroke-linecap=\"round\" d=\"M29.657 18.343L18.343 29.657m0-11.314l11.314 11.314\"/>\n        </g>\n    </mask>\n    <path fill=\"#002b5b\" d=\"M0 0h48v48H0z\" mask=\"url(#ipSCloseOne0)\"/>\n</svg>"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "button-delete",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "top-center"
                                                      }
                                                    },
                                                    "originalId": "vmjj1oyyof9ybw9lq7y89kgo"
                                                  }
                                                ],
                                                "mobile": {
                                                  "bg": {
                                                    "pos": "center",
                                                    "size": "cover",
                                                    "color": ""
                                                  },
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-right"
                                                  }
                                                },
                                                "originalId": "nfk7cj193aw34ln42ohweu4h"
                                              },
                                              {
                                                "id": "jiu10iol120vcglnlst31iu9",
                                                "adv": {
                                                  "js": "<>\n  {((user.role === \"ppds\" && form.verified === true) ||\n    user.role === \"staff\") && <div {...props}>{children}</div>}\n</>",
                                                  "css": "",
                                                  "html": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(user.role===\"ppds\"&&form.verified===!0||user.role===\"staff\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "name": "unduh",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "pb73rrjx48qzosafn93qiag8",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": 0,
                                                      "wUnit": "px"
                                                    },
                                                    "name": "button",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "sxsfunzggyvp7eiw0y7j2cbe",
                                                        "adv": {
                                                          "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onClick={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                                                          "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                          "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onClick:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "inside",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "e21ihoheqme5kmb6tb5hzj40",
                                                            "adv": {
                                                              "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "html": "Login",
                                                            "name": "text_button",
                                                            "text": "",
                                                            "type": "text",
                                                            "childs": [],
                                                            "layout": {
                                                              "dir": "col",
                                                              "gap": 0,
                                                              "align": "center"
                                                            },
                                                            "mobile": {
                                                              "bg": {
                                                                "pos": "center",
                                                                "size": "cover",
                                                                "color": ""
                                                              },
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 16,
                                                                "color": "",
                                                                "family": "Poppins",
                                                                "height": "auto"
                                                              }
                                                            },
                                                            "component": {
                                                              "props": {}
                                                            },
                                                            "originalId": "kavs1wv4pz43j18u3jzb8usb"
                                                          }
                                                        ],
                                                        "layout": {
                                                          "dir": "col",
                                                          "gap": 0,
                                                          "align": "center"
                                                        },
                                                        "mobile": {
                                                          "bg": {
                                                            "pos": "center",
                                                            "size": "cover",
                                                            "color": ""
                                                          },
                                                          "dim": {
                                                            "h": 39,
                                                            "w": "fit"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "height": "auto"
                                                          },
                                                          "border": {
                                                            "color": "",
                                                            "style": "solid",
                                                            "rounded": {
                                                              "bl": 0,
                                                              "br": 0,
                                                              "tl": 0,
                                                              "tr": 0
                                                            }
                                                          },
                                                          "layout": {
                                                            "dir": "col",
                                                            "gap": 0,
                                                            "align": "center"
                                                          },
                                                          "linktag": {
                                                            "link": ""
                                                          }
                                                        },
                                                        "component": {
                                                          "props": {}
                                                        },
                                                        "originalId": "veiuxk5tugvajg3rdrazhhvc"
                                                      }
                                                    ],
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "left"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 0,
                                                          "br": 0,
                                                          "tl": 0,
                                                          "tr": 0
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "linktag": {
                                                        "link": ""
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                                                      "name": "button",
                                                      "group": {
                                                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                                                        "name": "All"
                                                      },
                                                      "props": {
                                                        "action": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"function\"",
                                                          "visible": "type_button !== 'Submit'",
                                                          "valueBuilt": "\"function\";\n"
                                                        },
                                                        "type_button": {
                                                          "idx": 1,
                                                          "meta": {
                                                            "type": "option",
                                                            "oldName": "new_prop",
                                                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                                                          },
                                                          "type": "string",
                                                          "value": "\"Success\"",
                                                          "valueBuilt": "\"Success\";\n"
                                                        },
                                                        "label_button": {
                                                          "idx": 2,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop"
                                                          },
                                                          "type": "string",
                                                          "value": "\"unduh\"",
                                                          "valueBuilt": "\"unduh\";\n"
                                                        },
                                                        "width_button": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text",
                                                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"100px\"",
                                                          "valueBuilt": "\"100px\";\n"
                                                        },
                                                        "navigate_link": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "oldName": "navigate"
                                                          },
                                                          "type": "string",
                                                          "value": "\"/login\"",
                                                          "visible": "type_button !== 'Submit' && action === 'navigate'",
                                                          "valueBuilt": "\"/login\";\n"
                                                        },
                                                        "action_function": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "text",
                                                            "oldName": "new_prop_1"
                                                          },
                                                          "type": "() => void",
                                                          "value": "() => {\n  window.location.replace(`${apiurl}${form[item].url}`)\n  alert('Media telah di unduh')\n}",
                                                          "visible": "type_button !== 'Submit' && action === 'function'",
                                                          "valueBuilt": "()=>{window.location.replace(`${apiurl}${form[item].url}`),alert(\"Media telah di unduh\")};\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "rncjc619i3yecu4fqjiishnc"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full",
                                                    "hUnit": "px",
                                                    "wUnit": "px"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-center"
                                                  }
                                                },
                                                "originalId": "onww6iagp5tnbv6nhbr03axw"
                                              }
                                            ],
                                            "mobile": {
                                              "bg": {
                                                "pos": "center",
                                                "size": "cover",
                                                "color": ""
                                              },
                                              "dim": {
                                                "h": "fit",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              },
                                              "padding": {
                                                "b": 0,
                                                "l": 20,
                                                "r": 20,
                                                "t": 0
                                              }
                                            },
                                            "originalId": "l8yu7ye4ftfidt69amgap939"
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full",
                                            "hUnit": "px",
                                            "wUnit": "px"
                                          },
                                          "layout": {
                                            "dir": "col",
                                            "gap": 0,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 10,
                                            "l": 0,
                                            "r": 0,
                                            "t": 10
                                          }
                                        },
                                        "originalId": "wtrpu7lcd34va3xlrx6dp35t"
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full",
                                        "hUnit": "px",
                                        "wUnit": "px"
                                      }
                                    }
                                  },
                                  {
                                    "id": "pquwjmqb4xqx3i2uatunf1to",
                                    "adv": {
                                      "js": "<>{form.verified !== true && <div {...props}>{children}</div>}</>",
                                      "css": "",
                                      "html": "",
                                      "jsBuilt": "render(React.createElement(React.Fragment,null,form.verified!==!0&&React.createElement(\"div\",{...props},children)));\n"
                                    },
                                    "name": "input",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "xur937sj5bdx942hkk5jbrlx",
                                        "name": "loader",
                                        "type": "item",
                                        "childs": [],
                                        "hidden": false,
                                        "component": {
                                          "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                                          "props": {
                                            "load": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => Promise<any>",
                                              "value": "async () => {\n  let data = await db.m_action.findFirst({\n    where: {\n      id: Number(params.id_action),\n      id_client: user.id_client,\n      has_attachment: true,\n      attachment_name: {\n        not: null,\n      },\n    },\n    // select: {\n    //   attachment_name: true,\n    // },\n  });\n\n  let actions = [];\n\n  data?.attachment_name?.map((item, idx) => {\n    let arr_attachment = Object.keys(form).filter((e) => e.indexOf(item) >= 0);\n    let arr_index = [];\n    arr_attachment.map((a) => {\n      let index = Number(a.replace(`${item}_`, \"\"));\n      arr_index.push(index);\n    });\n    let last_index = 1;\n    if (arr_index.length !== 0) {\n      last_index = Math.max.apply(Math, arr_index);\n    }\n    actions.push({\n      label: item,\n      index: last_index,\n    });\n  });\n\n  return { actions };\n}",
                                              "valueBuilt": " async()=>{let r=await db.m_action.findFirst({where:{id:Number(params.id_action),id_client:user.id_client,has_attachment:!0,attachment_name:{not:null}}}),n=[];return r?.attachment_name?.map((t,c)=>{let l=Object.keys(form).filter(e=>e.indexOf(t)>=0),a=[];l.map(e=>{let d=Number(e.replace(`${t}_`,\"\"));a.push(d)});let i=1;a.length!==0&&(i=Math.max.apply(Math,a)),n.push({label:t,index:i})}),{actions:n}};\n"
                                            },
                                            "mode": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"load\"",
                                              "valueBuilt": "\"load\";\n"
                                            },
                                            "debug": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "ready": {
                                              "meta": {
                                                "type": "content-element"
                                              },
                                              "content": {
                                                "id": "ir2d4lg4smapxjir4eivole8",
                                                "adv": {
                                                  "css": ""
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "ready",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "jmd8eonczh6e6065pt8ridne",
                                                    "adv": {
                                                      "js": "<div {...props}>\n  {(data?.actions || []).map((item, idx) => {\n    return (\n      <PassProp\n        x={item}\n        last_index={item.index}\n        key={`${item.label}_${item.index}`}\n        index={idx}\n      >\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},(data?.actions||[]).map((d,a)=>React.createElement(PassProp,{x:d,last_index:d.index,key:`${d.label}_${d.index}`,index:a},children))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "items",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "yru4bx0fnfl32a5kscj0btcr",
                                                        "adv": {
                                                          "js": "<>\n  {user.role !== \"staff\" && <div {...props}>{children}</div>}\n</>",
                                                          "css": "",
                                                          "html": "",
                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,user.role!==\"staff\"&&React.createElement(\"div\",{...props},children)));\n"
                                                        },
                                                        "name": "input",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "db87zihhugbq243tcuqz1zcd",
                                                            "name": "field",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "xpnptk2dswtl585ppba87y86",
                                                                "adv": {
                                                                  "css": ""
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "field",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "cj1iqgvqm135liaun1xz2vys",
                                                                    "adv": {
                                                                      "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    cache={false}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\" && !isEditor) {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},cache:!1,effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&!isEditor&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "box",
                                                                    "type": "item",
                                                                    "childs": [
                                                                      {
                                                                        "id": "w6qsnwduhrxi9042wxljn5yn",
                                                                        "adv": {
                                                                          "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                                        },
                                                                        "dim": {
                                                                          "h": "fit",
                                                                          "w": "fit"
                                                                        },
                                                                        "name": "label",
                                                                        "type": "item",
                                                                        "childs": [
                                                                          {
                                                                            "id": "ql0u87e4wgo4chq61zkbltib",
                                                                            "adv": {
                                                                              "js": "<div {...props}>{label}</div>",
                                                                              "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                              "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "fit"
                                                                            },
                                                                            "name": "var",
                                                                            "type": "item",
                                                                            "childs": [],
                                                                            "originalId": "y2cdk0mc93c9pq64wzxujind"
                                                                          },
                                                                          {
                                                                            "id": "o1pwpbv0w6tm7fkkg4cjohze",
                                                                            "adv": {
                                                                              "js": "<>{required === \"y\" && readonly === \"n\" && <div {...props}>*</div>}</>",
                                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&readonly===\"n\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "full"
                                                                            },
                                                                            "html": "*",
                                                                            "name": "required",
                                                                            "text": "",
                                                                            "type": "text",
                                                                            "layout": {
                                                                              "dir": "col",
                                                                              "gap": 0,
                                                                              "align": "center"
                                                                            },
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "fit",
                                                                                "w": "fit"
                                                                              },
                                                                              "font": {
                                                                                "size": 20,
                                                                                "align": "left",
                                                                                "color": "#ff0000",
                                                                                "height": 115,
                                                                                "wordBreak": "break-normal",
                                                                                "whitespace": "whitespace-normal"
                                                                              },
                                                                              "layout": {
                                                                                "dir": "col",
                                                                                "gap": 0,
                                                                                "align": "center"
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 8,
                                                                                "r": 8,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "py4ih7x1rf4pjyhvi9oqazn3"
                                                                          }
                                                                        ],
                                                                        "mobile": {
                                                                          "dim": {
                                                                            "h": "fit",
                                                                            "w": "full"
                                                                          },
                                                                          "font": {
                                                                            "size": 15,
                                                                            "align": "left",
                                                                            "family": "Poppins",
                                                                            "height": "auto",
                                                                            "wordBreak": "break-normal",
                                                                            "whitespace": "whitespace-normal"
                                                                          },
                                                                          "layout": {
                                                                            "dir": "row",
                                                                            "gap": 0,
                                                                            "wrap": "flex-nowrap",
                                                                            "align": "top-left"
                                                                          },
                                                                          "padding": {
                                                                            "b": 3,
                                                                            "l": 20,
                                                                            "r": 0,
                                                                            "t": 10
                                                                          }
                                                                        },
                                                                        "originalId": "adwiu0a6hczq3t97be00ldz3"
                                                                      },
                                                                      {
                                                                        "id": "jiqoh3i8yhbm5iqw60p7v737",
                                                                        "adv": {
                                                                          "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                                          "css": "",
                                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                        },
                                                                        "dim": {
                                                                          "h": "fit",
                                                                          "w": "fit"
                                                                        },
                                                                        "name": "readonly",
                                                                        "type": "item",
                                                                        "childs": [
                                                                          {
                                                                            "id": "k7fhu2wgf1btry4sj7q0d65j",
                                                                            "adv": {
                                                                              "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                                              "css": "",
                                                                              "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "full"
                                                                            },
                                                                            "html": "",
                                                                            "name": "value",
                                                                            "text": "",
                                                                            "type": "text",
                                                                            "layout": {
                                                                              "dir": "col",
                                                                              "gap": 0,
                                                                              "align": "center"
                                                                            },
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "full",
                                                                                "w": "full"
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 20,
                                                                                "r": 10,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "w78i3lqjg44ii8khtyxbu8jj"
                                                                          }
                                                                        ],
                                                                        "originalId": "ensky4bqxor2c5oragtpxqsd"
                                                                      },
                                                                      {
                                                                        "id": "qy2f92etefcf1fkp8779sgmm",
                                                                        "adv": {
                                                                          "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                                          "css": "",
                                                                          "html": "",
                                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                        },
                                                                        "name": "editable",
                                                                        "type": "item",
                                                                        "childs": [
                                                                          {
                                                                            "id": "qbty8fn8ieb9nir8k0os5cjg",
                                                                            "adv": {
                                                                              "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                                              "css": "",
                                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "fit"
                                                                            },
                                                                            "name": "dropdown",
                                                                            "type": "item",
                                                                            "childs": [
                                                                              {
                                                                                "id": "wrfj2fwj95t1gyliv3w17elq",
                                                                                "adv": {
                                                                                  "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                                  "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                                },
                                                                                "dim": {
                                                                                  "h": "fit",
                                                                                  "w": "fit"
                                                                                },
                                                                                "name": "field",
                                                                                "type": "item",
                                                                                "childs": [],
                                                                                "mobile": {
                                                                                  "dim": {
                                                                                    "h": 42,
                                                                                    "w": "full"
                                                                                  },
                                                                                  "border": {
                                                                                    "color": "#E9E9E9",
                                                                                    "style": "solid",
                                                                                    "stroke": {
                                                                                      "b": 1,
                                                                                      "l": 1,
                                                                                      "r": 1,
                                                                                      "t": 1
                                                                                    },
                                                                                    "rounded": {
                                                                                      "bl": 8,
                                                                                      "br": 8,
                                                                                      "tl": 8,
                                                                                      "tr": 8
                                                                                    }
                                                                                  },
                                                                                  "layout": {
                                                                                    "dir": "col",
                                                                                    "gap": 0,
                                                                                    "wrap": "flex-nowrap",
                                                                                    "align": "left"
                                                                                  },
                                                                                  "padding": {
                                                                                    "b": 8,
                                                                                    "l": 7,
                                                                                    "r": 7,
                                                                                    "t": 8
                                                                                  }
                                                                                },
                                                                                "originalId": "l30ymfqzrl98o6wo9aset26r"
                                                                              }
                                                                            ],
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "fit",
                                                                                "w": "full"
                                                                              },
                                                                              "border": {
                                                                                "color": "",
                                                                                "style": "solid",
                                                                                "stroke": {
                                                                                  "b": 0,
                                                                                  "l": 0,
                                                                                  "r": 0,
                                                                                  "t": 0
                                                                                }
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 20,
                                                                                "r": 20,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "aw85htconrwed37s47ydco89"
                                                                          },
                                                                          {
                                                                            "id": "dykcocuxhxkoe1lqaxti23ot",
                                                                            "adv": {
                                                                              "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                                              "css": "",
                                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "fit"
                                                                            },
                                                                            "name": "text-area",
                                                                            "type": "item",
                                                                            "childs": [
                                                                              {
                                                                                "id": "yylu1p8i9qqlcsx02su53ime",
                                                                                "adv": {
                                                                                  "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                                  "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                                },
                                                                                "dim": {
                                                                                  "h": "fit",
                                                                                  "w": "fit"
                                                                                },
                                                                                "name": "field",
                                                                                "type": "item",
                                                                                "childs": [],
                                                                                "mobile": {
                                                                                  "dim": {
                                                                                    "h": 86,
                                                                                    "w": "full"
                                                                                  },
                                                                                  "border": {
                                                                                    "color": "#E9E9E9",
                                                                                    "style": "solid",
                                                                                    "stroke": {
                                                                                      "b": 1,
                                                                                      "l": 1,
                                                                                      "r": 1,
                                                                                      "t": 1
                                                                                    },
                                                                                    "rounded": {
                                                                                      "bl": 8,
                                                                                      "br": 8,
                                                                                      "tl": 8,
                                                                                      "tr": 8
                                                                                    }
                                                                                  },
                                                                                  "layout": {
                                                                                    "dir": "row",
                                                                                    "gap": 0,
                                                                                    "wrap": "flex-nowrap",
                                                                                    "align": "left"
                                                                                  },
                                                                                  "padding": {
                                                                                    "b": 5,
                                                                                    "l": 7,
                                                                                    "r": 7,
                                                                                    "t": 5
                                                                                  }
                                                                                },
                                                                                "originalId": "nmm7mbv9hpos4pw4grtcbnuq"
                                                                              }
                                                                            ],
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "fit",
                                                                                "w": "full"
                                                                              },
                                                                              "border": {
                                                                                "color": "",
                                                                                "style": "solid",
                                                                                "stroke": {
                                                                                  "b": 0,
                                                                                  "l": 0,
                                                                                  "r": 0,
                                                                                  "t": 0
                                                                                }
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 20,
                                                                                "r": 20,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "unhgflw546zst9ya3hmj9d5h"
                                                                          },
                                                                          {
                                                                            "id": "pmwm8f4odq9bb0f7fzz30njv",
                                                                            "adv": {
                                                                              "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                                              "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "fit"
                                                                            },
                                                                            "name": "text-field",
                                                                            "type": "item",
                                                                            "childs": [
                                                                              {
                                                                                "id": "ed8ftsx5g9dn02qr0tyud2ii",
                                                                                "adv": {
                                                                                  "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                                  "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                                },
                                                                                "dim": {
                                                                                  "h": "fit",
                                                                                  "w": "fit"
                                                                                },
                                                                                "name": "field",
                                                                                "type": "item",
                                                                                "childs": [],
                                                                                "mobile": {
                                                                                  "dim": {
                                                                                    "h": 42,
                                                                                    "w": "full"
                                                                                  },
                                                                                  "border": {
                                                                                    "color": "#e9e9e9",
                                                                                    "style": "solid",
                                                                                    "stroke": {
                                                                                      "b": 1,
                                                                                      "l": 1,
                                                                                      "r": 1,
                                                                                      "t": 1
                                                                                    },
                                                                                    "rounded": {
                                                                                      "bl": 8,
                                                                                      "br": 8,
                                                                                      "tl": 8,
                                                                                      "tr": 8
                                                                                    }
                                                                                  },
                                                                                  "layout": {
                                                                                    "dir": "row",
                                                                                    "gap": 0,
                                                                                    "wrap": "flex-nowrap",
                                                                                    "align": "left"
                                                                                  },
                                                                                  "padding": {
                                                                                    "b": 3,
                                                                                    "l": 7,
                                                                                    "r": 7,
                                                                                    "t": 3
                                                                                  }
                                                                                },
                                                                                "originalId": "xf3xy389iw96ul0j46c4qmqi"
                                                                              }
                                                                            ],
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "fit",
                                                                                "w": "full"
                                                                              },
                                                                              "border": {
                                                                                "color": "",
                                                                                "style": "solid",
                                                                                "stroke": {
                                                                                  "b": 0,
                                                                                  "l": 0,
                                                                                  "r": 0,
                                                                                  "t": 0
                                                                                }
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 20,
                                                                                "r": 20,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "r0y17u4snllmxdeir3tfigzc"
                                                                          },
                                                                          {
                                                                            "id": "yhk33ssiizgjed9wd67prmz6",
                                                                            "adv": {
                                                                              "js": "<>{type === \"upload\" && <div {...props}>{children}</div>}</>",
                                                                              "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"upload\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                            },
                                                                            "dim": {
                                                                              "h": "fit",
                                                                              "w": "fit"
                                                                            },
                                                                            "name": "text-field",
                                                                            "type": "item",
                                                                            "childs": [
                                                                              {
                                                                                "id": "kx3paxsvwarjn6lduojwhadl",
                                                                                "adv": {
                                                                                  "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                                  "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                                  "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                                },
                                                                                "dim": {
                                                                                  "h": "fit",
                                                                                  "w": "fit"
                                                                                },
                                                                                "name": "field",
                                                                                "type": "item",
                                                                                "childs": [],
                                                                                "mobile": {
                                                                                  "dim": {
                                                                                    "h": 42,
                                                                                    "w": "full"
                                                                                  },
                                                                                  "border": {
                                                                                    "color": "#e9e9e9",
                                                                                    "style": "solid",
                                                                                    "stroke": {
                                                                                      "b": 1,
                                                                                      "l": 1,
                                                                                      "r": 1,
                                                                                      "t": 1
                                                                                    },
                                                                                    "rounded": {
                                                                                      "bl": 8,
                                                                                      "br": 8,
                                                                                      "tl": 8,
                                                                                      "tr": 8
                                                                                    }
                                                                                  },
                                                                                  "layout": {
                                                                                    "dir": "row",
                                                                                    "gap": 0,
                                                                                    "wrap": "flex-nowrap",
                                                                                    "align": "left"
                                                                                  },
                                                                                  "padding": {
                                                                                    "b": 3,
                                                                                    "l": 7,
                                                                                    "r": 7,
                                                                                    "t": 3
                                                                                  }
                                                                                },
                                                                                "originalId": "linwfqljccyf76kpmc6vvsc0"
                                                                              }
                                                                            ],
                                                                            "mobile": {
                                                                              "dim": {
                                                                                "h": "fit",
                                                                                "w": "full"
                                                                              },
                                                                              "border": {
                                                                                "color": "",
                                                                                "style": "solid",
                                                                                "stroke": {
                                                                                  "b": 0,
                                                                                  "l": 0,
                                                                                  "r": 0,
                                                                                  "t": 0
                                                                                }
                                                                              },
                                                                              "padding": {
                                                                                "b": 0,
                                                                                "l": 20,
                                                                                "r": 20,
                                                                                "t": 0
                                                                              }
                                                                            },
                                                                            "originalId": "x48rs3gwlogxjyo20vhch17a"
                                                                          }
                                                                        ],
                                                                        "mobile": {
                                                                          "dim": {
                                                                            "h": "full",
                                                                            "w": "full",
                                                                            "hUnit": "px",
                                                                            "wUnit": "px"
                                                                          }
                                                                        },
                                                                        "originalId": "bhogfp8yvcek5m0df4fgnh0b"
                                                                      },
                                                                      {
                                                                        "id": "p9pjsqamkw974h9h6od58nw2",
                                                                        "adv": {
                                                                          "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                                          "css": "",
                                                                          "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                                        },
                                                                        "dim": {
                                                                          "h": "fit",
                                                                          "w": "fit"
                                                                        },
                                                                        "name": "error-msg",
                                                                        "type": "item",
                                                                        "childs": [],
                                                                        "mobile": {
                                                                          "font": {
                                                                            "size": 15,
                                                                            "align": "left",
                                                                            "color": "#f84848",
                                                                            "family": "Poppins",
                                                                            "height": "auto",
                                                                            "wordBreak": "break-normal",
                                                                            "whitespace": "whitespace-normal"
                                                                          },
                                                                          "padding": {
                                                                            "b": 3,
                                                                            "l": 20,
                                                                            "r": 20,
                                                                            "t": 3
                                                                          }
                                                                        },
                                                                        "originalId": "qd3jvy75f2efxznmctn9w57a"
                                                                      }
                                                                    ],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": "fit",
                                                                        "w": "full"
                                                                      },
                                                                      "font": {
                                                                        "size": 15,
                                                                        "align": "left",
                                                                        "family": "Poppins",
                                                                        "height": "auto",
                                                                        "wordBreak": "break-normal",
                                                                        "whitespace": "whitespace-normal"
                                                                      }
                                                                    },
                                                                    "originalId": "zymuhowj3vxwj16uetqnpysh"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "padding": {
                                                                    "b": 7,
                                                                    "l": 0,
                                                                    "r": 0,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "component": {
                                                                  "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                                  "group": {
                                                                    "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                                  },
                                                                  "props": {
                                                                    "name": {
                                                                      "idx": 3,
                                                                      "meta": {
                                                                        "type": "text"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"id_category\"",
                                                                      "valueBuilt": "\"id_category\";\n"
                                                                    },
                                                                    "type": {
                                                                      "gen": "async () => {}",
                                                                      "idx": 5,
                                                                      "meta": {
                                                                        "type": "option",
                                                                        "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"dropdown\"",
                                                                      "option": "[\n  {\n    label: \"yes\",\n    value: \"y\",\n  },\n  {\n    label: \"no\",\n    value: \"n\",\n  },\n]",
                                                                      "visible": "true",
                                                                      "valueBuilt": "\"dropdown\";\n"
                                                                    },
                                                                    "items": {
                                                                      "idx": 30,
                                                                      "meta": {
                                                                        "type": "text"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "() => any[] | Promise<any[]>",
                                                                      "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                                                      "visible": "type === \"dropdown\"",
                                                                      "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                                                    },
                                                                    "label": {
                                                                      "idx": 4,
                                                                      "meta": {
                                                                        "type": "text"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"Category\"",
                                                                      "valueBuilt": "\"Category\";\n"
                                                                    },
                                                                    "change": {
                                                                      "idx": 8,
                                                                      "meta": {
                                                                        "type": "text"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "() => void | Promise<void>",
                                                                      "value": "async (val) => {}",
                                                                      "valueBuilt": " async a=>{};\n"
                                                                    },
                                                                    "readonly": {
                                                                      "idx": 7,
                                                                      "meta": {
                                                                        "type": "option",
                                                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"n\"",
                                                                      "option": "[\n  {\n    label: \"yes\",\n    value: \"y\"\n  },\n  {\n    label: \"no\",\n    value: \"n\"\n  },\n]",
                                                                      "valueBuilt": "\"n\";\n"
                                                                    },
                                                                    "required": {
                                                                      "idx": 6,
                                                                      "meta": {
                                                                        "type": "option",
                                                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"n\"",
                                                                      "valueBuilt": "\"n\";\n"
                                                                    },
                                                                    "placeholder": {
                                                                      "idx": 20,
                                                                      "meta": {
                                                                        "type": "text"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"-\"",
                                                                      "visible": "type === 'text' || type === \"textarea\"",
                                                                      "valueBuilt": "\"-\";\n"
                                                                    },
                                                                    "autocomplete": {
                                                                      "idx": 21,
                                                                      "meta": {
                                                                        "type": "option",
                                                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                                      },
                                                                      "name": "prop",
                                                                      "type": "string",
                                                                      "value": "\"on\"",
                                                                      "visible": "type === \"password\" || type === \"text\"",
                                                                      "valueBuilt": "\"on\";\n"
                                                                    }
                                                                  }
                                                                },
                                                                "originalId": "io41aryubkx702k69k1vo8ki"
                                                              }
                                                            ],
                                                            "component": {
                                                              "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                              "props": {
                                                                "name": {
                                                                  "idx": 3,
                                                                  "meta": {
                                                                    "type": "text"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "Object.keys(form).filter((key) => key.includes(`${x?.label}_${last_index}`))\n  .length >\n  0 === true\n  ? `${x?.label}_${last_index + 1}`\n  : `${x?.label}_${last_index}`",
                                                                  "valueBuilt": " Object.keys(form).filter(e=>e.includes(`${x?.label}_${last_index}`)).length>0?`${x?.label}_${last_index+1}`:`${x?.label}_${last_index}`;\n"
                                                                },
                                                                "type": {
                                                                  "idx": 6,
                                                                  "meta": {
                                                                    "type": "option",
                                                                    "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "\"attachment\"",
                                                                  "content": {
                                                                    "id": "dfombu12crrkd5dspqk3mca4",
                                                                    "adv": {
                                                                      "css": ""
                                                                    },
                                                                    "dim": {
                                                                      "h": "full",
                                                                      "w": "full"
                                                                    },
                                                                    "name": "type",
                                                                    "type": "item",
                                                                    "childs": []
                                                                  },
                                                                  "valueBuilt": "\"attachment\";\n"
                                                                },
                                                                "items": {
                                                                  "idx": 30,
                                                                  "meta": {
                                                                    "type": "text"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "() => any[] | Promise<any[]>",
                                                                  "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                                                  "visible": "type === \"dropdown\"",
                                                                  "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                                                },
                                                                "label": {
                                                                  "idx": 5,
                                                                  "meta": {
                                                                    "type": "text"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "x?.label || \"Unggah File\"",
                                                                  "valueBuilt": " x?.label||\"Unggah File\";\n"
                                                                },
                                                                "change": {
                                                                  "idx": 7,
                                                                  "meta": {
                                                                    "type": "text"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "() => void | Promise<void>",
                                                                  "value": "async (val) => {}",
                                                                  "valueBuilt": " async a=>{};\n"
                                                                },
                                                                "readonly": {
                                                                  "idx": 7,
                                                                  "meta": {
                                                                    "type": "option",
                                                                    "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "form.verified || user.role === \"staff\" ? \"y\" : \"n\"",
                                                                  "valueBuilt": " form.verified||user.role===\"staff\"?\"y\":\"n\";\n"
                                                                },
                                                                "required": {
                                                                  "idx": 6,
                                                                  "meta": {
                                                                    "type": "option",
                                                                    "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "\"n\"",
                                                                  "valueBuilt": "\"n\";\n"
                                                                },
                                                                "placeholder": {
                                                                  "idx": 20,
                                                                  "meta": {
                                                                    "type": "text"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "\"url file\"",
                                                                  "visible": "type === 'text'",
                                                                  "valueBuilt": "\"url file\";\n"
                                                                },
                                                                "autocomplete": {
                                                                  "idx": 21,
                                                                  "meta": {
                                                                    "type": "option",
                                                                    "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                                  },
                                                                  "name": "prop",
                                                                  "type": "string",
                                                                  "value": "\"on\"",
                                                                  "visible": "type === 'password' || type === 'text'",
                                                                  "valueBuilt": "\"on\";\n"
                                                                }
                                                              }
                                                            },
                                                            "originalId": "np9jsvjotgng5a4buui63lix"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full",
                                                            "hUnit": "px",
                                                            "wUnit": "px"
                                                          },
                                                          "layout": {
                                                            "dir": "col",
                                                            "gap": 0,
                                                            "wrap": "flex-nowrap",
                                                            "align": "top-center"
                                                          }
                                                        },
                                                        "originalId": "qlhyzvr28vvgrxx1xhcal3ab"
                                                      }
                                                    ],
                                                    "hidden": false,
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "wrap": "flex-wrap",
                                                        "align": "top-left"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 0,
                                                        "r": 0,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "full",
                                                    "w": "full"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  }
                                                }
                                              }
                                            },
                                            "sample": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => Promise<any>",
                                              "value": "async () => {\n  let data = await db.m_action.findFirst({\n    where: {\n      id: Number(params.id_action),\n      id_client: user.id_client,\n      has_attachment: true,\n      attachment_name: {\n        not: null,\n      },\n    },\n    select: {\n      attachment_name: true,\n    },\n  });\n\n  console.log(data, 'ini data input')\n\n  let actions = [];\n\n  data?.attachment_name?.map((item, idx) => {\n    actions.push({\n      label: item,\n      index: idx + 1,\n    });\n  });\n\n  console.log(actions, 'actions input')\n\n  return { actions };\n}",
                                              "valueBuilt": " async()=>{let a=await db.m_action.findFirst({where:{id:Number(params.id_action),id_client:user.id_client,has_attachment:!0,attachment_name:{not:null}},select:{attachment_name:!0}});console.log(a,\"ini data input\");let t=[];return a?.attachment_name?.map((e,n)=>{t.push({label:e,index:n+1})}),console.log(t,\"actions input\"),{actions:t}};\n"
                                            },
                                            "loading": {
                                              "idx": 1,
                                              "meta": {
                                                "type": "content-element"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"hello\"",
                                              "content": {
                                                "id": "e3nfzx7wt66o7i39mg6gfhzs",
                                                "dim": {
                                                  "h": "full",
                                                  "w": "full"
                                                },
                                                "name": "loading",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "p3pwq9rkqfx9khcuij0xi08q",
                                                    "name": "Wrapped",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "pcxxjfuf8u1a05q4w5ofz0pd",
                                                        "adv": {
                                                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                                          "css": "",
                                                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "New Item",
                                                        "type": "item",
                                                        "childs": [],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": 12,
                                                            "w": 139
                                                          },
                                                          "border": {
                                                            "style": "solid",
                                                            "rounded": {
                                                              "bl": 6,
                                                              "br": 6,
                                                              "tl": 6,
                                                              "tr": 6
                                                            }
                                                          },
                                                          "padding": {
                                                            "b": 0,
                                                            "l": 0,
                                                            "r": 0,
                                                            "t": 0
                                                          }
                                                        },
                                                        "originalId": "o2816ap8bwyhk8w5gpv16ke7"
                                                      },
                                                      {
                                                        "id": "fqawujmfl1vdbaw1u76hgory",
                                                        "name": "Wrapped",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "st1wwmzvvsbztabdqc38a16p",
                                                            "adv": {
                                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "New Item",
                                                            "type": "item",
                                                            "childs": [],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": 27,
                                                                "w": "full"
                                                              },
                                                              "border": {
                                                                "style": "solid",
                                                                "rounded": {
                                                                  "bl": 8,
                                                                  "br": 8,
                                                                  "tl": 8,
                                                                  "tr": 8
                                                                }
                                                              },
                                                              "padding": {
                                                                "b": 0,
                                                                "l": 0,
                                                                "r": 0,
                                                                "t": 0
                                                              }
                                                            },
                                                            "originalId": "kih66c1aduo788e4eomfsewo"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full",
                                                            "hUnit": "px",
                                                            "wUnit": "px"
                                                          },
                                                          "border": {
                                                            "color": "#f2f2f2",
                                                            "style": "solid",
                                                            "stroke": {
                                                              "b": 1,
                                                              "l": 1,
                                                              "r": 1,
                                                              "t": 1
                                                            },
                                                            "rounded": {
                                                              "bl": 10,
                                                              "br": 10,
                                                              "tl": 10,
                                                              "tr": 10
                                                            }
                                                          },
                                                          "padding": {
                                                            "b": 7,
                                                            "l": 6,
                                                            "r": 6,
                                                            "t": 7
                                                          }
                                                        },
                                                        "originalId": "ck13ax6wak6gl2xldic3nb1k"
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full",
                                                        "hUnit": "px",
                                                        "wUnit": "px"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 7,
                                                        "wrap": "flex-nowrap",
                                                        "align": "top-left"
                                                      }
                                                    },
                                                    "originalId": "r8b2la5wo5cpb2qmq0dmqzex"
                                                  }
                                                ],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 15,
                                                    "l": 15,
                                                    "r": 15,
                                                    "t": 15
                                                  }
                                                },
                                                "parentInstanceId": "vm81u5esw0gsqsjtnnnde9jd"
                                              },
                                              "valueBuilt": "\"hello\""
                                            },
                                            "preview": {
                                              "idx": 2,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"ready\"",
                                              "valueBuilt": "\"ready\";\n"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full",
                                        "hUnit": "px",
                                        "wUnit": "px"
                                      }
                                    }
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  }
                                }
                              },
                              {
                                "id": "if76gwkhe3191bmpe3lwdt1z",
                                "adv": {
                                  "js": "<>{form.m_action.has_notes === true && <div {...props}>{children}</div>}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_notes===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "notes",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "u2pnd0xnn90exktipqtwmyai",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"notes\"",
                                          "valueBuilt": "\"notes\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"textarea\"",
                                          "content": {
                                            "id": "r12nzno3kjj2d1o9xqw3ji5f",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"textarea\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Catatan\"",
                                          "valueBuilt": "\"Catatan\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "(form.verified || user.role === \"staff\") && Number(params.id_action) !== 9\n  ? \"y\"\n  : user.role === \"ppds\" && Number(params.id_action) === 9\n  ? \"y\"\n  : \"n\"",
                                          "valueBuilt": "(form.verified||user.role===\"staff\")&&Number(params.id_action)!==9||user.role===\"ppds\"&&Number(params.id_action)===9?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Isi Catatan...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Isi Catatan...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "e5q9ct9wd4do3udozjq3eitj"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "nv6kmhssnq2gnd53o4rzjr1e"
                              },
                              {
                                "id": "a3k1kpq2dd598p6nbpirt4dz",
                                "adv": {
                                  "js": "<>{form.m_action.has_category === true && <div {...props}>{children}</div>}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_category===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "category",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "xq2lrbneuo2aasnljs50x6h8",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "ccbse1ft5rip5tv6vosyujon",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "New Item",
                                        "type": "item",
                                        "childs": []
                                      }
                                    ],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_category\"",
                                          "valueBuilt": "\"id_category\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "l8kgkff71oj4jvf74fhugj7i",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  console.log(localStorage.getItem(\"id_category\"));\n  let data = await db.m_action_category.findMany({\n    where: !localStorage.getItem(\"id_category\")\n      ? {\n          id_action: Number(params.id_action),\n          id_client: Number(user.id_client),\n        }\n      : {\n          id_action: Number(params.id_action),\n          id_client: Number(user.id_client),\n          id: Number(localStorage.getItem(\"id_category\")),\n        },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.name,\n      value: Number(item.id),\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih kategori\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{console.log(localStorage.getItem(\"id_category\"));let a=(await db.m_action_category.findMany({where:localStorage.getItem(\"id_category\")?{id_action:Number(params.id_action),id_client:Number(user.id_client),id:Number(localStorage.getItem(\"id_category\"))}:{id_action:Number(params.id_action),id_client:Number(user.id_client)}})).map(e=>({label:e.name,value:Number(e.id)}));return a.unshift({label:\"Pilih kategori\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Kategori\"",
                                          "valueBuilt": "\"Kategori\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified || user.role === \"staff\" ? \"y\" : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "nckp2i6sgi8yzcdhr1mx05ct"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "ysdecknb9e9ji50heyoa9gjz"
                              },
                              {
                                "id": "p9wiwb3en31bfep2ous5jbqn",
                                "adv": {
                                  "js": "<>{form.m_action.has_hospital === true && (<div {...props}>{children}</div>)}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_hospital===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "hospital",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "pjm8t9ujfjb27m3si8x2ae1m",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"id_hospital\"",
                                          "valueBuilt": "\"id_hospital\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"dropdown\"",
                                          "content": {
                                            "id": "sj5hvk1mblrod1ej95na0v8j",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"dropdown\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  let data = await db.m_hospital.findMany({\n    where: {\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.name,\n      value: item.id,\n    };\n  });\n  datanya.unshift({\n    label: \"Pilih Rumah Sakit\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_hospital.findMany({where:{id_client:Number(user.id_client)}})).map(e=>({label:e.name,value:e.id}));return a.unshift({label:\"Pilih Rumah Sakit\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Rumah Sakit\"",
                                          "valueBuilt": "\"Rumah Sakit\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified || user.role === \"staff\" ? \"y\" : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "p38fx518lhdgwn5dsl20gin3"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "u1bf8ykpojxv5yx365b2y7an"
                              },
                              {
                                "id": "e2wk90ehj7f2dsrh2eo6sc2u",
                                "adv": {
                                  "js": "<>{form.m_action.has_location === true && <div {...props}>{children}</div>}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_location===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "location",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "drwbasqmomm0r2oj415bwag2",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"location\"",
                                          "valueBuilt": "\"location\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"text\"",
                                          "content": {
                                            "id": "gh8zguxsezk6wgs033h4vw9c",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"text\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Lokasi\"",
                                          "valueBuilt": "\"Lokasi\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified || user.role === \"staff\" ? \"y\" : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Pilih Lokasi...\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Pilih Lokasi...\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "snh04njeznxyrh6rawdi0dfs"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "jbom1ejc73r85a9zl3f0unn6"
                              },
                              {
                                "id": "xbatuli6h92fyjsnxr83h2lh",
                                "adv": {
                                  "js": "<>{form.m_action.has_presentation === true && <div {...props}>{children}</div>}</>",
                                  "css": "",
                                  "html": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form.m_action.has_presentation===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "name": "presentation",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "vscr16genqt54l3ve6aem691",
                                    "name": "field",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"is_presentation\"",
                                          "valueBuilt": "\"is_presentation\";\n"
                                        },
                                        "type": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"toggle\"",
                                          "content": {
                                            "id": "gh8zguxsezk6wgs033h4vw9c",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"toggle\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                        },
                                        "label": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Presentasi\"",
                                          "valueBuilt": "\"Presentasi\";\n"
                                        },
                                        "change": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "form.verified || user.role === \"staff\" ? \"y\" : \"n\"",
                                          "valueBuilt": " form.verified||user.role===\"staff\"?\"y\":\"n\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"Presentasi?\"",
                                          "visible": "type === 'text'",
                                          "valueBuilt": "\"Presentasi?\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === 'password' || type === 'text'",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "udo2jxqp5j85kyum8fspz0xl"
                                  }
                                ],
                                "mobile": {
                                  "dim": {
                                    "h": "fit",
                                    "w": "full",
                                    "hUnit": "px",
                                    "wUnit": "px"
                                  }
                                },
                                "originalId": "gxhvrb42n6t7zerj2wxyyrey"
                              },
                              {
                                "id": "hpeyekjkqadvyzzuoo8vmlc6",
                                "adv": {
                                  "js": "<>\n  {user.role === \"staff\" &&\n    form.m_action.has_score === true &&\n    // form.m_action.has_score_option === true &&\n    form.verified === true && <div {...props}>{children}</div>}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"staff\"&&form.m_action.has_score===!0&&form.verified===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "total_score_output",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "o71s70m5dxlosqq1t10lest4",
                                    "adv": {
                                      "css": ""
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "field",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "bpyamzqkbtqejv2nqlsyjlr1",
                                        "adv": {
                                          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "box",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "yss2gge5ov5oy0l5k4hadu6s",
                                            "adv": {
                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "label",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "rrt6tas4ln83izxnsiit8j5c",
                                                "adv": {
                                                  "js": "<div {...props}>{label}</div>",
                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "var",
                                                "type": "item",
                                                "childs": []
                                              },
                                              {
                                                "id": "wc8g7d57xsyjgzykre0snoov",
                                                "adv": {
                                                  "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "full"
                                                },
                                                "html": "*",
                                                "name": "required",
                                                "text": "",
                                                "type": "text",
                                                "layout": {
                                                  "dir": "col",
                                                  "gap": 0,
                                                  "align": "center"
                                                },
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "fit"
                                                  },
                                                  "font": {
                                                    "size": 20,
                                                    "align": "left",
                                                    "color": "#ff0000",
                                                    "height": 115,
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 0,
                                                    "align": "center"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 8,
                                                    "r": 8,
                                                    "t": 0
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              },
                                              "font": {
                                                "size": 15,
                                                "align": "left",
                                                "family": "Poppins",
                                                "height": "auto",
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 20,
                                                "r": 0,
                                                "t": 10
                                              }
                                            }
                                          },
                                          {
                                            "id": "zxhz66os6h3q9rbpwkw4surw",
                                            "adv": {
                                              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "readonly",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "pfavo6lye9l8stnyewnbh4dp",
                                                "adv": {
                                                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "full"
                                                },
                                                "html": "",
                                                "name": "value",
                                                "text": "",
                                                "type": "text",
                                                "layout": {
                                                  "dir": "col",
                                                  "gap": 0,
                                                  "align": "center"
                                                },
                                                "mobile": {
                                                  "dim": {
                                                    "h": "full",
                                                    "w": "full"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 10,
                                                    "t": 0
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "id": "eb7q0xg5ll7pt7zv9k63o9ul",
                                            "adv": {
                                              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                              "css": "",
                                              "html": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                            },
                                            "name": "editable",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "t62w2i1lnciadwpwwy8b88gj",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "pd2794l7u6zib5bvssf852r0",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#E9E9E9",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 1,
                                                          "l": 1,
                                                          "r": 1,
                                                          "t": 1
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 8,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 8
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "urp8p0yg53nvm0a61l7dcq7t",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "ml41cmncz73kcdjsel1tddv5",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#E9E9E9",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 1,
                                                          "l": 1,
                                                          "r": 1,
                                                          "t": 1
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "mg9p0s1noyrledy1mlegcdiv",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "mv3dkfnygdp72q17nousz9b1",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#e9e9e9",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 1,
                                                          "l": 1,
                                                          "r": 1,
                                                          "t": 1
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 3,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 3
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "full",
                                                "w": "full",
                                                "hUnit": "px",
                                                "wUnit": "px"
                                              }
                                            }
                                          },
                                          {
                                            "id": "nftp9k8oupenm40eemmghvli",
                                            "adv": {
                                              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "error-msg",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "font": {
                                                "size": 15,
                                                "align": "left",
                                                "color": "#f84848",
                                                "family": "Poppins",
                                                "height": "auto",
                                                "wordBreak": "break-normal",
                                                "whitespace": "whitespace-normal"
                                              },
                                              "padding": {
                                                "b": 3,
                                                "l": 20,
                                                "r": 20,
                                                "t": 3
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "font": {
                                            "size": 15,
                                            "align": "left",
                                            "family": "Poppins",
                                            "height": "auto",
                                            "wordBreak": "break-normal",
                                            "whitespace": "whitespace-normal"
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "fit",
                                        "w": "full"
                                      },
                                      "padding": {
                                        "b": 7,
                                        "l": 0,
                                        "r": 0,
                                        "t": 0
                                      }
                                    },
                                    "component": {
                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                      "group": {
                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                      },
                                      "props": {
                                        "name": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "`total_score`",
                                          "valueBuilt": "\"total_score\";\n"
                                        },
                                        "type": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"text\"",
                                          "content": {
                                            "id": "fyffcgdflfpd1qf9hsxhbrq2",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "type",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"text\";\n"
                                        },
                                        "items": {
                                          "idx": 30,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => any[] | Promise<any[]>",
                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_score_option.findMany({\n    where: {\n      id_action: Number(params.id_action),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.score,\n      value: Number(item.score),\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih skor\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                          "visible": "type === \"dropdown\"",
                                          "valueBuilt": " async()=>{let a=(await db.m_score_option.findMany({where:{id_action:Number(params.id_action)}})).map(e=>({label:e.score,value:Number(e.score)}));return a.unshift({label:\"Pilih skor\",value:\"null\"}),a};\n"
                                        },
                                        "label": {
                                          "idx": 4,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "`Total Skor`",
                                          "valueBuilt": "\"Total Skor\";\n"
                                        },
                                        "change": {
                                          "idx": 8,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => void | Promise<void>",
                                          "value": "async (val) => {}",
                                          "valueBuilt": " async a=>{};\n"
                                        },
                                        "readonly": {
                                          "idx": 7,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"y\"",
                                          "valueBuilt": "\"y\";\n"
                                        },
                                        "required": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "placeholder": {
                                          "idx": 20,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"-\"",
                                          "visible": "type === 'text' || type === \"textarea\"",
                                          "valueBuilt": "\"-\";\n"
                                        },
                                        "autocomplete": {
                                          "idx": 21,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"on\"",
                                          "visible": "type === \"password\" || type === \"text\"",
                                          "valueBuilt": "\"on\";\n"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "id": "qjp14tbrghdh5uad4owkw8sc",
                                "adv": {
                                  "js": "<>\n  {user.role === \"staff\" &&\n    form.m_action.has_score === true &&\n    form.m_action.has_score_option === true &&\n    form.verified === false && <div {...props}>{children}</div>}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"staff\"&&form.m_action.has_score===!0&&form.m_action.has_score_option===!0&&form.verified===!1&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "score_option_input",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "pbu4oxcxrzl0lxonawtnxh7j",
                                    "name": "loader",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                                      "props": {
                                        "load": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  return {};\n}",
                                          "valueBuilt": " async()=>({});\n"
                                        },
                                        "mode": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"sample\"",
                                          "valueBuilt": "\"sample\";\n"
                                        },
                                        "debug": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "ready": {
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "content": {
                                            "id": "vw9bmbbuzx6i0jpz3zemcj4i",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "ready",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "hcs9805fbn5kvtsxlz7aty0b",
                                                "adv": {
                                                  "js": "<div {...props}>\n  {(data.actions || []).map((item, idx) => {\n    return (\n      <PassProp item={item} key={idx}>\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(data.actions||[]).map((r,a)=>React.createElement(PassProp,{item:r,key:a},children))));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "items",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "o1qfcxezbh1mrefxqk3fq1me",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "miabrdb6dap1ye8g6ie9lss6",
                                                        "adv": {
                                                          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "box",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "j9fny8ii7xpkpgqzy2e138ep",
                                                            "adv": {
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "label",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "vb1bxxn67ehbalt5eyi16f1h",
                                                                "adv": {
                                                                  "js": "<div {...props}>{label}</div>",
                                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "var",
                                                                "type": "item",
                                                                "childs": [],
                                                                "originalId": "h7wys6x1ujpnyi7zs78gjonx"
                                                              },
                                                              {
                                                                "id": "b1mhqfld7cy5n51e2ats1wkx",
                                                                "adv": {
                                                                  "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "*",
                                                                "name": "required",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "fit"
                                                                  },
                                                                  "font": {
                                                                    "size": 20,
                                                                    "align": "left",
                                                                    "color": "#ff0000",
                                                                    "height": 115,
                                                                    "wordBreak": "break-normal",
                                                                    "whitespace": "whitespace-normal"
                                                                  },
                                                                  "layout": {
                                                                    "dir": "col",
                                                                    "gap": 0,
                                                                    "align": "center"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 8,
                                                                    "r": 8,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "x0llfsam58lfd3hzaddqljk3"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "layout": {
                                                                "dir": "row",
                                                                "gap": 0,
                                                                "wrap": "flex-nowrap",
                                                                "align": "top-left"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 0,
                                                                "t": 10
                                                              }
                                                            },
                                                            "originalId": "cexvcp7p195y0v1ypxb728sr"
                                                          },
                                                          {
                                                            "id": "klwnb2mrqpwsxrjbe19yjo29",
                                                            "adv": {
                                                              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "readonly",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "nlkbp5hzc2zasnpj3key9wom",
                                                                "adv": {
                                                                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "",
                                                                "name": "value",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "full",
                                                                    "w": "full"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 10,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "a4sd29hf31bhbonpbvnpbb6t"
                                                              }
                                                            ],
                                                            "originalId": "rpgyxup08wisao150mdbnkg3"
                                                          },
                                                          {
                                                            "id": "ydxb6cn4dg6kzjw23uahm4wi",
                                                            "adv": {
                                                              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "html": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "name": "editable",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "s09wcaeyhuejybv1jwrgf515",
                                                                "adv": {
                                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "dropdown",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "fzbm4go3t7kphcl89i780lph",
                                                                    "adv": {
                                                                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "col",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 8,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 8
                                                                      }
                                                                    },
                                                                    "originalId": "wut1m7mhzlntt4axz7vu8wj1"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "klmsditytpvypsixeucb2w9v"
                                                              },
                                                              {
                                                                "id": "wv3060zdstb9glhcnpgofibq",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-area",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "o0mmamff4wq5kcbjmir8iu2a",
                                                                    "adv": {
                                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 86,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 5,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 5
                                                                      }
                                                                    },
                                                                    "originalId": "d679b3g02y5dxvgk9ntnpg58"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "cua45q4jsa2xs2u6qsire5ej"
                                                              },
                                                              {
                                                                "id": "nm3jm25ytugv9dn314ss7kw8",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-field",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "xvapctpxcfx3ac2aeix5r0nf",
                                                                    "adv": {
                                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#e9e9e9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 3,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 3
                                                                      }
                                                                    },
                                                                    "originalId": "lzjggz8xr9s47z99zzjcm1v0"
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                },
                                                                "originalId": "o6eyk2z4w2nsllv67k23jxqy"
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "full",
                                                                "w": "full",
                                                                "hUnit": "px",
                                                                "wUnit": "px"
                                                              }
                                                            },
                                                            "originalId": "z72yvd4np8tlgy4jv332yk45"
                                                          },
                                                          {
                                                            "id": "b5hivnu0e0drua80jaxby5jq",
                                                            "adv": {
                                                              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "error-msg",
                                                            "type": "item",
                                                            "childs": [],
                                                            "mobile": {
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "color": "#f84848",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 3
                                                              }
                                                            },
                                                            "originalId": "em87qw5igfia7juuu7gwdyw4"
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          }
                                                        },
                                                        "originalId": "f0rfogfmkesxztrbnvx92moq"
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full"
                                                      },
                                                      "padding": {
                                                        "b": 7,
                                                        "l": 0,
                                                        "r": 0,
                                                        "t": 0
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                      "group": {
                                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                      },
                                                      "props": {
                                                        "name": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`asm_param_${Number(params.id)}_${item.id}`",
                                                          "valueBuilt": "`asm_param_${Number(params.id)}_${item.id}`;\n"
                                                        },
                                                        "type": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"dropdown\"",
                                                          "content": {
                                                            "id": "t9953dlzojdxiaq1bg2ns1cq",
                                                            "adv": {
                                                              "css": ""
                                                            },
                                                            "dim": {
                                                              "h": "full",
                                                              "w": "full"
                                                            },
                                                            "name": "type",
                                                            "type": "item",
                                                            "childs": []
                                                          },
                                                          "valueBuilt": "\"dropdown\";\n"
                                                        },
                                                        "items": {
                                                          "idx": 30,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => any[] | Promise<any[]>",
                                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_score_option.findMany({\n    where: {\n      id_action: Number(params.id_action),\n      id_client: Number(user.id_client),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.score,\n      value: Number(item.score),\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih skor\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                                          "visible": "type === \"dropdown\"",
                                                          "valueBuilt": " async()=>{let a=(await db.m_score_option.findMany({where:{id_action:Number(params.id_action),id_client:Number(user.id_client)}})).map(e=>({label:e.score,value:Number(e.score)}));return a.unshift({label:\"Pilih skor\",value:\"null\"}),a};\n"
                                                        },
                                                        "label": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`Skor ${item.name}`",
                                                          "valueBuilt": "`Skor ${item.name}`;\n"
                                                        },
                                                        "change": {
                                                          "idx": 8,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => void | Promise<void>",
                                                          "value": "async (val) => {}",
                                                          "valueBuilt": " async a=>{};\n"
                                                        },
                                                        "readonly": {
                                                          "idx": 7,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"n\"",
                                                          "valueBuilt": "\"n\";\n"
                                                        },
                                                        "required": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"n\"",
                                                          "valueBuilt": "\"n\";\n"
                                                        },
                                                        "placeholder": {
                                                          "idx": 20,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"-\"",
                                                          "visible": "type === 'text' || type === \"textarea\"",
                                                          "valueBuilt": "\"-\";\n"
                                                        },
                                                        "autocomplete": {
                                                          "idx": 21,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"on\"",
                                                          "visible": "type === \"password\" || type === \"text\"",
                                                          "valueBuilt": "\"on\";\n"
                                                        }
                                                      }
                                                    },
                                                    "originalId": "eldgpbjy22526ilktae52ea3"
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "fit"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "wrap": "flex-wrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 0,
                                                    "r": 0,
                                                    "t": 0
                                                  }
                                                },
                                                "originalId": "o2mgys5lzdvxpmzaz6dpcau1"
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "full",
                                                "w": "full"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            },
                                            "originalId": "tfsqzxgf3mj9gsqwda7rladm"
                                          }
                                        },
                                        "sample": {
                                          "idx": 4,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  let data = await db.m_asm_action.findMany({\n    where: {\n      id_action: Number(params.id_action),\n      id_client: user.id_client\n    },\n    include: {\n      m_asm_param: true\n    }\n  });\n\n  let actions = data?.map((item) => {\n    return {\n      id: item.m_asm_param.id,\n      name: item.m_asm_param.name,\n      min_score: item.m_asm_param.min_score,\n      max_score: item.m_asm_param.max_score,\n    }\n  })\n  return {actions}\n}",
                                          "valueBuilt": " async()=>({actions:(await db.m_asm_action.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client},include:{m_asm_param:!0}}))?.map(a=>({id:a.m_asm_param.id,name:a.m_asm_param.name,min_score:a.m_asm_param.min_score,max_score:a.m_asm_param.max_score}))});\n"
                                        },
                                        "loading": {
                                          "idx": 1,
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"hello\"",
                                          "content": {
                                            "id": "ayyexmb0ttpor8z86db6c6id",
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "loading",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "in6lm6lloqeik9w9cu0yumyv",
                                                "name": "Wrapped",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "jjdap8573cnzsbnp4vw6tzk7",
                                                    "adv": {
                                                      "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "bar",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 49,
                                                          "br": 49,
                                                          "tl": 49,
                                                          "tr": 49
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 29,
                                                        "l": 27,
                                                        "r": 27,
                                                        "t": 29
                                                      }
                                                    },
                                                    "originalId": "nsezsuvcbcqtfzapgdrm3o09"
                                                  }
                                                ],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 8,
                                                    "wrap": "flex-nowrap",
                                                    "align": "center"
                                                  },
                                                  "padding": {
                                                    "b": 8,
                                                    "l": 13,
                                                    "r": 13,
                                                    "t": 8
                                                  }
                                                },
                                                "originalId": "b7ersrgngjkc05xklmbqi5fn"
                                              }
                                            ],
                                            "mobile": {
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            },
                                            "originalId": "nkuptg6vg4llqy25ycv5ufr5",
                                            "parentInstanceId": "vm81u5esw0gsqsjtnnnde9jd"
                                          },
                                          "valueBuilt": "\"hello\""
                                        },
                                        "preview": {
                                          "idx": 2,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"ready\"",
                                          "valueBuilt": "\"ready\";\n"
                                        }
                                      }
                                    },
                                    "originalId": "k9gchhilm2744lfsvrnqnikn"
                                  }
                                ],
                                "originalId": "fmrbwlrun0l6osmqcw2zk6fb"
                              },
                              {
                                "id": "u0oifpqhkjcvnyh7mdi8p5ym",
                                "adv": {
                                  "js": "<>\n  {user.role === \"staff\" &&\n    form.m_action.has_score === true &&\n    form.m_action.has_score_option === true &&\n    form.verified === true && <div {...props}>{children}</div>}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"staff\"&&form.m_action.has_score===!0&&form.m_action.has_score_option===!0&&form.verified===!0&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "score_option_output",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "zce8x0qv0qlsygpfbnk1j0w2",
                                    "name": "loader",
                                    "type": "item",
                                    "childs": [],
                                    "component": {
                                      "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                                      "props": {
                                        "load": {
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  return {};\n}",
                                          "valueBuilt": " async()=>({});\n"
                                        },
                                        "mode": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"sample\"",
                                          "valueBuilt": "\"sample\";\n"
                                        },
                                        "debug": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "ready": {
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "content": {
                                            "id": "wliyvm0oxgz1uj7vf4r3hqkp",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "ready",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "zafvfj0n14g4kjqdzlmsuguf",
                                                "adv": {
                                                  "js": "<div {...props}>\n  {(data.actions || []).map((item, idx) => {\n    return (\n      <PassProp item={item} key={idx}>\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(data.actions||[]).map((r,a)=>React.createElement(PassProp,{item:r,key:a},children))));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "items",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "iwiitila3t99fgefmsvtjhf3",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "xo6k1ufvmclccf7dh9kz1t4h",
                                                        "adv": {
                                                          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "box",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "kashva8ks7kltlecdrhfe7ll",
                                                            "adv": {
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "label",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "j9tnce22khk7mwgly8m9702l",
                                                                "adv": {
                                                                  "js": "<div {...props}>{label}</div>",
                                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "var",
                                                                "type": "item",
                                                                "childs": []
                                                              },
                                                              {
                                                                "id": "li0k510jc317mhoousihmxoi",
                                                                "adv": {
                                                                  "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "*",
                                                                "name": "required",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "fit"
                                                                  },
                                                                  "font": {
                                                                    "size": 20,
                                                                    "align": "left",
                                                                    "color": "#ff0000",
                                                                    "height": 115,
                                                                    "wordBreak": "break-normal",
                                                                    "whitespace": "whitespace-normal"
                                                                  },
                                                                  "layout": {
                                                                    "dir": "col",
                                                                    "gap": 0,
                                                                    "align": "center"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 8,
                                                                    "r": 8,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "layout": {
                                                                "dir": "row",
                                                                "gap": 0,
                                                                "wrap": "flex-nowrap",
                                                                "align": "top-left"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 0,
                                                                "t": 10
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "id": "v4l21t4nnjjwtrkd8s4q19ul",
                                                            "adv": {
                                                              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "readonly",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "ey5aav38pz74wd2iyocctpk7",
                                                                "adv": {
                                                                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "",
                                                                "name": "value",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "full",
                                                                    "w": "full"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 10,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "id": "yqhpexv9vn6wam2mkwmwq5c8",
                                                            "adv": {
                                                              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "html": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "name": "editable",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "wv21tg5yslcfp4m3dobq7054",
                                                                "adv": {
                                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "dropdown",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "e7fl4psbeb9c3mwvuz4g3e3k",
                                                                    "adv": {
                                                                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "col",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 8,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 8
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "id": "dm8dabh3nq7orl4f8xkh2y96",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-area",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "g7o23kp55y8729etisc7fnqj",
                                                                    "adv": {
                                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 86,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 5,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 5
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "id": "w8v46rnj9r7vubrmyrdnf1n4",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-field",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "bs9rq2khlihja1jo88jxomco",
                                                                    "adv": {
                                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#e9e9e9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 3,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 3
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "full",
                                                                "w": "full",
                                                                "hUnit": "px",
                                                                "wUnit": "px"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "id": "e5ur2b87pzwzt1wi3ncvazn2",
                                                            "adv": {
                                                              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "error-msg",
                                                            "type": "item",
                                                            "childs": [],
                                                            "mobile": {
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "color": "#f84848",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 3
                                                              }
                                                            }
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full"
                                                      },
                                                      "padding": {
                                                        "b": 7,
                                                        "l": 0,
                                                        "r": 0,
                                                        "t": 0
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                      "group": {
                                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                      },
                                                      "props": {
                                                        "name": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`asm_param_${Number(params.id)}_${item.id}`",
                                                          "valueBuilt": "`asm_param_${Number(params.id)}_${item.id}`;\n"
                                                        },
                                                        "type": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"text\"",
                                                          "content": {
                                                            "id": "dgnqyyjpnihhgfl43qnt6znn",
                                                            "adv": {
                                                              "css": ""
                                                            },
                                                            "dim": {
                                                              "h": "full",
                                                              "w": "full"
                                                            },
                                                            "name": "type",
                                                            "type": "item",
                                                            "childs": []
                                                          },
                                                          "valueBuilt": "\"text\";\n"
                                                        },
                                                        "items": {
                                                          "idx": 30,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => any[] | Promise<any[]>",
                                                          "value": "async () => {\n  // if (!isEditor) return [];\n  let data = await db.m_score_option.findMany({\n    where: {\n      id_action: Number(params.id_action),\n    },\n  });\n  let datanya = data.map((item) => {\n    return {\n      label: item.score,\n      value: Number(item.score),\n    };\n  });\n  (datanya as any).unshift({\n    label: \"Pilih skor\",\n    value: \"null\",\n  });\n  return datanya;\n}",
                                                          "visible": "type === \"dropdown\"",
                                                          "valueBuilt": " async()=>{let a=(await db.m_score_option.findMany({where:{id_action:Number(params.id_action)}})).map(e=>({label:e.score,value:Number(e.score)}));return a.unshift({label:\"Pilih skor\",value:\"null\"}),a};\n"
                                                        },
                                                        "label": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`Skor ${item.name}`",
                                                          "valueBuilt": "`Skor ${item.name}`;\n"
                                                        },
                                                        "change": {
                                                          "idx": 8,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => void | Promise<void>",
                                                          "value": "async (val) => {}",
                                                          "valueBuilt": " async a=>{};\n"
                                                        },
                                                        "readonly": {
                                                          "idx": 7,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"y\"",
                                                          "valueBuilt": "\"y\";\n"
                                                        },
                                                        "required": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"n\"",
                                                          "valueBuilt": "\"n\";\n"
                                                        },
                                                        "placeholder": {
                                                          "idx": 20,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"-\"",
                                                          "visible": "type === 'text' || type === \"textarea\"",
                                                          "valueBuilt": "\"-\";\n"
                                                        },
                                                        "autocomplete": {
                                                          "idx": 21,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"on\"",
                                                          "visible": "type === \"password\" || type === \"text\"",
                                                          "valueBuilt": "\"on\";\n"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "fit"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "wrap": "flex-wrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 0,
                                                    "r": 0,
                                                    "t": 0
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "full",
                                                "w": "full"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            }
                                          }
                                        },
                                        "sample": {
                                          "idx": 4,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  let data = await db.m_asm_action.findMany({\n    where: {\n      id_action: Number(params.id_action),\n      id_client: user.id_client\n    },\n    include: {\n      m_asm_param: true\n    }\n  });\n\n  let actions = data?.map((item) => {\n    return {\n      id: item.m_asm_param.id,\n      name: item.m_asm_param.name,\n      min_score: item.m_asm_param.min_score,\n      max_score: item.m_asm_param.max_score,\n    }\n  })\n  return {actions}\n}",
                                          "valueBuilt": " async()=>({actions:(await db.m_asm_action.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client},include:{m_asm_param:!0}}))?.map(a=>({id:a.m_asm_param.id,name:a.m_asm_param.name,min_score:a.m_asm_param.min_score,max_score:a.m_asm_param.max_score}))});\n"
                                        },
                                        "loading": {
                                          "idx": 1,
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"hello\"",
                                          "content": {
                                            "id": "vp2zp6igcpxi47sqhip6ofho",
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "loading",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "rlwz9nrqhvg08dstyrtjtm1x",
                                                "name": "Wrapped",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "l39mnritf6cpnxin58xkvpec",
                                                    "adv": {
                                                      "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "bar",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "border": {
                                                        "style": "solid",
                                                        "rounded": {
                                                          "bl": 49,
                                                          "br": 49,
                                                          "tl": 49,
                                                          "tr": 49
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 29,
                                                        "l": 27,
                                                        "r": 27,
                                                        "t": 29
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "layout": {
                                                    "dir": "col",
                                                    "gap": 8,
                                                    "wrap": "flex-nowrap",
                                                    "align": "center"
                                                  },
                                                  "padding": {
                                                    "b": 8,
                                                    "l": 13,
                                                    "r": 13,
                                                    "t": 8
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "layout": {
                                                "dir": "row",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "top-left"
                                              }
                                            },
                                            "parentInstanceId": "vm81u5esw0gsqsjtnnnde9jd"
                                          },
                                          "valueBuilt": "\"hello\""
                                        },
                                        "preview": {
                                          "idx": 2,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"ready\"",
                                          "valueBuilt": "\"ready\";\n"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "id": "wjbbcvnxwnv7qc3t4dolasvw",
                                "adv": {
                                  "js": "<>\n  {user.role === \"staff\" &&\n    form.m_action.has_score === true &&\n    form.m_action.has_score_option === false && <div {...props}>{children}</div>}\n</>",
                                  "css": "",
                                  "jsBuilt": "render(React.createElement(React.Fragment,null,user.role===\"staff\"&&form.m_action.has_score===!0&&form.m_action.has_score_option===!1&&React.createElement(\"div\",{...props},children)));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "score_text",
                                "type": "item",
                                "childs": [
                                  {
                                    "id": "ii9mnnya0bbu58d0j2msebzp",
                                    "adv": {
                                      "css": ""
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "loader",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "y7m90fhpvyyesblbbg0i6ufv",
                                        "adv": {
                                          "js": "<div {...props}>\n  <Local\n    name=\"data\"\n    value={{\n      _ready: false,\n    }}\n    cache={false}\n    effect={async (local) => {\n      if (isEditor) {\n        if (mode === \"sample\") {\n          const data = await sample();\n\n          for (const [k, v] of Object.entries(data)) {\n            local[k] = v;\n          }\n        } else {\n          const data = await load();\n          for (const [k, v] of Object.entries(data)) {\n            local[k] = v;\n          }\n        }\n        local.render();\n      } else {\n        try {\n          const data = await load();\n          const entries = Object.entries(data);\n\n          if (entries.length === 0) {\n            const data = await sample();\n            for (const [k, v] of Object.entries(data)) {\n              local[k] = v;\n            }\n          } else {\n            for (const [k, v] of entries) {\n              local[k] = v;\n            }\n          }\n        } catch (e) {}\n\n        local._ready = true;\n        local.render();\n      }\n      local.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"data\",value:{_ready:!1},cache:!1,effect:async e=>{if(isEditor){if(mode===\"sample\"){let a=await sample();for(let[s,t]of Object.entries(a))e[s]=t}else{let a=await load();for(let[s,t]of Object.entries(a))e[s]=t}e.render()}else{try{let a=await load(),s=Object.entries(a);if(s.length===0){let t=await sample();for(let[r,n]of Object.entries(t))e[r]=n}else for(let[t,r]of s)e[t]=r}catch{}e._ready=!0,e.render()}e.render()}},children)));\n"
                                        },
                                        "name": "local",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "ukxr5osj1u5zbgmgxmiiyobe",
                                            "adv": {
                                              "js": "<>\n  {debug === \"y\" && (\n    <div className=\"font-mono whitespace-pre text-[11px]\">\n      {JSON.stringify(data, null, 2)}\n    </div>\n  )}\n</>",
                                              "css": "& {\n  display: flex;\n  font-size: 13px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,debug===\"y\"&&React.createElement(\"div\",{className:\"font-mono whitespace-pre text-[11px]\"},JSON.stringify(data,null,2))));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "debug",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "bg": {
                                                "pos": "center",
                                                "size": "cover",
                                                "color": ""
                                              }
                                            }
                                          },
                                          {
                                            "id": "i343wxfi4skdxvfet9cjl241",
                                            "adv": {
                                              "js": "<>\n  {((isEditor && preview === \"ready\") || (!isEditor && data._ready)) && (\n    <div {...props}>{ready}</div>\n  )}\n</>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(isEditor&&preview===\"ready\"||!isEditor&&data._ready)&&React.createElement(\"div\",{...props},ready)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "ready",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "bg": {
                                                "pos": "center",
                                                "size": "cover",
                                                "color": ""
                                              },
                                              "dim": {
                                                "h": "full",
                                                "w": "full"
                                              },
                                              "layout": {
                                                "dir": "col",
                                                "gap": 0,
                                                "wrap": "flex-nowrap",
                                                "align": "left"
                                              }
                                            }
                                          },
                                          {
                                            "id": "taxkgm3janaksz0nxrrmp5r4",
                                            "adv": {
                                              "js": "<>\n  {((isEditor && preview === \"loading\") || (!isEditor && !data._ready)) && (\n    <div {...props}>{loading}</div>\n  )}\n</>",
                                              "css": "& {\n  display: flex;\n\n  .shine {\n    background: #f6f7f8;\n    background-image: linear-gradient(to right, #f6f7f8 0%, #edeef1 20%, #f6f7f8 40%, #f6f7f8 100%);\n    background-repeat: no-repeat;\n    background-size: 800px 104px;\n    display: inline-block;\n    position: relative;\n\n    animation-duration: 2s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n    animation-name: placeholderShimmer;\n    animation-timing-function: linear;\n  }\n\n  @keyframes placeholderShimmer {\n    0% {\n      background-position: -468px 0;\n    }\n\n    100% {\n      background-position: 468px 0;\n    }\n  }\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                              "jsBuilt": "render(React.createElement(React.Fragment,null,(isEditor&&preview===\"loading\"||!isEditor&&!data._ready)&&React.createElement(\"div\",{...props},loading)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "loading",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": "full",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "bg": {
                                            "pos": "center",
                                            "size": "cover",
                                            "color": ""
                                          },
                                          "dim": {
                                            "h": "full",
                                            "w": "full",
                                            "hUnit": "px",
                                            "wUnit": "px"
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "bg": {
                                        "pos": "center",
                                        "size": "cover",
                                        "color": ""
                                      },
                                      "dim": {
                                        "h": "full",
                                        "w": "full"
                                      },
                                      "layout": {
                                        "dir": "col",
                                        "gap": 0,
                                        "wrap": "flex-nowrap",
                                        "align": "left"
                                      }
                                    },
                                    "component": {
                                      "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                                      "group": {
                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                      },
                                      "props": {
                                        "load": {
                                          "gen": "async () => {\n  return `\"\"`\n}",
                                          "idx": 3,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  return {};\n}",
                                          "valueBuilt": " async()=>({});\n"
                                        },
                                        "mode": {
                                          "idx": 6,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"sample\"",
                                          "valueBuilt": "\"sample\";\n"
                                        },
                                        "debug": {
                                          "idx": 5,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"n\"",
                                          "valueBuilt": "\"n\";\n"
                                        },
                                        "ready": {
                                          "idx": 0,
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"hello\"",
                                          "content": {
                                            "id": "i6cm20lqapk9jlvwj4gilzov",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "ready",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "yro63s024fjsn7tjlo61yo1k",
                                                "adv": {
                                                  "js": "<div {...props}>\n  {(data.actions || []).map((item, idx) => {\n    return (\n      <PassProp item={item} key={idx}>\n        {children}\n      </PassProp>\n    );\n  })}\n</div>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(data.actions||[]).map((r,a)=>React.createElement(PassProp,{item:r,key:a},children))));\n"
                                                },
                                                "dim": {
                                                  "h": "full",
                                                  "w": "full"
                                                },
                                                "name": "items",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "e7eo9q96xlfc4cde9gv1gmfl",
                                                    "adv": {
                                                      "css": ""
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [
                                                      {
                                                        "id": "g9n8mmhc0mwfnn6vstagullq",
                                                        "adv": {
                                                          "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n      isNumber: false,\n    }}\n    effect={async (local) => {\n      const n = name as any;\n      const val = form[n];\n      if (type === \"dropdown\") {\n        local.isNumber = isNaN(val as any) === false;\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                                          "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[],isNumber:!1},effect:async e=>{let a=name,s=form[a];type===\"dropdown\"&&(e.isNumber=isNaN(s)===!1,e.items=await items(),e.render())}},children)));\n"
                                                        },
                                                        "dim": {
                                                          "h": "fit",
                                                          "w": "fit"
                                                        },
                                                        "name": "box",
                                                        "type": "item",
                                                        "childs": [
                                                          {
                                                            "id": "xj9py6ubg65y0jbze0b6qbve",
                                                            "adv": {
                                                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "label",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "w36u6xwcitzoyuqdvshauhu8",
                                                                "adv": {
                                                                  "js": "<div {...props}>{label}</div>",
                                                                  "css": "& {\n  display: flex;\n  color: #002B5B;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "var",
                                                                "type": "item",
                                                                "childs": []
                                                              },
                                                              {
                                                                "id": "m1axd9owczphiqykki9v9jqw",
                                                                "adv": {
                                                                  "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "*",
                                                                "name": "required",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "fit"
                                                                  },
                                                                  "font": {
                                                                    "size": 20,
                                                                    "align": "left",
                                                                    "color": "#ff0000",
                                                                    "height": 115,
                                                                    "wordBreak": "break-normal",
                                                                    "whitespace": "whitespace-normal"
                                                                  },
                                                                  "layout": {
                                                                    "dir": "col",
                                                                    "gap": 0,
                                                                    "align": "center"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 8,
                                                                    "r": 8,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "fit",
                                                                "w": "full"
                                                              },
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "layout": {
                                                                "dir": "row",
                                                                "gap": 0,
                                                                "wrap": "flex-nowrap",
                                                                "align": "top-left"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 0,
                                                                "t": 10
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "id": "odmitb3tztjy2oo6usxh6g8l",
                                                            "adv": {
                                                              "js": "<>{readonly === \"y\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"y\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "readonly",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "y9z11p9lry4td9akz01s1v4g",
                                                                "adv": {
                                                                  "js": "<div {...props}>\n  {(() => {\n    let val = form[name];\n    if (type === \"dropdown\") {\n      const found = local.items.find((e) =>\n        typeof e === \"object\" ? e.value === val : val === e\n      );\n\n      if (typeof found === \"object\") {\n        val = found.label || \"-\";\n      } else {\n        val = found || \"-\";\n      }\n    }\n\n    if (type === \"date\") {\n      return moment(val).format(\"DD MMM YYYY\");\n    }\n\n    if (type === \"datetime\") {\n      return moment(val).format(\"DD MMM YYYY - hh:mm\");\n    }\n\n    if (typeof val === \"object\" && val) {\n      return JSON.stringify(val);\n    }\n    return val || \"\";\n  })()}\n</div>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(\"div\",{...props},(()=>{let e=form[name];if(type===\"dropdown\"){let t=local.items.find(o=>typeof o==\"object\"?o.value===e:e===o);typeof t==\"object\"?e=t.label||\"-\":e=t||\"-\"}return type===\"date\"?moment(e).format(\"DD MMM YYYY\"):type===\"datetime\"?moment(e).format(\"DD MMM YYYY - hh:mm\"):typeof e==\"object\"&&e?JSON.stringify(e):e||\"\"})()));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "full"
                                                                },
                                                                "html": "",
                                                                "name": "value",
                                                                "text": "",
                                                                "type": "text",
                                                                "layout": {
                                                                  "dir": "col",
                                                                  "gap": 0,
                                                                  "align": "center"
                                                                },
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "full",
                                                                    "w": "full"
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 10,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "id": "cwmdmsaaracmpx1nv0iitfpk",
                                                            "adv": {
                                                              "js": "<>{readonly === \"n\" && <div {...props}>{children}</div>}</>",
                                                              "css": "",
                                                              "html": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,readonly===\"n\"&&React.createElement(\"div\",{...props},children)));\n"
                                                            },
                                                            "name": "editable",
                                                            "type": "item",
                                                            "childs": [
                                                              {
                                                                "id": "l6lwcdk4tp73p9b25cp1kc5b",
                                                                "adv": {
                                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "dropdown",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "f6aqkhnyklv9ltc7jhqgdfrp",
                                                                    "adv": {
                                                                      "js": "<select\n  {...props}\n  value={form[name] || \"\"}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    const n = name as any;\n    const f = form as any;\n\n    f[n] = value;\n    if (local.isNumber) {\n      f[n] = parseInt(value);\n    }\n\n    if (!f._error) f._error = {};\n    if ((required === \"y\" && !f[n]) || (required === \"y\" && f[n] === \"null\")) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value} key={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  color: #002B5B;\n  font-weight: bold;\n}",
                                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,value:form[name]||\"\",onChange:l=>{let a=l.target.value,r=name,e=form;e[r]=a,local.isNumber&&(e[r]=parseInt(a)),e._error||(e._error={}),required===\"y\"&&!e[r]||required===\"y\"&&e[r]===\"null\"?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()}},local.items.map(l=>React.createElement(\"option\",{value:l.value,key:l.value},l.label))));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "col",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 8,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 8
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "id": "wo6p2szsik2t75h92tvfr4mn",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                                  "css": "",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-area",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "r9zu4eavcynb40hr0cegb6d7",
                                                                    "adv": {
                                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n    color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:a=>{let e=form,r=name;e[r]=a.currentTarget.value,typeof change==\"function\"&&change(a.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[r]?e._error[r]=`${label} harus terisi.`:delete e._error[r],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 86,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#E9E9E9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 5,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 5
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "id": "dba6g0o898s6al3sc60qhmre",
                                                                "adv": {
                                                                  "js": "<>\n  {(type === \"password\" ||\n    type === \"text\" ||\n    type === \"date\" ||\n    type === \"datetime\") && <div {...props}>{children}</div>}\n</>",
                                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"password\"||type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                                },
                                                                "dim": {
                                                                  "h": "fit",
                                                                  "w": "fit"
                                                                },
                                                                "name": "text-field",
                                                                "type": "item",
                                                                "childs": [
                                                                  {
                                                                    "id": "nrdd7qoiofwb3nyl2haodfmt",
                                                                    "adv": {
                                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={(() => {\n    const val = form[name] || \"\";\n    if (type === \"date\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DD\") || \"\";\n    }\n    if (type === \"datetime\" && !isEditor) {\n      return moment(val).format(\"YYYY-MM-DDThh:mm\") || \"\";\n    }\n\n    return val;\n  })()}\n  spellCheck={false}\n  autoComplete={autocomplete}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    const f = form as unknown as {\n      _error: Record<string, string>;\n      _valid: boolean;\n      render: () => void;\n    };\n    const n = name as any;\n\n    f[n] = e.currentTarget.value;\n\n    if (type === \"date\" || type === \"datetime\") {\n      f[n] = new Date(f[n]);\n    }\n\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!f._error) f._error = {};\n    if (required === \"y\" && !f[n]) {\n      f._error[n] = `${label} harus terisi.`;\n    } else {\n      delete f._error[n];\n    }\n\n    if (Object.keys(f._error).length > 0) {\n      f._valid = false;\n    } else {\n      f._valid = true;\n    }\n\n    f.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  color: #002B5B;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:(()=>{let r=form[name]||\"\";return type===\"date\"&&!isEditor?moment(r).format(\"YYYY-MM-DD\")||\"\":type===\"datetime\"&&!isEditor?moment(r).format(\"YYYY-MM-DDThh:mm\")||\"\":r})(),spellCheck:!1,autoComplete:autocomplete,type:type===\"datetime\"?\"datetime-local\":type,onChange:r=>{let e=form,t=name;e[t]=r.currentTarget.value,(type===\"date\"||type===\"datetime\")&&(e[t]=new Date(e[t])),typeof change==\"function\"&&change(r.currentTarget.value),e._error||(e._error={}),required===\"y\"&&!e[t]?e._error[t]=`${label} harus terisi.`:delete e._error[t],Object.keys(e._error).length>0?e._valid=!1:e._valid=!0,e.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                                    },
                                                                    "dim": {
                                                                      "h": "fit",
                                                                      "w": "fit"
                                                                    },
                                                                    "name": "field",
                                                                    "type": "item",
                                                                    "childs": [],
                                                                    "mobile": {
                                                                      "dim": {
                                                                        "h": 42,
                                                                        "w": "full"
                                                                      },
                                                                      "border": {
                                                                        "color": "#e9e9e9",
                                                                        "style": "solid",
                                                                        "stroke": {
                                                                          "b": 1,
                                                                          "l": 1,
                                                                          "r": 1,
                                                                          "t": 1
                                                                        },
                                                                        "rounded": {
                                                                          "bl": 8,
                                                                          "br": 8,
                                                                          "tl": 8,
                                                                          "tr": 8
                                                                        }
                                                                      },
                                                                      "layout": {
                                                                        "dir": "row",
                                                                        "gap": 0,
                                                                        "wrap": "flex-nowrap",
                                                                        "align": "left"
                                                                      },
                                                                      "padding": {
                                                                        "b": 3,
                                                                        "l": 7,
                                                                        "r": 7,
                                                                        "t": 3
                                                                      }
                                                                    }
                                                                  }
                                                                ],
                                                                "mobile": {
                                                                  "dim": {
                                                                    "h": "fit",
                                                                    "w": "full"
                                                                  },
                                                                  "border": {
                                                                    "color": "",
                                                                    "style": "solid",
                                                                    "stroke": {
                                                                      "b": 0,
                                                                      "l": 0,
                                                                      "r": 0,
                                                                      "t": 0
                                                                    }
                                                                  },
                                                                  "padding": {
                                                                    "b": 0,
                                                                    "l": 20,
                                                                    "r": 20,
                                                                    "t": 0
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "mobile": {
                                                              "dim": {
                                                                "h": "full",
                                                                "w": "full",
                                                                "hUnit": "px",
                                                                "wUnit": "px"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "id": "pm5clmqz37px0bn1m2kct8qm",
                                                            "adv": {
                                                              "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                              "css": "",
                                                              "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                            },
                                                            "dim": {
                                                              "h": "fit",
                                                              "w": "fit"
                                                            },
                                                            "name": "error-msg",
                                                            "type": "item",
                                                            "childs": [],
                                                            "mobile": {
                                                              "font": {
                                                                "size": 15,
                                                                "align": "left",
                                                                "color": "#f84848",
                                                                "family": "Poppins",
                                                                "height": "auto",
                                                                "wordBreak": "break-normal",
                                                                "whitespace": "whitespace-normal"
                                                              },
                                                              "padding": {
                                                                "b": 3,
                                                                "l": 20,
                                                                "r": 20,
                                                                "t": 3
                                                              }
                                                            }
                                                          }
                                                        ],
                                                        "mobile": {
                                                          "dim": {
                                                            "h": "fit",
                                                            "w": "full"
                                                          },
                                                          "font": {
                                                            "size": 15,
                                                            "align": "left",
                                                            "family": "Poppins",
                                                            "height": "auto",
                                                            "wordBreak": "break-normal",
                                                            "whitespace": "whitespace-normal"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "full"
                                                      },
                                                      "padding": {
                                                        "b": 7,
                                                        "l": 0,
                                                        "r": 0,
                                                        "t": 0
                                                      }
                                                    },
                                                    "component": {
                                                      "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                                      "group": {
                                                        "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                                      },
                                                      "props": {
                                                        "name": {
                                                          "idx": 3,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`asm_param_${Number(params.id)}_${item.id}`",
                                                          "valueBuilt": "`asm_param_${Number(params.id)}_${item.id}`;\n"
                                                        },
                                                        "type": {
                                                          "idx": 5,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"password\",\n    value: \"password\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"text\"",
                                                          "content": {
                                                            "id": "wz00ee06rfrnh9eqsrjr5cmd",
                                                            "adv": {
                                                              "css": ""
                                                            },
                                                            "dim": {
                                                              "h": "full",
                                                              "w": "full"
                                                            },
                                                            "name": "type",
                                                            "type": "item",
                                                            "childs": []
                                                          },
                                                          "valueBuilt": "\"text\";\n"
                                                        },
                                                        "items": {
                                                          "idx": 30,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => any[] | Promise<any[]>",
                                                          "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                                          "visible": "type === \"dropdown\"",
                                                          "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                                        },
                                                        "label": {
                                                          "idx": 4,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "`Skor ${item.name}`",
                                                          "valueBuilt": "`Skor ${item.name}`;\n"
                                                        },
                                                        "change": {
                                                          "idx": 8,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "() => void | Promise<void>",
                                                          "value": "async (val) => {}",
                                                          "valueBuilt": " async a=>{};\n"
                                                        },
                                                        "readonly": {
                                                          "idx": 7,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "form.verified === true ? \"y\" : \"n\"",
                                                          "valueBuilt": " form.verified===!0?\"y\":\"n\";\n"
                                                        },
                                                        "required": {
                                                          "idx": 6,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"n\"",
                                                          "valueBuilt": "\"n\";\n"
                                                        },
                                                        "placeholder": {
                                                          "idx": 20,
                                                          "meta": {
                                                            "type": "text"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"-\"",
                                                          "visible": "type === 'text' || type === \"textarea\"",
                                                          "valueBuilt": "\"-\";\n"
                                                        },
                                                        "autocomplete": {
                                                          "idx": 21,
                                                          "meta": {
                                                            "type": "option",
                                                            "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                                          },
                                                          "name": "prop",
                                                          "type": "string",
                                                          "value": "\"on\"",
                                                          "visible": "type === \"password\" || type === \"text\"",
                                                          "valueBuilt": "\"on\";\n"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "valueBuilt": "\"hello\""
                                        },
                                        "sample": {
                                          "idx": 4,
                                          "meta": {
                                            "type": "text"
                                          },
                                          "name": "prop",
                                          "type": "() => Promise<any>",
                                          "value": "async () => {\n  let data = await db.m_asm_action.findMany({\n    where: {\n      id_action: Number(params.id_action),\n      id_client: user.id_client\n    },\n    include: {\n      m_asm_param: true\n    }\n  });\n\n  let actions = data?.map((item) => {\n    return {\n      id: item.m_asm_param.id,\n      name: item.m_asm_param.name,\n      min_score: item.m_asm_param.min_score,\n      max_score: item.m_asm_param.max_score,\n    }\n  })\n  return {actions}\n}",
                                          "valueBuilt": " async()=>({actions:(await db.m_asm_action.findMany({where:{id_action:Number(params.id_action),id_client:user.id_client},include:{m_asm_param:!0}}))?.map(a=>({id:a.m_asm_param.id,name:a.m_asm_param.name,min_score:a.m_asm_param.min_score,max_score:a.m_asm_param.max_score}))});\n"
                                        },
                                        "loading": {
                                          "idx": 1,
                                          "meta": {
                                            "type": "content-element"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"hello\"",
                                          "content": {
                                            "id": "cug8tjyl0l3vlim8uv62v2g8",
                                            "adv": {
                                              "css": ""
                                            },
                                            "dim": {
                                              "h": "full",
                                              "w": "full"
                                            },
                                            "name": "loading",
                                            "type": "item",
                                            "childs": []
                                          },
                                          "valueBuilt": "\"hello\""
                                        },
                                        "preview": {
                                          "idx": 2,
                                          "meta": {
                                            "type": "option",
                                            "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                          },
                                          "name": "prop",
                                          "type": "string",
                                          "value": "\"ready\"",
                                          "valueBuilt": "\"ready\";\n"
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "parentInstanceId": "rud5ru24abh3ofauep3brq09"
                          },
                          "valueBuilt": " React.createElement(React.Fragment,null);\n"
                        },
                        "on_submit": {
                          "idx": 1,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "() => void | Promise<void>",
                          "value": "async (validate) => {\n  const validation = {\n    date: `Tanggal harus diisi`,\n  };\n  let participant_semester = {};\n  if (user.role === \"staff\" || user.role === \"institution\") {\n    participant_semester = await db.m_user.findFirst({\n      where: {\n        id: Number(form[\"id_participant\"]),\n      },\n      select: {\n        id_semester: true,\n      },\n    });\n  }\n  let data_ppds = await db.m_user.findFirst({\n    where: {\n      id: user.role === \"ppds\" ? user.id : form[\"id_participant\"],\n    },\n    include: {\n      m_stase: {\n        include: {\n          m_stage: true,\n        },\n      },\n    },\n  });\n  const data = {\n    id_action: form.m_action.id,\n    created_by: user.id,\n    created_date: new Date(),\n    date: form[\"date\"],\n    id_user: user.role === \"ppds\" ? user.id : form[\"id_participant\"],\n    is_presentation: false,\n    id_client: user.id_client,\n    id_semester:\n      user.role === \"ppds\"\n        ? user.id_smt\n        : Number(participant_semester?.id_semester),\n    verified:\n      (user.role === \"staff\" || user.role === \"institution\") &&\n      Number(params.id_action) === 9\n        ? true\n        : false,\n    id_stase: user.id_stase,\n  };\n  const act = form.m_action;\n  let createVerifikator = async (id: number) => {};\n  if (user.role === \"ppds\") {\n    if (act.multiple_verification) {\n      let multi_verif_data = [];\n      let data_rolemap = await db.m_action_rolemap.findMany({\n        where: {\n          id_action: Number(params.id_action),\n          id_action_role: {\n            not: 12,\n          },\n          type: \"verificator\",\n        },\n        include: {\n          m_action_role: {\n            select: {\n              role: true,\n              identifier: true,\n            },\n          },\n        },\n      });\n      data_rolemap.map((x) => {\n        multi_verif_data.push({\n          name: `staff_${x.m_action_role.identifier}`,\n          id: x.id_action_role,\n          role: x.m_action_role.role,\n        });\n      });\n      let arr_verif = [];\n      multi_verif_data.map((item) => {\n        validation[item.name] = `${item.role} harus diisi`;\n        Object.keys(form).forEach((e) => {\n          if (e === item.name) {\n            arr_verif.push({\n              name: item.name,\n              id: item.id,\n              role: item.role,\n            });\n          }\n        });\n      });\n      createVerifikator = async (id: number) => {\n        await db.t_logbook_status.deleteMany({ where: { id_logbook: id } });\n        let datanya = [];\n        arr_verif.map(async (y) => {\n          if (act.has_score) {\n            datanya.push({\n              id_user: Number(form[y.name]),\n              id_action_role: y.id,\n              id_logbook: id,\n              id_client: Number(user.id_client),\n              date_time: form[\"date\"],\n              status: \"pending\",\n            });\n            mobile.notif.send({\n              user_id: String(form[y.name]),\n              title: `Logbook Menunggu Verifikasi`,\n              body: `${user.name} menambahkan data ${\n                form.m_action.name\n              } pada ${moment(form.date).format(\n                \"DD/MM/YYYY HH:mm\",\n              )}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,\n              data: {\n                id_action: String(form.m_action.id),\n                id_logbook: String(id),\n              },\n            });\n            await db.t_notif.create({\n              data: {\n                message: `${user.name} menambahkan data ${\n                  form.m_action.name\n                } pada ${moment(form.date).format(\n                  \"DD/MM/YYYY HH:mm\",\n                )}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,\n                date: new Date(),\n                type: \"verify\",\n                id_user: Number(form[y.name]),\n                url: `/staff/action/${form.m_action.id}/${id}`,\n                id_role: 2,\n                read: false,\n                id_client: Number(user.id_client),\n              },\n            });\n          } else {\n            datanya.push({\n              id_user: Number(form[y.name]),\n              id_action_role: y.id,\n              id_logbook: id,\n              id_client: Number(user.id_client),\n              date_time: form[\"date\"],\n              status: \"pending\",\n            });\n            mobile.notif.send({\n              user_id: String(form[y.name]),\n              title: `Logbook Menunggu Verifikasi`,\n              body: `${user.name} menambahkan data ${\n                form.m_action.name\n              } pada ${moment(form.date).format(\n                \"DD/MM/YYYY HH:mm\",\n              )}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,\n              data: {\n                id_action: String(form.m_action.id),\n                id_logbook: String(id),\n              },\n            });\n            await db.t_notif.create({\n              data: {\n                message: `${user.name} menambahkan data ${\n                  form.m_action.name\n                } pada ${moment(form.date).format(\n                  \"DD/MM/YYYY HH:mm\",\n                )}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,\n                date: new Date(),\n                type: \"verify\",\n                id_user: Number(form[y.name]),\n                url: `/staff/action/${form.m_action.id}/${id}`,\n                id_role: 2,\n                read: false,\n                id_client: Number(user.id_client),\n              },\n            });\n          }\n        });\n        let saving = await db.t_logbook_status.createMany({\n          data: datanya,\n        });\n      };\n    } else {\n      validation[\"id_staff\"] = `Staff pengajar harus diisi`;\n      createVerifikator = async (id: number) => {\n        await db.t_logbook_status.deleteMany({ where: { id_logbook: id } });\n        await db.t_logbook_status.create({\n          data: {\n            id_user: Number(form[\"id_staff\"]),\n            id_action_role: 10,\n            id_logbook: id,\n            id_client: Number(user.id_client),\n            date_time: form[\"date\"],\n            status: \"pending\",\n          },\n        });\n        if (act.has_score) {\n          mobile.notif.send({\n            user_id: String(form[\"id_staff\"]),\n            title: `Logbook Menunggu Verifikasi`,\n            body: `${user.name} menambahkan data ${\n              form.m_action.name\n            } pada ${moment(form.date).format(\n              \"DD/MM/YYYY HH:mm\",\n            )}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,\n            data: {\n              id_action: String(form.m_action.id),\n              id_logbook: String(id),\n            },\n          });\n          await db.t_notif.create({\n            data: {\n              message: `${user.name} menambahkan data ${\n                form.m_action.name\n              } pada ${moment(form.date).format(\n                \"DD/MM/YYYY HH:mm\",\n              )}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,\n              date: new Date(),\n              type: \"verify\",\n              id_user: Number(form[\"id_staff\"]),\n              url: `/staff/action/${form.m_action.id}/${id}`,\n              id_role: 2,\n              read: false,\n              id_client: Number(user.id_client),\n            },\n          });\n        } else {\n          mobile.notif.send({\n            user_id: String(form[\"id_staff\"]),\n            title: `Logbook Menunggu Verifikasi`,\n            body: `${user.name} menambahkan data ${\n              form.m_action.name\n            } pada ${moment(form.date).format(\n              \"DD/MM/YYYY HH:mm\",\n            )}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,\n            data: {\n              id_action: String(form.m_action.id),\n              id_logbook: String(id),\n            },\n          });\n          await db.t_notif.create({\n            data: {\n              message: `${user.name} menambahkan data ${\n                form.m_action.name\n              } pada ${moment(form.date).format(\n                \"DD/MM/YYYY HH:mm\",\n              )}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,\n              date: new Date(),\n              type: \"verify\",\n              id_user: Number(form[\"id_staff\"]),\n              url: `/staff/action/${form.m_action.id}/${id}`,\n              id_role: 2,\n              read: false,\n              id_client: Number(user.id_client),\n            },\n          });\n        }\n      };\n    }\n  } else {\n    validation[\"id_participant\"] = `Peserta PPDS harus diisi`;\n    if (user.role === \"institution\") {\n      validation[\"id_staff\"] = `Staff harus diisi`;\n    }\n    createVerifikator = async (id: number) => {\n      await db.t_logbook_status.deleteMany({ where: { id_logbook: id } });\n      await db.t_logbook_status.create({\n        data: {\n          id_user:\n            Number(form[\"id_staff\"]) !== 0\n              ? Number(form[\"id_staff\"])\n              : Number(user.id),\n          id_action_role: 10,\n          id_logbook: id,\n          id_client: user.id_client,\n          date_time: form[\"date\"],\n          status: Number(params.id_action) === 9 ? \"verified\" : \"pending\",\n        },\n      });\n    };\n  }\n  let createEmr = async (id: number) => {};\n  if (act.has_emr) {\n    validation[`emr_number`] = `Nomor Rekam Medis harus diisi`;\n    validation[`age`] = `Usia harus diisi`;\n    validation[`gender`] = `Jenis Kelamin harus diisi`;\n    validation[`diagnosis`] = `Diagnosa harus diisi`;\n    validation[`treatment`] = `Tindakan harus diisi`;\n    createEmr = async (id: number) => {\n      await db.t_logbook_emr.deleteMany({ where: { id_logbook: id } });\n      await db.t_logbook_emr.create({\n        data: {\n          id_logbook: id,\n          emr_number: form[\"emr_number\"] ? form[\"emr_number\"] : null,\n          age: Number(form[\"age\"]) ? Number(form[\"age\"]) : null,\n          gender: form[\"gender\"] ? form[\"gender\"] : null,\n          diagnosis: form[\"diagnosis\"] ? form[\"diagnosis\"] : null,\n          treatment: form[\"treatment\"] ? form[\"treatment\"] : null,\n          id_client: Number(user.id_client),\n        },\n      });\n    };\n  }\n  if (act.has_operation_code) {\n    data[`operation_code`] = `${\n      data_ppds.inisial_code !== null ? data_ppds.inisial_code : \"LB\"\n    }${new Date().getFullYear()}${new Date().getMonth()}${new Date().getDate()}`;\n  }\n  if (act.is_milestone) {\n    validation[`id_stase`] = `Stase harus diisi`;\n    data[`id_stase`] = Number(form[\"id_stase\"]);\n  }\n  if (act.has_hospital) {\n    validation[`id_hospital`] = `Rumah sakit harus diisi`;\n    data[`id_hospital`] = Number(form[\"id_hospital\"]);\n  }\n  if (act.has_another_role) {\n    validation[`id_another_role`] = `Peran harus diisi`;\n    data[`id_another_role`] = Number(form[\"id_another_role\"]);\n  }\n  if (act.has_category) {\n    validation[`id_category`] = `Kategori harus diisi`;\n    data[`id_category`] = Number(form[\"id_category\"]);\n  }\n  if (act.has_notes) {\n    // validation[`notes`] = `Catatan harus diisi`;\n    data[`notes`] = form[\"notes\"] ? form[\"notes\"] : null;\n  }\n  if (act.has_title) {\n    validation[`title`] = `Judul harus diisi`;\n    data[`title`] = form[\"title\"];\n  }\n  if (act.has_location) {\n    validation[`location`] = `Lokasi harus diisi`;\n    data[`location`] = form[\"location\"];\n  }\n  if (act.has_presentation) {\n    data[`is_presentation`] = form[\"is_presentation\"];\n  }\n  let arr_attachment = [];\n  if (act.has_attachment) {\n    let attachment_data = [];\n    form.m_action.attachment_name?.map((item) => {\n      attachment_data.push(item);\n    });\n    attachment_data.map((item) => {\n      // validation[item] = `${item} harus diisi`;\n      Object.keys(form).forEach((e) => {\n        if (e.includes(item) === true) {\n          arr_attachment.push({\n            name: item,\n            url_file: form[e].url,\n          });\n        }\n      });\n    });\n  }\n\n  if (validate(validation)) {\n    if (params.id !== \"new\") {\n      let save = await db.t_logbook.update({\n        where: { id: form[\"id\"] },\n        data,\n        select: { id: true },\n      });\n      if (save) {\n        if (arr_attachment.length !== 0) {\n          await db.t_logbook_attachment.deleteMany({\n            where: {\n              id_logbook: Number(save.id),\n            },\n          });\n          arr_attachment.map(async (item) => {\n            await db.t_logbook_attachment.create({\n              data: {\n                id_client: user.id_client,\n                id_logbook: save.id,\n                url_file: item.url_file,\n                name: item.name,\n              },\n            });\n          });\n        }\n        await createVerifikator(save.id);\n        await createEmr(save.id);\n        auditTrail({\n          type: \"action\",\n          activity: `Update ${form.m_action.name}`,\n          meta: {\n            url: window.location.href,\n            id_logbook: Number(params.id),\n          },\n        });\n        auditTrail({\n          type: \"visit\",\n          activity: `Membuka Halaman ${form.m_action.name}`,\n          meta: {\n            url: window.location.href,\n          },\n        });\n        alert(\"data telah diperbarui\");\n        if (user?.role === \"ppds\") {\n          navigate(`/ppds/list/${params.id_action}/action`);\n        } else {\n          if (Number(params.id_action) !== 9) {\n            navigate(`/staff/action/${params.id_action}`);\n          } else {\n            navigate(\"/staff-pengajar/milestone\");\n          }\n        }\n      }\n    } else {\n      let save = await db.t_logbook.create({\n        data: {\n          ...data,\n        },\n      });\n      auditTrail({\n        type: \"action\",\n        activity: `Create ${form.m_action.name}`,\n        meta: {\n          url: window.location.href,\n          id_logbook: Number(params.id),\n        },\n      });\n      if (save) {\n        if (arr_attachment.length !== 0) {\n          await db.t_logbook_attachment.deleteMany({\n            where: {\n              id_logbook: Number(save.id),\n            },\n          });\n          arr_attachment.map(async (item) => {\n            await db.t_logbook_attachment.create({\n              data: {\n                id_client: user.id_client,\n                id_logbook: Number(save.id),\n                url_file: item.url_file,\n                name: item.name,\n              },\n            });\n          });\n        }\n        await createVerifikator(save.id);\n        await createEmr(save.id);\n        if (confirm(\"Berhasil. Lanjutkan menambah ?\")) {\n          for (const k of Object.keys(form)) {\n            if (!k.startsWith(\"_\") && k !== \"m_action\" && k !== \"render\") {\n              delete form[k];\n            }\n          }\n          form.render();\n        } else {\n          auditTrail({\n            type: \"visit\",\n            activity: `Membuka Halaman ${form.m_action.name}`,\n            meta: {\n              url: window.location.href,\n            },\n          });\n          if (user.role === \"ppds\") {\n            navigate(`/ppds/list/${params.id_action}/action`);\n          } else {\n            if (Number(params.id_action) !== 9) {\n              navigate(`/staff/action/${params.id_action}`);\n            } else {\n              navigate(\"/staff-pengajar/milestone\");\n            }\n          }\n        }\n      } else {\n        form.render();\n      }\n    }\n  } else {\n    form._saving = false;\n    form.render();\n  }\n}",
                          "valueBuilt": " async c=>{let i={date:\"Tanggal harus diisi\"},f={};(user.role===\"staff\"||user.role===\"institution\")&&(f=await db.m_user.findFirst({where:{id:Number(form.id_participant)},select:{id_semester:!0}}));let u=await db.m_user.findFirst({where:{id:user.role===\"ppds\"?user.id:form.id_participant},include:{m_stase:{include:{m_stage:!0}}}}),r={id_action:form.m_action.id,created_by:user.id,created_date:new Date,date:form.date,id_user:user.role===\"ppds\"?user.id:form.id_participant,is_presentation:!1,id_client:user.id_client,id_semester:user.role===\"ppds\"?user.id_smt:Number(f?.id_semester),verified:(user.role===\"staff\"||user.role===\"institution\")&&Number(params.id_action)===9,id_stase:user.id_stase},o=form.m_action,d=async a=>{};if(user.role===\"ppds\")if(o.multiple_verification){let a=[];(await db.m_action_rolemap.findMany({where:{id_action:Number(params.id_action),id_action_role:{not:12},type:\"verificator\"},include:{m_action_role:{select:{role:!0,identifier:!0}}}})).map(e=>{a.push({name:`staff_${e.m_action_role.identifier}`,id:e.id_action_role,role:e.m_action_role.role})});let s=[];a.map(e=>{i[e.name]=`${e.role} harus diisi`,Object.keys(form).forEach(l=>{l===e.name&&s.push({name:e.name,id:e.id,role:e.role})})}),d=async e=>{await db.t_logbook_status.deleteMany({where:{id_logbook:e}});let l=[];s.map(async n=>{o.has_score?(l.push({id_user:Number(form[n.name]),id_action_role:n.id,id_logbook:e,id_client:Number(user.id_client),date_time:form.date,status:\"pending\"}),mobile.notif.send({user_id:String(form[n.name]),title:\"Logbook Menunggu Verifikasi\",body:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,data:{id_action:String(form.m_action.id),id_logbook:String(e)}}),await db.t_notif.create({data:{message:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,date:new Date,type:\"verify\",id_user:Number(form[n.name]),url:`/staff/action/${form.m_action.id}/${e}`,id_role:2,read:!1,id_client:Number(user.id_client)}})):(l.push({id_user:Number(form[n.name]),id_action_role:n.id,id_logbook:e,id_client:Number(user.id_client),date_time:form.date,status:\"pending\"}),mobile.notif.send({user_id:String(form[n.name]),title:\"Logbook Menunggu Verifikasi\",body:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,data:{id_action:String(form.m_action.id),id_logbook:String(e)}}),await db.t_notif.create({data:{message:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,date:new Date,type:\"verify\",id_user:Number(form[n.name]),url:`/staff/action/${form.m_action.id}/${e}`,id_role:2,read:!1,id_client:Number(user.id_client)}}))});let b=await db.t_logbook_status.createMany({data:l})}}else i.id_staff=\"Staff pengajar harus diisi\",d=async a=>{await db.t_logbook_status.deleteMany({where:{id_logbook:a}}),await db.t_logbook_status.create({data:{id_user:Number(form.id_staff),id_action_role:10,id_logbook:a,id_client:Number(user.id_client),date_time:form.date,status:\"pending\"}}),o.has_score?(mobile.notif.send({user_id:String(form.id_staff),title:\"Logbook Menunggu Verifikasi\",body:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,data:{id_action:String(form.m_action.id),id_logbook:String(a)}}),await db.t_notif.create({data:{message:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan penilaian dan verifikasi anda. Klik detail untuk melihat logbook`,date:new Date,type:\"verify\",id_user:Number(form.id_staff),url:`/staff/action/${form.m_action.id}/${a}`,id_role:2,read:!1,id_client:Number(user.id_client)}})):(mobile.notif.send({user_id:String(form.id_staff),title:\"Logbook Menunggu Verifikasi\",body:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,data:{id_action:String(form.m_action.id),id_logbook:String(a)}}),await db.t_notif.create({data:{message:`${user.name} menambahkan data ${form.m_action.name} pada ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")}, Mohon berikan verifikasi anda. Klik detail untuk melihat logbook`,date:new Date,type:\"verify\",id_user:Number(form.id_staff),url:`/staff/action/${form.m_action.id}/${a}`,id_role:2,read:!1,id_client:Number(user.id_client)}}))};else i.id_participant=\"Peserta PPDS harus diisi\",user.role===\"institution\"&&(i.id_staff=\"Staff harus diisi\"),d=async a=>{await db.t_logbook_status.deleteMany({where:{id_logbook:a}}),await db.t_logbook_status.create({data:{id_user:Number(form.id_staff)!==0?Number(form.id_staff):Number(user.id),id_action_role:10,id_logbook:a,id_client:user.id_client,date_time:form.date,status:Number(params.id_action)===9?\"verified\":\"pending\"}})};let _=async a=>{};o.has_emr&&(i.emr_number=\"Nomor Rekam Medis harus diisi\",i.age=\"Usia harus diisi\",i.gender=\"Jenis Kelamin harus diisi\",i.diagnosis=\"Diagnosa harus diisi\",i.treatment=\"Tindakan harus diisi\",_=async a=>{await db.t_logbook_emr.deleteMany({where:{id_logbook:a}}),await db.t_logbook_emr.create({data:{id_logbook:a,emr_number:form.emr_number?form.emr_number:null,age:Number(form.age)?Number(form.age):null,gender:form.gender?form.gender:null,diagnosis:form.diagnosis?form.diagnosis:null,treatment:form.treatment?form.treatment:null,id_client:Number(user.id_client)}})}),o.has_operation_code&&(r.operation_code=`${u.inisial_code!==null?u.inisial_code:\"LB\"}${new Date().getFullYear()}${new Date().getMonth()}${new Date().getDate()}`),o.is_milestone&&(i.id_stase=\"Stase harus diisi\",r.id_stase=Number(form.id_stase)),o.has_hospital&&(i.id_hospital=\"Rumah sakit harus diisi\",r.id_hospital=Number(form.id_hospital)),o.has_another_role&&(i.id_another_role=\"Peran harus diisi\",r.id_another_role=Number(form.id_another_role)),o.has_category&&(i.id_category=\"Kategori harus diisi\",r.id_category=Number(form.id_category)),o.has_notes&&(r.notes=form.notes?form.notes:null),o.has_title&&(i.title=\"Judul harus diisi\",r.title=form.title),o.has_location&&(i.location=\"Lokasi harus diisi\",r.location=form.location),o.has_presentation&&(r.is_presentation=form.is_presentation);let m=[];if(o.has_attachment){let a=[];form.m_action.attachment_name?.map(t=>{a.push(t)}),a.map(t=>{Object.keys(form).forEach(s=>{s.includes(t)===!0&&m.push({name:t,url_file:form[s].url})})})}if(c(i))if(params.id!==\"new\"){let a=await db.t_logbook.update({where:{id:form.id},data:r,select:{id:!0}});a&&(m.length!==0&&(await db.t_logbook_attachment.deleteMany({where:{id_logbook:Number(a.id)}}),m.map(async t=>{await db.t_logbook_attachment.create({data:{id_client:user.id_client,id_logbook:a.id,url_file:t.url_file,name:t.name}})})),await d(a.id),await _(a.id),auditTrail({type:\"action\",activity:`Update ${form.m_action.name}`,meta:{url:window.location.href,id_logbook:Number(params.id)}}),auditTrail({type:\"visit\",activity:`Membuka Halaman ${form.m_action.name}`,meta:{url:window.location.href}}),alert(\"data telah diperbarui\"),user?.role===\"ppds\"?navigate(`/ppds/list/${params.id_action}/action`):Number(params.id_action)!==9?navigate(`/staff/action/${params.id_action}`):navigate(\"/staff-pengajar/milestone\"))}else{let a=await db.t_logbook.create({data:{...r}});if(auditTrail({type:\"action\",activity:`Create ${form.m_action.name}`,meta:{url:window.location.href,id_logbook:Number(params.id)}}),a)if(m.length!==0&&(await db.t_logbook_attachment.deleteMany({where:{id_logbook:Number(a.id)}}),m.map(async t=>{await db.t_logbook_attachment.create({data:{id_client:user.id_client,id_logbook:Number(a.id),url_file:t.url_file,name:t.name}})})),await d(a.id),await _(a.id),confirm(\"Berhasil. Lanjutkan menambah ?\")){for(let t of Object.keys(form))!t.startsWith(\"_\")&&t!==\"m_action\"&&t!==\"render\"&&delete form[t];form.render()}else auditTrail({type:\"visit\",activity:`Membuka Halaman ${form.m_action.name}`,meta:{url:window.location.href}}),user.role===\"ppds\"?navigate(`/ppds/list/${params.id_action}/action`):Number(params.id_action)!==9?navigate(`/staff/action/${params.id_action}`):navigate(\"/staff-pengajar/milestone\");else form.render()}else form._saving=!1,form.render()};\n"
                        }
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  }
                }
              },
              {
                "id": "cdlheet2tu78g7kdmwvupvfa",
                "adv": {
                  "js": "<>\n  {form._loading && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._loading&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "loading",
                "type": "item",
                "childs": [
                  {
                    "id": "r8b2la5wo5cpb2qmq0dmqzex",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "o2816ap8bwyhk8w5gpv16ke7",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 12,
                            "w": 139
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "ck13ax6wak6gl2xldic3nb1k",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "kih66c1aduo788e4eomfsewo",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": "full"
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "border": {
                            "color": "#f2f2f2",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 7,
                            "l": 6,
                            "r": 6,
                            "t": 7
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  },
                  {
                    "id": "fui11nmfr6qojkr3p92uoc3o",
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "oz3afvhaeyfpqx0ct92rb1pd",
                        "adv": {
                          "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                          "css": "",
                          "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "New Item",
                        "type": "item",
                        "childs": [],
                        "mobile": {
                          "dim": {
                            "h": 12,
                            "w": 139
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 6,
                              "br": 6,
                              "tl": 6,
                              "tr": 6
                            }
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "px9l83e5pp9qudj4ucbbkm9w",
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "l9onl7au0pituzw37f9orh5b",
                            "adv": {
                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                              "css": "",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "New Item",
                            "type": "item",
                            "childs": [],
                            "mobile": {
                              "dim": {
                                "h": 27,
                                "w": "full"
                              },
                              "border": {
                                "style": "solid",
                                "rounded": {
                                  "bl": 8,
                                  "br": 8,
                                  "tl": 8,
                                  "tr": 8
                                }
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "border": {
                            "color": "#f2f2f2",
                            "style": "solid",
                            "stroke": {
                              "b": 1,
                              "l": 1,
                              "r": 1,
                              "t": 1
                            },
                            "rounded": {
                              "bl": 10,
                              "br": 10,
                              "tl": 10,
                              "tr": 10
                            }
                          },
                          "padding": {
                            "b": 7,
                            "l": 6,
                            "r": 6,
                            "t": 7
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 7,
                        "wrap": "flex-nowrap",
                        "align": "top-left"
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 25,
                    "wrap": "flex-nowrap",
                    "align": "top-left"
                  },
                  "padding": {
                    "b": 9,
                    "l": 15,
                    "r": 15,
                    "t": 9
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "full",
                "w": "full"
              },
              "padding": {
                "b": 50,
                "l": 0,
                "r": 0,
                "t": 0
              }
            }
          },
          {
            "id": "yizcws8q08322sceflo0kcno",
            "adv": {
              "js": "<>{!form._loading && <div {...props}>{children}</div>}</>",
              "css": "",
              "jsBuilt": "render(React.createElement(React.Fragment,null,!form._loading&&React.createElement(\"div\",{...props},children)));\n"
            },
            "dim": {
              "h": "fit",
              "w": "fit"
            },
            "name": "menu",
            "type": "item",
            "childs": [
              {
                "id": "v64y0dbha3mgjbausjsq9o36",
                "adv": {
                  "js": "<>\n  {params.id === \"new\" &&\n    user.role !== \"staff\" &&\n    user.role !== \"institution\" && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id===\"new\"&&user.role!==\"staff\"&&user.role!==\"institution\"&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "button-create",
                "type": "item",
                "childs": [
                  {
                    "id": "nva3uol233szy4204i0zbhi2",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._submit();\n}",
                          "valueBuilt": "()=>{form._submit()};\n"
                        }
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "bg": {
                    "pos": "center",
                    "size": "cover",
                    "color": ""
                  },
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 5,
                    "l": 0,
                    "r": 0,
                    "t": 5
                  }
                }
              },
              {
                "id": "twolqew5sv7mcqqd7gxj05pd",
                "adv": {
                  "js": "<>\n  {params.id === \"new\" &&\n    (user.role === \"staff\" || user.role === \"institution\") &&\n    Number(params.id_action) === 9 && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id===\"new\"&&(user.role===\"staff\"||user.role===\"institution\")&&Number(params.id_action)===9&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "button-create-milestone",
                "type": "item",
                "childs": [
                  {
                    "id": "osuyaoopsq56coj6haa7nshi",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "() => {\n  form._submit();\n}",
                          "valueBuilt": "()=>{form._submit()};\n"
                        }
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "row",
                    "gap": 20,
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 5,
                    "l": 0,
                    "r": 0,
                    "t": 5
                  }
                }
              },
              {
                "id": "r1gtwaom7ffzxtlrmbsb4de1",
                "adv": {
                  "js": "<>\n  {params.id !== \"new\" &&\n    user.role !== \"staff\" &&\n    user.role !== \"institution\" &&\n    Number(params.id_action) !== 9 && <div {...props}>{children}</div>}\n</>",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id!==\"new\"&&user.role!==\"staff\"&&user.role!==\"institution\"&&Number(params.id_action)!==9&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "button-update",
                "type": "item",
                "childs": [
                  {
                    "id": "esp6d0hadbbvj1m724roakd2",
                    "adv": {
                      "js": "<>{form.verified === false && <div {...props}>{children}</div>}</>",
                      "css": "",
                      "html": "",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,form.verified===!1&&React.createElement(\"div\",{...props},children)));\n"
                    },
                    "name": "unverified",
                    "type": "item",
                    "childs": [
                      {
                        "id": "a6taswa70n6en8jxvw5zjh4m",
                        "adv": {
                          "js": "<>{!form._saving && <div {...props}>{children}</div>}</>",
                          "css": "",
                          "html": "",
                          "jsBuilt": "render(React.createElement(React.Fragment,null,!form._saving&&React.createElement(\"div\",{...props},children)));\n"
                        },
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "w2x6tam0kl76o9rt0ucws9z0",
                            "adv": {},
                            "name": "button",
                            "type": "item",
                            "childs": [],
                            "component": {
                              "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                              "props": {
                                "action": {
                                  "idx": 4,
                                  "meta": {
                                    "type": "option",
                                    "oldName": "new_prop",
                                    "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                                  },
                                  "type": "string",
                                  "value": "\"function\"",
                                  "valueBuilt": "\"function\";\n"
                                },
                                "type_button": {
                                  "meta": {
                                    "type": "option",
                                    "oldName": "new_prop",
                                    "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                                  },
                                  "type": "string",
                                  "value": "form._valid === true && !form._saving ? \"Danger\" : \"Disabled\"",
                                  "valueBuilt": " form._valid===!0&&!form._saving?\"Danger\":\"Disabled\";\n"
                                },
                                "label_button": {
                                  "meta": {
                                    "type": "text",
                                    "oldName": "new_prop"
                                  },
                                  "type": "string",
                                  "value": "form._deleting === false ? \"Hapus\" : \"Menghapus...\"",
                                  "valueBuilt": " form._deleting===!1?\"Hapus\":\"Menghapus...\";\n"
                                },
                                "width_button": {
                                  "idx": 3,
                                  "meta": {
                                    "type": "text",
                                    "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                  },
                                  "name": "prop",
                                  "type": "string",
                                  "value": "\"120px\"",
                                  "valueBuilt": "\"120px\";\n"
                                },
                                "navigate_link": {
                                  "idx": 3,
                                  "meta": {
                                    "oldName": "navigate"
                                  },
                                  "type": "string",
                                  "value": "\"/login\"",
                                  "valueBuilt": "\"/login\";\n"
                                },
                                "action_function": {
                                  "idx": 5,
                                  "meta": {
                                    "type": "text",
                                    "oldName": "new_prop_1"
                                  },
                                  "type": "() => void",
                                  "value": "async (validate) => {\n  if (params.id !== \"new\" && !isEditor) {\n    if (confirm(\"Anda yakin ingin menghapus data ini ?\")) {\n      form._deleting = true;\n      form.render();\n      await db.t_logbook_attachment.deleteMany({\n        where: { id_logbook: Number(params.id) },\n      });\n      await db.t_logbook_asm.deleteMany({\n        where: { id_logbook: Number(params.id) },\n      });\n      await db.t_logbook_emr.deleteMany({\n        where: { id_logbook: Number(params.id) },\n      });\n      await db.t_logbook_status.deleteMany({\n        where: { id_logbook: Number(params.id) },\n      });\n      await db.t_logbook.delete({\n        where: { id: Number(params.id) },\n      });\n      auditTrail({\n        type: \"action\",\n        activity: `Delete ${form.m_action.name}`,\n        meta: {\n          url: window.location.href,\n          id_logbook: Number(params.id),\n        },\n      });\n      for (const k of Object.keys(form)) {\n        if (!k.startsWith(\"_\") && k !== \"render\" && k !== \"m_action\") {\n          delete form[k];\n        }\n      }\n      auditTrail({\n        type: \"visit\",\n        activity: `Membuka Halaman ${form.m_action.name}`,\n        meta: {\n          url: window.location.href,\n        },\n      });\n      navigate(`/ppds/list/${params.id_action}/action`);\n      form._deleting = false;\n      form.render();\n    }\n  }\n}",
                                  "valueBuilt": " async e=>{if(params.id!==\"new\"&&!isEditor&&confirm(\"Anda yakin ingin menghapus data ini ?\")){form._deleting=!0,form.render(),await db.t_logbook_attachment.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_asm.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_emr.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_status.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook.delete({where:{id:Number(params.id)}}),auditTrail({type:\"action\",activity:`Delete ${form.m_action.name}`,meta:{url:window.location.href,id_logbook:Number(params.id)}});for(let a of Object.keys(form))!a.startsWith(\"_\")&&a!==\"render\"&&a!==\"m_action\"&&delete form[a];auditTrail({type:\"visit\",activity:`Membuka Halaman ${form.m_action.name}`,meta:{url:window.location.href}}),navigate(`/ppds/list/${params.id_action}/action`),form._deleting=!1,form.render()}};\n"
                                }
                              },
                              "updated_at": 1692005629672
                            },
                            "originalId": "euw8smfm7gs0bmsxzfwsm8i3"
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "full",
                            "w": "fit",
                            "hUnit": "px",
                            "wUnit": "px"
                          }
                        },
                        "originalId": "uld11x4n7hcb79as3hu8s3nt"
                      },
                      {
                        "id": "k6xt0w5hmnajkvica45klsou",
                        "adv": {},
                        "name": "button",
                        "type": "item",
                        "childs": [],
                        "component": {
                          "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                          "props": {
                            "action": {
                              "idx": 4,
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                              },
                              "type": "string",
                              "value": "\"function\"",
                              "valueBuilt": "\"function\";\n"
                            },
                            "type_button": {
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                              },
                              "type": "string",
                              "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                              "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                            },
                            "label_button": {
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop"
                              },
                              "type": "string",
                              "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                              "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                            },
                            "width_button": {
                              "idx": 3,
                              "meta": {
                                "type": "text",
                                "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                              },
                              "name": "prop",
                              "type": "string",
                              "value": "\"180px\"",
                              "valueBuilt": "\"180px\";\n"
                            },
                            "navigate_link": {
                              "idx": 3,
                              "meta": {
                                "oldName": "navigate"
                              },
                              "type": "string",
                              "value": "\"/login\"",
                              "valueBuilt": "\"/login\";\n"
                            },
                            "action_function": {
                              "idx": 5,
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop_1"
                              },
                              "type": "() => void",
                              "value": "() => {\n  form._submit();\n}",
                              "valueBuilt": "()=>{form._submit()};\n"
                            }
                          },
                          "updated_at": 1692005629672
                        },
                        "originalId": "gcggpnyizjmn02cm992wg3ge"
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "full",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "layout": {
                        "dir": "row",
                        "gap": 12,
                        "wrap": "flex-nowrap",
                        "align": "center"
                      }
                    },
                    "originalId": "mv2znfy7qes2forp8nyz7c9u"
                  },
                  {
                    "id": "g25j5brr1g8g6en4bn8tbafa",
                    "adv": {
                      "js": "<>{form.verified === true && <div {...props}>{children}</div>}</>",
                      "css": "",
                      "html": "",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,form.verified===!0&&React.createElement(\"div\",{...props},children)));\n"
                    },
                    "name": "verified",
                    "type": "item",
                    "childs": [
                      {
                        "id": "lz1wf3a4ws394m2yh1yfrcxh",
                        "adv": {
                          "css": ""
                        },
                        "dim": {
                          "h": "fit",
                          "w": "full"
                        },
                        "html": "<div>tidak bisa diubah</div>data sudah terverifikasi",
                        "name": "New Text",
                        "text": "",
                        "type": "text",
                        "layout": {
                          "dir": "col",
                          "gap": 0,
                          "align": "center"
                        }
                      }
                    ]
                  }
                ],
                "hidden": false,
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "top-center"
                  },
                  "padding": {
                    "b": 5,
                    "l": 0,
                    "r": 0,
                    "t": 5
                  }
                }
              },
              {
                "id": "u9tpsdzpvqlwe9wkfg1qfnnx",
                "adv": {
                  "js": "<>\n  {params.id !== \"new\" &&\n    user.role === \"staff\" &&\n    form.verified === false &&\n    Number(params.id_action) !== 9 && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id!==\"new\"&&user.role===\"staff\"&&form.verified===!1&&Number(params.id_action)!==9&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "button-verif",
                "type": "item",
                "childs": [
                  {
                    "id": "lguc990cuw33vnqzw0hm2s2a",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "!form._saving ? \"Edit\" : \"Disabled\"",
                          "valueBuilt": " form._saving?\"Disabled\":\"Edit\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Memverifikasi...\" : \"Verifikasi\"",
                          "valueBuilt": " form._saving?\"Memverifikasi...\":\"Verifikasi\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "async () => {\n  let arr_score = [];\n  Object.keys(form).forEach((e) => {\n    // if (e.substring(0, 10) === `asm_param_${Number(params.id)}`) {\n    if (e.includes(`asm_param_${Number(params.id)}`) === true) {\n      arr_score.push({\n        id_asm_param: Number(e.slice(-1)),\n        score: Number(form[e]),\n        id_client: user.id_client,\n        id_logbook: Number(params.id),\n        created_date: user.id,\n        created_by: new Date(),\n      });\n    }\n  });\n  if (confirm(\"Anda yakin akan memverifikasi data ini?\")) {\n    form._saving = true;\n    form.render();\n    let rolemap = await db.m_action_rolemap.findFirst({\n      where: {\n        id_action: Number(params.id_action),\n        id_client: Number(user.id_client),\n        type: \"verificator\",\n      },\n    });\n    await db.t_logbook.update({\n      where: {\n        id: Number(params.id),\n      },\n      data: {\n        verified: true,\n      },\n    });\n    await db.t_logbook_status.deleteMany({\n      where: {\n        id_logbook: Number(params.id),\n      },\n    });\n    await db.t_logbook_status.create({\n      data: {\n        id_logbook: Number(params.id),\n        date_time: new Date(),\n        id_action_role: Number(rolemap.id_action_role),\n        id_user: user.id,\n        id_client: Number(user.id_client),\n        status: \"verified\",\n      },\n    });\n    await db.t_logbook_status.create({\n      data: {\n        id_logbook: Number(params.id),\n        date_time: new Date(),\n        id_action_role: 1,\n        id_user: Number(form.id_participant),\n        id_client: Number(user.id_client),\n        status: \"verified\",\n      },\n    });\n    if (form.m_action.has_score === true) {\n      await db.t_logbook_asm.deleteMany({\n        where: {\n          id_logbook: Number(params.id),\n        },\n      });\n      await db.t_logbook_asm.createMany({\n        data: arr_score,\n      });\n      await db.t_notif.create({\n        data: {\n          message: `Data ${form.m_action.name} ${moment(form.date).format(\n            \"DD/MM/YYYY HH:mm\",\n          )} telah diverifikasi dan dinilai oleh ${user.name} pada ${moment(\n            new Date(),\n          ).format(\"DD/MM/YYYY HH:mm\")}`,\n          date: new Date(),\n          type: \"verified\",\n          id_user: Number(form[\"id_participant\"]),\n          url: `/ppds/action/${form.m_action.id}/${params.id}`,\n          id_role: 1,\n          read: false,\n          id_client: Number(user.id_client),\n        },\n      });\n      mobile.notif.send({\n        user_id: String(form[\"id_participant\"]),\n        title: `Logbook Diverifikasi`,\n        body: `Data ${form.m_action.name} ${moment(form.date).format(\n          \"DD/MM/YYYY HH:mm\",\n        )} telah diverifikasi dan dinilai oleh ${user.name} pada ${moment(\n          new Date(),\n        ).format(\"DD/MM/YYYY HH:mm\")}`,\n        data: {\n          id_action: String(form.m_action.id),\n          id_logbook: String(params.id),\n        },\n      });\n    } else {\n      await db.t_notif.create({\n        data: {\n          message: `Data ${form.m_action.name} ${moment(form.date).format(\n            \"DD/MM/YYYY HH:mm\",\n          )} telah diverifikasi oleh ${user.name} pada ${moment(\n            new Date(),\n          ).format(\"DD/MM/YYYY HH:mm\")}`,\n          date: new Date(),\n          type: \"verified\",\n          id_user: Number(form[\"id_participant\"]),\n          url: `/ppds/action/${form.m_action.id}/${params.id}`,\n          id_role: 1,\n          read: false,\n          id_client: Number(user.id_client),\n        },\n      });\n      mobile.notif.send({\n        user_id: String(form[\"id_participant\"]),\n        title: `Logbook Diverifikasi`,\n        body: `Data ${form.m_action.name} ${moment(form.date).format(\n          \"DD/MM/YYYY HH:mm\",\n        )} telah diverifikasi oleh ${user.name} pada ${moment(\n          new Date(),\n        ).format(\"DD/MM/YYYY HH:mm\")}`,\n        data: {\n          id_action: String(form.m_action.id),\n          id_logbook: String(params.id),\n        },\n      });\n    }\n    form._saving = false;\n    form.render();\n    alert(\"Data telah terverifikasi\");\n    window.history.back();\n  }\n}",
                          "valueBuilt": " async()=>{let e=[];if(Object.keys(form).forEach(a=>{a.includes(`asm_param_${Number(params.id)}`)===!0&&e.push({id_asm_param:Number(a.slice(-1)),score:Number(form[a]),id_client:user.id_client,id_logbook:Number(params.id),created_date:user.id,created_by:new Date})}),confirm(\"Anda yakin akan memverifikasi data ini?\")){form._saving=!0,form.render();let a=await db.m_action_rolemap.findFirst({where:{id_action:Number(params.id_action),id_client:Number(user.id_client),type:\"verificator\"}});await db.t_logbook.update({where:{id:Number(params.id)},data:{verified:!0}}),await db.t_logbook_status.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_status.create({data:{id_logbook:Number(params.id),date_time:new Date,id_action_role:Number(a.id_action_role),id_user:user.id,id_client:Number(user.id_client),status:\"verified\"}}),await db.t_logbook_status.create({data:{id_logbook:Number(params.id),date_time:new Date,id_action_role:1,id_user:Number(form.id_participant),id_client:Number(user.id_client),status:\"verified\"}}),form.m_action.has_score===!0?(await db.t_logbook_asm.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_asm.createMany({data:e}),await db.t_notif.create({data:{message:`Data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} telah diverifikasi dan dinilai oleh ${user.name} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}`,date:new Date,type:\"verified\",id_user:Number(form.id_participant),url:`/ppds/action/${form.m_action.id}/${params.id}`,id_role:1,read:!1,id_client:Number(user.id_client)}}),mobile.notif.send({user_id:String(form.id_participant),title:\"Logbook Diverifikasi\",body:`Data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} telah diverifikasi dan dinilai oleh ${user.name} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}`,data:{id_action:String(form.m_action.id),id_logbook:String(params.id)}})):(await db.t_notif.create({data:{message:`Data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} telah diverifikasi oleh ${user.name} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}`,date:new Date,type:\"verified\",id_user:Number(form.id_participant),url:`/ppds/action/${form.m_action.id}/${params.id}`,id_role:1,read:!1,id_client:Number(user.id_client)}}),mobile.notif.send({user_id:String(form.id_participant),title:\"Logbook Diverifikasi\",body:`Data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} telah diverifikasi oleh ${user.name} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}`,data:{id_action:String(form.m_action.id),id_logbook:String(params.id)}})),form._saving=!1,form.render(),alert(\"Data telah terverifikasi\"),window.history.back()}};\n"
                        }
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 5,
                    "l": 0,
                    "r": 0,
                    "t": 5
                  }
                }
              },
              {
                "id": "iilf4t1y0sbk97lajs3rtb7b",
                "adv": {
                  "js": "<>\n  {params.id !== \"new\" &&\n    user.role === \"staff\" &&\n    form.verified === true &&\n    Number(params.id_action) !== 9 && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id!==\"new\"&&user.role===\"staff\"&&form.verified===!0&&Number(params.id_action)!==9&&React.createElement(\"div\",{...props},children)));\n"
                },
                "dim": {
                  "h": "fit",
                  "w": "fit"
                },
                "name": "button-unverif",
                "type": "item",
                "childs": [
                  {
                    "id": "y970ykxyuhtx1igx6zhj1wpa",
                    "adv": {},
                    "name": "button",
                    "type": "item",
                    "childs": [],
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n]"
                          },
                          "type": "string",
                          "value": "!form._saving ? \"Edit\" : \"Disabled\"",
                          "valueBuilt": " form._saving?\"Disabled\":\"Edit\";\n"
                        },
                        "label_button": {
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Memproses...\" : \"Unverifikasi\"",
                          "valueBuilt": " form._saving?\"Memproses...\":\"Unverifikasi\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"250px\"",
                          "valueBuilt": "\"250px\";\n"
                        },
                        "navigate_link": {
                          "idx": 3,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "async () => {\n  if (confirm(\"Anda yakin akan membatalkan verifikasi data ini?\")) {\n    form._saving = true;\n    form.render();\n    let rolemap = await db.m_action_rolemap.findFirst({\n      where: {\n        id_action: Number(params.id_action),\n        id_client: 1,\n        type: \"verificator\",\n      },\n    });\n    await db.t_logbook.update({\n      where: {\n        id: Number(params.id),\n      },\n      data: {\n        verified: false,\n      },\n    });\n    await db.t_logbook_status.updateMany({\n      where: {\n        id_logbook: Number(params.id),\n      },\n      data: {\n        status: \"revised\",\n      },\n    });\n    mobile.notif.send({\n      user_id: String(form[\"id_participant\"]),\n      title: `Verifikasi Logbook Dibatalkan`,\n      body: `${user.name} membatalkan verifikasi data ${\n        form.m_action.name\n      } ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} pada ${moment(\n        new Date(),\n      ).format(\"DD/MM/YYYY HH:mm\")}, Mohon hubungi ${\n        user.name\n      } untuk informasi perbaikan data logbook anda`,\n      data: {\n        id_action: String(form.m_action.id),\n        id_logbook: String(params.id),\n      },\n    });\n    await db.t_notif.create({\n      data: {\n        message: `${user.name} membatalkan verifikasi data ${\n          form.m_action.name\n        } ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} pada ${moment(\n          new Date(),\n        ).format(\"DD/MM/YYYY HH:mm\")}, Mohon hubungi ${\n          user.name\n        } untuk informasi perbaikan data logbook anda`,\n        date: new Date(),\n        type: \"revised\",\n        id_user: Number(form[\"id_participant\"]),\n        url: `/ppds/action/${form.m_action.id}/${params.id}`,\n        id_role: 1,\n        read: false,\n        id_client: Number(user.id_client),\n      },\n    });\n    form._saving = false;\n    form.render();\n    alert(\"Data telah ter unverifikasi\");\n    window.history.back();\n  }\n}",
                          "valueBuilt": " async()=>{if(confirm(\"Anda yakin akan membatalkan verifikasi data ini?\")){form._saving=!0,form.render();let a=await db.m_action_rolemap.findFirst({where:{id_action:Number(params.id_action),id_client:1,type:\"verificator\"}});await db.t_logbook.update({where:{id:Number(params.id)},data:{verified:!1}}),await db.t_logbook_status.updateMany({where:{id_logbook:Number(params.id)},data:{status:\"revised\"}}),mobile.notif.send({user_id:String(form.id_participant),title:\"Verifikasi Logbook Dibatalkan\",body:`${user.name} membatalkan verifikasi data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}, Mohon hubungi ${user.name} untuk informasi perbaikan data logbook anda`,data:{id_action:String(form.m_action.id),id_logbook:String(params.id)}}),await db.t_notif.create({data:{message:`${user.name} membatalkan verifikasi data ${form.m_action.name} ${moment(form.date).format(\"DD/MM/YYYY HH:mm\")} pada ${moment(new Date).format(\"DD/MM/YYYY HH:mm\")}, Mohon hubungi ${user.name} untuk informasi perbaikan data logbook anda`,date:new Date,type:\"revised\",id_user:Number(form.id_participant),url:`/ppds/action/${form.m_action.id}/${params.id}`,id_role:1,read:!1,id_client:Number(user.id_client)}}),form._saving=!1,form.render(),alert(\"Data telah ter unverifikasi\"),window.history.back()}};\n"
                        }
                      },
                      "updated_at": 1692005629672
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full"
                  },
                  "layout": {
                    "dir": "col",
                    "gap": 0,
                    "wrap": "flex-nowrap",
                    "align": "center"
                  },
                  "padding": {
                    "b": 5,
                    "l": 0,
                    "r": 0,
                    "t": 5
                  }
                }
              },
              {
                "id": "zoqalvmsqmp2mm4ce69waa2g",
                "adv": {
                  "js": "<>\n  {params.id !== \"new\" &&\n    (user.role === \"staff\" || user.role === \"institution\") &&\n    Number(params.id_action) === 9 && <div {...props}>{children}</div>}\n</>",
                  "css": "",
                  "html": "",
                  "jsBuilt": "render(React.createElement(React.Fragment,null,params.id!==\"new\"&&(user.role===\"staff\"||user.role===\"institution\")&&Number(params.id_action)===9&&React.createElement(\"div\",{...props},children)));\n"
                },
                "name": "button-update-milestone",
                "type": "item",
                "childs": [
                  {
                    "id": "ufcjxwd5ns3iak6qguh9vnxh",
                    "adv": {
                      "js": "<>{!form._saving && <div {...props}>{children}</div>}</>",
                      "css": "",
                      "html": "",
                      "jsBuilt": "render(React.createElement(React.Fragment,null,!form._saving&&React.createElement(\"div\",{...props},children)));\n"
                    },
                    "name": "Wrapped",
                    "type": "item",
                    "childs": [
                      {
                        "id": "ciamxkbths4jaqaif440nr45",
                        "adv": {
                          "css": ""
                        },
                        "dim": {
                          "h": "fit",
                          "w": 0,
                          "wUnit": "px"
                        },
                        "name": "button",
                        "type": "item",
                        "childs": [
                          {
                            "id": "c64aiyxkkotctt8wimmj30bg",
                            "adv": {
                              "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onPointerUp={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                              "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                              "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onPointerUp:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "inside",
                            "type": "item",
                            "childs": [
                              {
                                "id": "ogk2i0gb8xkcc3bixankxkef",
                                "adv": {
                                  "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                  "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "html": "Login",
                                "name": "text_button",
                                "text": "",
                                "type": "text",
                                "childs": [],
                                "layout": {
                                  "dir": "col",
                                  "gap": 0,
                                  "align": "center"
                                },
                                "mobile": {
                                  "bg": {
                                    "pos": "center",
                                    "size": "cover",
                                    "color": ""
                                  },
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "font": {
                                    "size": 16,
                                    "color": "",
                                    "family": "Poppins",
                                    "height": "auto"
                                  }
                                },
                                "component": {
                                  "props": {}
                                }
                              }
                            ],
                            "layout": {
                              "dir": "col",
                              "gap": 0,
                              "align": "center"
                            },
                            "mobile": {
                              "bg": {
                                "pos": "center",
                                "size": "cover",
                                "color": ""
                              },
                              "dim": {
                                "h": 39,
                                "w": "fit"
                              },
                              "font": {
                                "size": 15,
                                "height": "auto"
                              },
                              "border": {
                                "color": "",
                                "style": "solid",
                                "rounded": {
                                  "bl": 0,
                                  "br": 0,
                                  "tl": 0,
                                  "tr": 0
                                }
                              },
                              "layout": {
                                "dir": "col",
                                "gap": 0,
                                "align": "center"
                              },
                              "linktag": {
                                "link": ""
                              }
                            },
                            "component": {
                              "props": {}
                            }
                          }
                        ],
                        "layout": {
                          "dir": "col",
                          "gap": 0,
                          "align": "left"
                        },
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "fit"
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 0,
                              "br": 0,
                              "tl": 0,
                              "tr": 0
                            }
                          },
                          "layout": {
                            "dir": "col",
                            "gap": 0,
                            "align": "center"
                          },
                          "linktag": {
                            "link": ""
                          }
                        },
                        "component": {
                          "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                          "name": "button",
                          "group": {
                            "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                            "name": "All"
                          },
                          "props": {
                            "action": {
                              "idx": 4,
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                              },
                              "type": "string",
                              "value": "\"function\"",
                              "visible": "type_button !== 'Submit'",
                              "valueBuilt": "\"function\";\n"
                            },
                            "type_button": {
                              "idx": 1,
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                              },
                              "type": "string",
                              "value": "form._valid === true && !form._saving ? \"Danger\" : \"Disabled\"",
                              "valueBuilt": " form._valid===!0&&!form._saving?\"Danger\":\"Disabled\";\n"
                            },
                            "label_button": {
                              "idx": 2,
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop"
                              },
                              "type": "string",
                              "value": "form._deleting === false ? \"Hapus\" : \"Menghapus...\"",
                              "valueBuilt": " form._deleting===!1?\"Hapus\":\"Menghapus...\";\n"
                            },
                            "width_button": {
                              "idx": 3,
                              "meta": {
                                "type": "text",
                                "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                              },
                              "name": "prop",
                              "type": "string",
                              "value": "\"120px\"",
                              "valueBuilt": "\"120px\";\n"
                            },
                            "navigate_link": {
                              "idx": 6,
                              "meta": {
                                "oldName": "navigate"
                              },
                              "type": "string",
                              "value": "\"/login\"",
                              "visible": "type_button !== 'Submit' && action === 'navigate'",
                              "valueBuilt": "\"/login\";\n"
                            },
                            "action_function": {
                              "idx": 5,
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop_1"
                              },
                              "type": "() => void",
                              "value": "async () => {\n  if (confirm(\"Anda yakin akan menghapus data ini?\")) {\n    form._deleting = true;\n    form.render();\n    await db.t_logbook_status.deleteMany({\n      where: { id_logbook: Number(params.id) },\n    });\n    let deleted = await db.t_logbook.delete({\n      where: {\n        id: Number(params.id),\n      },\n    });\n    form._deleting = false;\n    form.render();\n    navigate(\"/staff-pengajar/milestone\");\n  }\n}",
                              "visible": "type_button !== 'Submit' && action === 'function'",
                              "valueBuilt": " async()=>{if(confirm(\"Anda yakin akan menghapus data ini?\")){form._deleting=!0,form.render(),await db.t_logbook_status.deleteMany({where:{id_logbook:Number(params.id)}});let e=await db.t_logbook.delete({where:{id:Number(params.id)}});form._deleting=!1,form.render(),navigate(\"/staff-pengajar/milestone\")}};\n"
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "id": "wb23xq0eiqrnrv48ers46tdq",
                    "adv": {
                      "css": ""
                    },
                    "dim": {
                      "h": "fit",
                      "w": 0,
                      "wUnit": "px"
                    },
                    "name": "button",
                    "type": "item",
                    "childs": [
                      {
                        "id": "vqozvjdi29hg2gnqal1xeyvj",
                        "adv": {
                          "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onPointerUp={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                          "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                          "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onPointerUp:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                        },
                        "dim": {
                          "h": "fit",
                          "w": "fit"
                        },
                        "name": "inside",
                        "type": "item",
                        "childs": [
                          {
                            "id": "mdw4gxgmjjaaleo6af7zc8xs",
                            "adv": {
                              "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                              "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                              "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "html": "Login",
                            "name": "text_button",
                            "text": "",
                            "type": "text",
                            "childs": [],
                            "layout": {
                              "dir": "col",
                              "gap": 0,
                              "align": "center"
                            },
                            "mobile": {
                              "bg": {
                                "pos": "center",
                                "size": "cover",
                                "color": ""
                              },
                              "dim": {
                                "h": "fit",
                                "w": "full"
                              },
                              "font": {
                                "size": 16,
                                "color": "",
                                "family": "Poppins",
                                "height": "auto"
                              }
                            },
                            "component": {
                              "props": {}
                            }
                          }
                        ],
                        "layout": {
                          "dir": "col",
                          "gap": 0,
                          "align": "center"
                        },
                        "mobile": {
                          "bg": {
                            "pos": "center",
                            "size": "cover",
                            "color": ""
                          },
                          "dim": {
                            "h": 39,
                            "w": "fit"
                          },
                          "font": {
                            "size": 15,
                            "height": "auto"
                          },
                          "border": {
                            "color": "",
                            "style": "solid",
                            "rounded": {
                              "bl": 0,
                              "br": 0,
                              "tl": 0,
                              "tr": 0
                            }
                          },
                          "layout": {
                            "dir": "col",
                            "gap": 0,
                            "align": "center"
                          },
                          "linktag": {
                            "link": ""
                          }
                        },
                        "component": {
                          "props": {}
                        }
                      }
                    ],
                    "layout": {
                      "dir": "col",
                      "gap": 0,
                      "align": "left"
                    },
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "fit"
                      },
                      "border": {
                        "style": "solid",
                        "rounded": {
                          "bl": 0,
                          "br": 0,
                          "tl": 0,
                          "tr": 0
                        }
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 0,
                        "align": "center"
                      },
                      "linktag": {
                        "link": ""
                      }
                    },
                    "component": {
                      "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                      "name": "button",
                      "group": {
                        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                        "name": "All"
                      },
                      "props": {
                        "action": {
                          "idx": 4,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "\"function\"",
                          "visible": "type_button !== 'Submit'",
                          "valueBuilt": "\"function\";\n"
                        },
                        "type_button": {
                          "idx": 1,
                          "meta": {
                            "type": "option",
                            "oldName": "new_prop",
                            "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                          },
                          "type": "string",
                          "value": "form._valid === true && !form._saving ? \"Action\" : \"Disabled\"",
                          "valueBuilt": " form._valid===!0&&!form._saving?\"Action\":\"Disabled\";\n"
                        },
                        "label_button": {
                          "idx": 2,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop"
                          },
                          "type": "string",
                          "value": "form._saving ? \"Menyimpan...\" : \"Simpan\"",
                          "valueBuilt": " form._saving?\"Menyimpan...\":\"Simpan\";\n"
                        },
                        "width_button": {
                          "idx": 3,
                          "meta": {
                            "type": "text",
                            "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                          },
                          "name": "prop",
                          "type": "string",
                          "value": "\"180px\"",
                          "valueBuilt": "\"180px\";\n"
                        },
                        "navigate_link": {
                          "idx": 6,
                          "meta": {
                            "oldName": "navigate"
                          },
                          "type": "string",
                          "value": "\"/login\"",
                          "visible": "type_button !== 'Submit' && action === 'navigate'",
                          "valueBuilt": "\"/login\";\n"
                        },
                        "action_function": {
                          "idx": 5,
                          "meta": {
                            "type": "text",
                            "oldName": "new_prop_1"
                          },
                          "type": "() => void",
                          "value": "async () => {\n  if (confirm(\"Anda yakin akan mengubah data ini?\")) {\n    let data_ppds = await db.m_user.findFirst({\n      where: {\n        id: Number(form[\"id_participant\"]),\n      },\n    });\n    form._saving = true;\n    form.render();\n    let save = await db.t_logbook.update({\n      where: {\n        id: Number(params.id),\n      },\n      data: {\n        id_user: form[\"id_participant\"],\n        updated_by: user.id,\n        updated_date: new Date(),\n        id_action: 9,\n        date: form[\"date\"],\n        is_presentation: false,\n        id_client: user.id_client,\n        id_semester: data_ppds.id_semester,\n        id_stase: Number(form[\"id_stase\"]),\n        verified: true,\n        notes: form[\"notes\"],\n      },\n    });\n    let verificator = await db.m_action_rolemap.findFirst({\n      where: {\n        id_action: Number(params.id_action),\n        type: \"verificator\",\n        id_client: user.id_client,\n      },\n    });\n    await db.t_logbook_status.deleteMany({\n      where: { id_logbook: Number(params.id) },\n    });\n    await db.t_logbook_status.create({\n      data: {\n        id_user: user.role === \"institution\" ? form.id_staff : user.id_client,\n        id_action_role: verificator.id_action_role,\n        id_logbook: Number(params.id),\n        id_client: user.id_client,\n        date_time: form[\"date\"],\n        status: \"verified\",\n      },\n    });\n    form._saving = false;\n    form.render();\n    navigate(\"/staff-pengajar/milestone\");\n  }\n}",
                          "visible": "type_button !== 'Submit' && action === 'function'",
                          "valueBuilt": " async()=>{if(confirm(\"Anda yakin akan mengubah data ini?\")){let e=await db.m_user.findFirst({where:{id:Number(form.id_participant)}});form._saving=!0,form.render();let a=await db.t_logbook.update({where:{id:Number(params.id)},data:{id_user:form.id_participant,updated_by:user.id,updated_date:new Date,id_action:9,date:form.date,is_presentation:!1,id_client:user.id_client,id_semester:e.id_semester,id_stase:Number(form.id_stase),verified:!0,notes:form.notes}}),i=await db.m_action_rolemap.findFirst({where:{id_action:Number(params.id_action),type:\"verificator\",id_client:user.id_client}});await db.t_logbook_status.deleteMany({where:{id_logbook:Number(params.id)}}),await db.t_logbook_status.create({data:{id_user:user.role===\"institution\"?form.id_staff:user.id_client,id_action_role:i.id_action_role,id_logbook:Number(params.id),id_client:user.id_client,date_time:form.date,status:\"verified\"}}),form._saving=!1,form.render(),navigate(\"/staff-pengajar/milestone\")}};\n"
                        }
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "fit",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  },
                  "layout": {
                    "dir": "row",
                    "gap": 10,
                    "wrap": "flex-nowrap",
                    "align": "top-center"
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "fit",
                "w": "full"
              }
            }
          }
        ],
        "mobile": {
          "bg": {
            "pos": "center",
            "size": "cover",
            "color": ""
          },
          "dim": {
            "h": "full",
            "w": "full"
          }
        }
      }
    ],
    "mobile": {
      "bg": {
        "pos": "center",
        "size": "cover",
        "color": ""
      },
      "dim": {
        "h": "full",
        "w": "full",
        "hUnit": "px",
        "wUnit": "px"
      }
    },
    "component": {
      "id": "b0bf38be-3592-4947-b076-47444ae97d21",
      "group": {
        "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5"
      },
      "props": {}
    }
  },
  "created_at": "2023-09-16T07:27:24.427Z",
  "updated_at": "2023-11-10T07:47:01.251Z",
  "type": "item",
  "id_component_group": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
  "props": []
}