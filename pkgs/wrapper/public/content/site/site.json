{
  "id": "2512068e-fd68-44f5-9700-5153ccecf6a5",
  "name": "Medic Link Mobile",
  "favicon": "",
  "domain": "medic-link",
  "id_user": "b3598f48-91e8-4fdb-9298-f3b9036369c4",
  "created_at": "2023-06-26T02:46:51.412Z",
  "id_org": "db3db6f1-8550-4465-8427-c495819e8a1b",
  "updated_at": "2023-09-13T07:27:13.464Z",
  "js": "if (typeof exports.user === \"undefined\") {\n  exports.user = {\n    id: 0,\n    name: null,\n    code: \"\",\n    id_smt: 1,\n    id_client: 1,\n    id_stase: 1,\n    role: \"ppds\",\n    status: \"ready\",\n    ip_addr: \"\",\n  };\n}\n\n// #region: session\nexports.reloadSession = async () => {\n  if (exports.user.status === \"loading\") return;\n  let e = localStorage.getItem(\"mlsid\");\n  if (((exports.user.status = \"loading\"), e)) {\n    let dbuser = await db.m_session.findFirst({\n      where: { session_id: e },\n      select: {\n        m_user: {\n          select: {\n            id: !0,\n            display_name: !0,\n            code: !0,\n            id_semester: !0,\n            id_stase: !0,\n            id_client: !0,\n            m_role: { select: { name: !0 } },\n          },\n        },\n      },\n    });\n    dbuser\n      ? ((exports.user = {\n          id: dbuser.m_user.id,\n          name: dbuser.m_user.display_name,\n          code: dbuser.m_user.code,\n          id_smt: dbuser.m_user.id_semester,\n          id_stase: dbuser.m_user.id_stase,\n          id_client: dbuser.m_user.id_client,\n          role: dbuser.m_user.m_role.name,\n        }),\n        render())\n      : location.pathname.includes(\"login\") && navigate(\"/auth/login\");\n\n    if (dbuser) {\n      mobile.notif.register(exports.user.id);\n      mobile.notif.onTap = (data) => {\n        if (data !== null) {\n          if (exports.user.role === \"staff\") {\n            navigate(\n              `/staff/action/${data.data.id_action}/${data.data.id_logbook}`,\n            );\n          } else {\n            navigate(\n              `/ppds/action/${data.data.id_action}/${data.data.id_logbook}`,\n            );\n          }\n        } else {\n          if (exports.user.role === \"staff\") {\n            navigate(`/staff-pengajar/home/notification`);\n          } else {\n            navigate(`/ppds/home/notif`);\n          }\n        }\n      };\n    }\n  } else location.pathname.includes(\"login\") || navigate(\"/auth/login\");\n};\n\nif (isEditor) {\n  (exports.user.id = 5),\n    (exports.user.name = \"dr Nillasanti Puspa\"),\n    (exports.user.code = \"123421412412\");\n}\n\ntypes.isLogin = `(props:any, children:any, role?: \"ppds\" | \"staff\" | \"institution\") => React.FC<any>`;\n\nexports.isLogin = (props: any, children: any, role?: string) => {\n  if (isEditor) return <div {...props}> {children}</div>;\n  if (exports.user.id === 0) {\n    if (exports.user.status === \"ready\") exports.reloadSession();\n    return (\n      <div {...props} className={css`padding: 10px;`}>\n        Loading...\n      </div>\n    );\n  }\n  if (role && exports.user.role !== role) {\n    const nrole = exports.user.role;\n    if (nrole === \"staff\") navigate(\"/staff-pengajar/home\");\n    if (nrole === \"institution\") navigate(\"/institution/home\");\n    if (nrole === \"ppds\") navigate(\"/ppds/home\");\n\n    return (\n      <div {...props} className={css`padding: 10px;`}>\n        Redirecting...\n      </div>\n    );\n  }\n  return <div {...props}> {children}</div>;\n};\ntypes.bcrypt = \"any\";\n\ntypes.auditTrail = `(arg: {\n  type: \"visit\" | \"action\" | \"verify\";\n  activity: string;\n  meta?: any;\n}) => Promise<void>`;\n\nexports.auditTrail = async (e) => {\n  if (!exports.user.ip_addr)\n    try {\n      let i = await fetch(\"https://api.ipify.org?format=json\");\n      exports.user.ip_addr = (await i.json()).ip;\n    } catch {}\n  if (exports.user.id !== null) {\n    await db.t_audit_trails.create({\n      data: {\n        activity: e.activity,\n        timestamp: new Date(),\n        meta: e.meta,\n        type: e.type,\n        ip_user: exports.user.ip_addr,\n        id_client: exports.user.id_client,\n        id_user: exports.user.id,\n      },\n    });\n  }\n};\n\ntypes.sendNotif = `(arg: {\n  user_id: string;\n  title: string;\n  body: string;\n  navigate: string;\n  data?: any;\n}) => Promise<void>`;\n\nexports.sendNotif = async (e) => {\n  mobile.notif.send({\n    user_id: e.user_id,\n    title: e.title,\n    body: e.body,\n    data: e.data,\n  });\n};\n// #endregion\n\nconst w = window as any;\nw.scrollCache = {};\nexports.preserveScroll = {\n  ref: (e) => {\n    !isEditor &&\n      e &&\n      (w.scrollCache[location.pathname] ||\n        (w.scrollCache[location.pathname] = {}),\n      (w.scrollCache[location.pathname].ref = e),\n      (e.scrollTop = w.scrollCache[location.pathname].top));\n  },\n  onScroll: (e) => {\n    if (!isEditor && e.currentTarget) {\n      let i = e.currentTarget.scrollTop;\n      w.scrollCache[location.pathname] ||\n        (w.scrollCache[location.pathname] = {}),\n        (w.scrollCache[location.pathname].ref = e.currentTarget),\n        i !== 0 && (w.scrollCache[location.pathname].top = i);\n    }\n  },\n}",
  "css": "",
  "js_compiled": "typeof exports.user>\"u\"&&(exports.user={id:0,name:null,code:\"\",id_smt:1,id_client:1,id_stase:1,role:\"ppds\",status:\"ready\",ip_addr:\"\"});exports.reloadSession=async()=>{if(exports.user.status===\"loading\")return;let i=localStorage.getItem(\"mlsid\");if(exports.user.status=\"loading\",i){let e=await db.m_session.findFirst({where:{session_id:i},select:{m_user:{select:{id:!0,display_name:!0,code:!0,id_semester:!0,id_stase:!0,id_client:!0,m_role:{select:{name:!0}}}}}});e?(exports.user={id:e.m_user.id,name:e.m_user.display_name,code:e.m_user.code,id_smt:e.m_user.id_semester,id_stase:e.m_user.id_stase,id_client:e.m_user.id_client,role:e.m_user.m_role.name},render()):location.pathname.includes(\"login\")&&navigate(\"/auth/login\"),e&&(mobile.notif.register(exports.user.id),mobile.notif.onTap=t=>{t!==null?exports.user.role===\"staff\"?navigate(`/staff/action/${t.data.id_action}/${t.data.id_logbook}`):navigate(`/ppds/action/${t.data.id_action}/${t.data.id_logbook}`):exports.user.role===\"staff\"?navigate(\"/staff-pengajar/home/notification\"):navigate(\"/ppds/home/notif\")})}else location.pathname.includes(\"login\")||navigate(\"/auth/login\")};isEditor&&(exports.user.id=5,exports.user.name=\"dr Nillasanti Puspa\",exports.user.code=\"123421412412\");types.isLogin='(props:any, children:any, role?: \"ppds\" | \"staff\" | \"institution\") => React.FC<any>';exports.isLogin=(i,e,t)=>{if(isEditor)return React.createElement(\"div\",{...i},\" \",e);if(exports.user.id===0)return exports.user.status===\"ready\"&&exports.reloadSession(),React.createElement(\"div\",{...i,className:css`padding: 10px;`},\"Loading...\");if(t&&exports.user.role!==t){let s=exports.user.role;return s===\"staff\"&&navigate(\"/staff-pengajar/home\"),s===\"institution\"&&navigate(\"/institution/home\"),s===\"ppds\"&&navigate(\"/ppds/home\"),React.createElement(\"div\",{...i,className:css`padding: 10px;`},\"Redirecting...\")}return React.createElement(\"div\",{...i},\" \",e)};types.bcrypt=\"any\";types.auditTrail=`(arg: {\n  type: \"visit\" | \"action\" | \"verify\";\n  activity: string;\n  meta?: any;\n}) => Promise<void>`;exports.auditTrail=async i=>{if(!exports.user.ip_addr)try{let e=await fetch(\"https://api.ipify.org?format=json\");exports.user.ip_addr=(await e.json()).ip}catch{}exports.user.id!==null&&await db.t_audit_trails.create({data:{activity:i.activity,timestamp:new Date,meta:i.meta,type:i.type,ip_user:exports.user.ip_addr,id_client:exports.user.id_client,id_user:exports.user.id}})};types.sendNotif=`(arg: {\n  user_id: string;\n  title: string;\n  body: string;\n  navigate: string;\n  data?: any;\n}) => Promise<void>`;exports.sendNotif=async i=>{mobile.notif.send({user_id:i.user_id,title:i.title,body:i.body,data:i.data})};var a=window;a.scrollCache={};exports.preserveScroll={ref:i=>{!isEditor&&i&&(a.scrollCache[location.pathname]||(a.scrollCache[location.pathname]={}),a.scrollCache[location.pathname].ref=i,i.scrollTop=a.scrollCache[location.pathname].top)},onScroll:i=>{if(!isEditor&&i.currentTarget){let e=i.currentTarget.scrollTop;a.scrollCache[location.pathname]||(a.scrollCache[location.pathname]={}),a.scrollCache[location.pathname].ref=i.currentTarget,e!==0&&(a.scrollCache[location.pathname].top=e)}}};\n",
  "config": {
    "api_url": "https://med.avolut.com"
  },
  "is_deleted": false,
  "responsive": "mobile-only",
  "npm_cache": " ",
  "cgroup_ids": [],
  "layout": {
    "id": "fftgqc1ixet6wx8n7xgnu78q",
    "adv": {
      "css": "& {\n  display: flex;\n  overflow: none;\n}"
    },
    "dim": {
      "h": "full",
      "w": "full"
    },
    "name": "New Section",
    "type": "section",
    "childs": [
      {
        "id": "whm4dtd0iyv4wsnlr1uhrm8u",
        "adv": {
          "css": "& {\n  display: flex;\n  overflow: none;\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  top: 0px;\n}"
        },
        "dim": {
          "h": "fit",
          "w": "fit"
        },
        "name": "content",
        "type": "item",
        "childs": [],
        "mobile": {
          "bg": {
            "pos": "center",
            "size": "cover",
            "color": ""
          },
          "dim": {
            "h": "full",
            "w": "full"
          }
        }
      }
    ],
    "mobile": {
      "bg": {
        "pos": "center",
        "size": "cover",
        "color": ""
      },
      "padding": {
        "b": 0,
        "l": 0,
        "r": 0,
        "t": 0
      }
    }
  },
  "layout_id": "d8397369-add5-4e4c-9f07-a8deb4302db5"
}