{
  "id": "e863adf5-1ed4-4174-8fad-e289ed2d85cc",
  "name": "profile-edit",
  "url": "/profile/edit",
  "content_tree": {
    "id": "root",
    "type": "root",
    "childs": [
      {
        "id": "vnlro1rnsljnnyt2phc8tdb9",
        "adv": {
          "js": "isLogin(props, children)",
          "css": "& {\n  display: flex;\n  overflow: hidden;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
          "jsBuilt": "render(isLogin(props,children));\n"
        },
        "dim": {
          "h": "full",
          "w": "full"
        },
        "name": "screen",
        "type": "section",
        "childs": [
          {
            "id": "m16heh9psfma5pawcctmn5lz",
            "name": "title-back",
            "type": "item",
            "childs": [],
            "component": {
              "id": "a88a28fb-cc37-4910-8ebb-0bd20444d8f4",
              "props": {
                "url": {
                  "idx": 2,
                  "meta": {
                    "type": "text",
                    "oldName": "new_prop"
                  },
                  "type": "string",
                  "value": "\"/profile\"",
                  "valueBuilt": "\"/profile\";\n"
                },
                "label": {
                  "idx": 1,
                  "meta": {
                    "type": "text",
                    "oldName": "new_prop"
                  },
                  "type": "string",
                  "value": "\"Edit Profile\"",
                  "valueBuilt": "\"Edit Profile\";\n"
                }
              }
            }
          },
          {
            "id": "ifwnagqmlma33npmycns50fw",
            "adv": {
              "js": "<div {...props}>\n  <Local\n    name=\"form\"\n    value={\n      {\n        //local object\n      }\n    }\n    effect={async (local) => {\n      const data = await db.m_user.findFirst({ where: { id: user.id } });\n      if (data) {\n        for (const [k, v] of Object.entries(data)) {\n          local[k] = v;\n        }\n      }\n      local.render();\n    }}\n  >\n    {children}\n  </Local>\n</div>",
              "css": "",
              "html": "",
              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"form\",value:{},effect:async e=>{let r=await db.m_user.findFirst({where:{id:user.id}});if(r)for(let[d,i]of Object.entries(r))e[d]=i;e.render()}},children)));\n"
            },
            "name": "local",
            "type": "item",
            "childs": [
              {
                "id": "qwx9gkpe426s8nhl6e7ziwz9",
                "adv": {
                  "js": "<form\n  {...props}\n  onSubmit={async (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    form._saving = true;\n    form.render();\n\n    await db.m_user.update({\n      where: { id: user.id },\n      data: {\n        address: form.address,\n        display_name: form.display_name,\n        date_of_birth: form.date_of_birth,\n        code: form.code,\n        email: form.email,\n        phone: form.phone,\n      },\n    });\n\n    form._saving = false;\n    form.render();\n    alert(\"Profile berhasil disimpan!\");\n  }}\n>\n  {children}\n</form>",
                  "css": "",
                  "html": "",
                  "jsBuilt": "render(React.createElement(\"form\",{...props,onSubmit:async r=>{r.stopPropagation(),r.preventDefault(),form._saving=!0,form.render(),await db.m_user.update({where:{id:user.id},data:{address:form.address,display_name:form.display_name,date_of_birth:form.date_of_birth,code:form.code,email:form.email,phone:form.phone}}),form._saving=!1,form.render(),alert(\"Profile berhasil disimpan!\")}},children));\n"
                },
                "name": "form",
                "type": "item",
                "childs": [
                  {
                    "id": "a6s9en44n4qd50nmvef5fm1t",
                    "adv": {
                      "js": "",
                      "css": "& {\n  display: flex;\n  overflow: auto;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                      "html": "",
                      "jsBuilt": ""
                    },
                    "name": "body",
                    "type": "item",
                    "childs": [
                      {
                        "id": "smu8utwewdxhk19mxredgg7x",
                        "adv": {},
                        "name": "old",
                        "type": "item",
                        "childs": [
                          {
                            "id": "u6jgdop50w83pwtgnhkzi02k",
                            "adv": {
                              "css": ""
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "institution-logo",
                            "type": "item",
                            "childs": [
                              {
                                "id": "li3ybbv0y8eiontnny13epuu",
                                "adv": {
                                  "css": "",
                                  "html": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"59\" height=\"56\" viewBox=\"0 0 59 56\" fill=\"none\">\r\n<path d=\"M29.5 55C45.2401 55 58 42.9117 58 28C58 13.0883 45.2401 1 29.5 1C13.7599 1 1 13.0883 1 28C1 42.9117 13.7599 55 29.5 55Z\" stroke=\"#002B5B\" stroke-width=\"1.07788\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n<path d=\"M10.1289 12.8975V32.831C20.232 34.407 29.1961 36.4352 35.816 39.3953V20.7427C27.9463 16.4134 19.1859 13.7378 10.1289 12.8975Z\" stroke=\"#002B5B\" stroke-width=\"1.07788\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n<path d=\"M50.8576 17.8599V37.4732C41.9849 38.9224 33.2923 41.2293 24.916 44.3577V25.7051C32.482 20.8962 41.4116 18.8072 50.8576 17.8599Z\" stroke=\"#002B5B\" stroke-width=\"1.07788\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "name": "logo",
                                "type": "item",
                                "childs": []
                              }
                            ],
                            "mobile": {
                              "dim": {
                                "h": "fit",
                                "w": "full"
                              },
                              "layout": {
                                "dir": "col",
                                "gap": 0,
                                "wrap": "flex-nowrap",
                                "align": "top-center"
                              },
                              "padding": {
                                "b": 0,
                                "l": 0,
                                "r": 0,
                                "t": 0
                              }
                            }
                          },
                          {
                            "id": "hefykflgq588fjilo9f7sxvw",
                            "name": "old",
                            "type": "item",
                            "childs": [
                              {
                                "id": "ymtmnioj1tydm1roo7suvcsb",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Address\"",
                                      "valueBuilt": "\"Address\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"jalan jauh sekali\"",
                                      "valueBuilt": "\"jalan jauh sekali\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true \"",
                                      "valueBuilt": "\"true \";\n"
                                    },
                                    "type_input": {
                                      "idx": 1,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  },\n  {\n    label: \"multiselect\",\n    value: \"multiselect\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"text\"",
                                      "valueBuilt": "\"text\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2013-01-08\"",
                                      "valueBuilt": "\"2013-01-08\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"00:00\"",
                                      "valueBuilt": "\"00:00\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "mkvce36mbgota75meblkhx6m",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "egekho0gozakqewtw9dlxbnd"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "qpymjfmribksf0dlkaoagdy6",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Email\"",
                                      "valueBuilt": "\"Email\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"@mail.com\"",
                                      "valueBuilt": "\"@mail.com\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 1,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  },\n  {\n    label: \"multiselect\",\n    value: \"multiselect\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"text\"",
                                      "valueBuilt": "\"text\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2013-01-08\"",
                                      "valueBuilt": "\"2013-01-08\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"00:00\"",
                                      "valueBuilt": "\"00:00\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "y0x3r92ugzjh267jwe3ysl4q",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "ai0ggp346sx1s34yssboscwf"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "oc9vy401dbhbq08g16pb6rgs",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Phone\"",
                                      "valueBuilt": "\"Phone\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"081\"",
                                      "valueBuilt": "\"081\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 1,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  },\n  {\n    label: \"multiselect\",\n    value: \"multiselect\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"text\"",
                                      "valueBuilt": "\"text\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2013-01-08\"",
                                      "valueBuilt": "\"2013-01-08\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"00:00\"",
                                      "valueBuilt": "\"00:00\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "a9w1z9id8my9xip7zt7ndyje",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "jnwfsu47q3cpb2fsdm4ydhcz"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "w7m4agchyohsxxhfl8nkit87",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Academic Year\"",
                                      "valueBuilt": "\"Academic Year\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  }\n]"
                                      },
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2000-02-02\"",
                                      "valueBuilt": "\"2000-02-02\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "valueBuilt": "\"hello\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "zqfgw0pu0jzc5h80ah2m77k2",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "egekho0gozakqewtw9dlxbnd"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "bkzfrdv5j3mjlvx5eoxic33n",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Gender\"",
                                      "valueBuilt": "\"Gender\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  }\n]"
                                      },
                                      "type": "string",
                                      "value": "\"dropdown\"",
                                      "valueBuilt": "\"dropdown\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2000-02-02\"",
                                      "valueBuilt": "\"2000-02-02\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "valueBuilt": "\"hello\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[\r\n  { label: \"Female\", value: \"Female\" },\r\n  { label: \"Male\", value: \"Male\" },\r\n]",
                                      "valueBuilt": "[{label:\"Female\",value:\"Female\"},{label:\"Male\",value:\"Male\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "qp4m9e8weiwfzdtfua4jzfw8",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "egekho0gozakqewtw9dlxbnd"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "k4f2r7a33r2gne6ru4fwqw11",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Code\"",
                                      "valueBuilt": "\"Code\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3009812423\"",
                                      "valueBuilt": "\"3009812423\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  }\n]"
                                      },
                                      "type": "string",
                                      "value": "\"text\"",
                                      "valueBuilt": "\"text\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2013-01-08\"",
                                      "valueBuilt": "\"2013-01-08\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"00:00\"",
                                      "valueBuilt": "\"00:00\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "ara5uwop1bzh4piini3o91jm",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "gd016crcypcts4zt1xpfhupn"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "dhoehh5rvhoalqpd16nvg6pv",
                                "adv": {},
                                "name": "input_field",
                                "type": "item",
                                "childs": [],
                                "component": {
                                  "id": "578f3a48-fffd-477e-918c-e92c449572dc",
                                  "props": {
                                    "label": {
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"Name\"",
                                      "valueBuilt": "\"Name\";\n"
                                    },
                                    "value": {
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"dr Wahidin Pecy\"",
                                      "valueBuilt": "\"dr Wahidin Pecy\";\n"
                                    },
                                    "width": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"100%\",\n    value: \"100%\"\n  },\n  {\n    label: \"80%\",\n    value: \"80%\"\n  },\n  {\n    label: \"50%\",\n    value: \"50%\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"80%\"",
                                      "valueBuilt": "\"80%\";\n"
                                    },
                                    "toggle": {
                                      "idx": 9,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "checked": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop_1",
                                        "options": "[\n  {\n    label: \"true\",\n    value: \"true\"\n  },\n  {\n    label: \"false\",\n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"true\"",
                                      "valueBuilt": "\"true\";\n"
                                    },
                                    "bind_key": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "disabled": {
                                      "idx": 21,
                                      "meta": {
                                        "type": "option",
                                        "options": "[\n  {\n    label: \"TRUE\",\n    value: \"TRUE\"\n  },\n  {\n    label: \"FALSE\",\n    value: \"FALSE\"\n  },\n]"
                                      },
                                      "name": "prop",
                                      "type": "string",
                                      "value": "\"FALSE\"",
                                      "valueBuilt": "\"FALSE\";\n"
                                    },
                                    "bind_form": {
                                      "idx": 3,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "any",
                                      "value": "local",
                                      "valueBuilt": " local;\n"
                                    },
                                    "multiline": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  { \n    label: \"true\", \n    value: \"true \"\n  },\n  { \n    label: \"false\", \n    value: \"false\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"false\"",
                                      "valueBuilt": "\"false\";\n"
                                    },
                                    "type_input": {
                                      "idx": 4,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "type",
                                        "options": "[\n  { \n    label: \"text\", \n    value: \"text\" \n  },\n  {\n    label: \"toggle\",\n    value: \"toggle\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  { \n    label: \"number\", \n    value: \"number\" \n  },\n  { \n    label: \"password\", \n    value: \"password\" \n  },\n  { \n    label: \"date\", \n    value: \"date\" \n  },\n  { \n    label: \"file\", \n    value: \"file\" \n  },\n  {\n    label: \"checkbox\",\n    value: \"checkbox\"\n  }\n]"
                                      },
                                      "type": "string",
                                      "value": "\"text\"",
                                      "valueBuilt": "\"text\";\n"
                                    },
                                    "value_date": {
                                      "idx": 11,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "\"string\"",
                                      "value": "\"2013-01-08\"",
                                      "valueBuilt": "\"2013-01-08\";\n"
                                    },
                                    "value_time": {
                                      "idx": 12,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"00:00\"",
                                      "valueBuilt": "\"00:00\";\n"
                                    },
                                    "multiline_row": {
                                      "idx": 5,
                                      "meta": {
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"3\"",
                                      "valueBuilt": "\"3\";\n"
                                    },
                                    "on_change_text": {
                                      "idx": 2,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "value_dropdown": {
                                      "idx": 13,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "[]",
                                      "value": "[{label: \"a\", value: \"a\"},{label: \"b\", value: \"b\"}, {label: \"c\", value: \"c\"}]",
                                      "valueBuilt": "[{label:\"a\",value:\"a\"},{label:\"b\",value:\"b\"},{label:\"c\",value:\"c\"}];\n"
                                    },
                                    "dropdown_expand": {
                                      "idx": 14,
                                      "meta": {
                                        "type": "option",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"off\"",
                                      "valueBuilt": "\"off\";\n"
                                    },
                                    "label_checkboxs": {
                                      "idx": 6,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop",
                                        "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                      },
                                      "type": "string",
                                      "value": "\"hello\""
                                    },
                                    "onClickCheckbox": {
                                      "idx": 8,
                                      "meta": {
                                        "type": "content-element",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"hello\"",
                                      "content": {
                                        "id": "w7w423whbe334fsri485wuic",
                                        "dim": {
                                          "h": "full",
                                          "w": "full"
                                        },
                                        "name": "onClickCheckbox",
                                        "type": "item",
                                        "childs": [],
                                        "parentInstanceId": "gd016crcypcts4zt1xpfhupn"
                                      }
                                    },
                                    "on_click_toggle": {
                                      "idx": 10,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickToggle"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "dropdown_open_key": {
                                      "idx": 20,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    },
                                    "on_click_checkbox": {
                                      "idx": 7,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickCheckbox"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "on_click_dropdown": {
                                      "idx": 15,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "onClickDropdown"
                                      },
                                      "type": "() => void",
                                      "value": "() => {}",
                                      "valueBuilt": "()=>{};\n"
                                    },
                                    "selected_dropdown": {
                                      "idx": 19,
                                      "meta": {
                                        "type": "text",
                                        "oldName": "new_prop"
                                      },
                                      "type": "string",
                                      "value": "\"\"",
                                      "valueBuilt": "\"\";\n"
                                    }
                                  },
                                  "updated_at": 1692073028923
                                }
                              },
                              {
                                "id": "or3brak10hnow19o8zpwnscm",
                                "adv": {
                                  "css": ""
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "full"
                                },
                                "html": "Orthopaedi &amp; Traumalogi",
                                "name": "text",
                                "text": "",
                                "type": "text",
                                "layout": {
                                  "dir": "col",
                                  "gap": 0,
                                  "align": "center"
                                },
                                "mobile": {
                                  "font": {
                                    "size": 15,
                                    "align": "left",
                                    "color": "#002B5B",
                                    "family": "Poppins",
                                    "height": "auto",
                                    "wordBreak": "break-normal",
                                    "whitespace": "whitespace-normal"
                                  }
                                }
                              }
                            ],
                            "hidden": false,
                            "mobile": {
                              "dim": {
                                "h": "full",
                                "w": "full",
                                "hUnit": "px",
                                "wUnit": "px"
                              }
                            }
                          }
                        ],
                        "hidden": "all",
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "layout": {
                            "dir": "col",
                            "gap": 20,
                            "wrap": "flex-nowrap",
                            "align": "top-center"
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      },
                      {
                        "id": "v6ol7vv7at38buoyzfvjjry8",
                        "adv": {
                          "js": "",
                          "css": "& {\n  display: flex;\n  position: absolute;\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                          "html": "",
                          "jsBuilt": ""
                        },
                        "name": "Wrapped",
                        "type": "item",
                        "childs": [
                          {
                            "id": "dl8mf0nd6qis5q8wuch4thfu",
                            "adv": {
                              "css": "",
                              "html": ""
                            },
                            "name": "loader",
                            "type": "item",
                            "childs": [],
                            "component": {
                              "id": "26b6abde-53e3-4061-9295-11930f7aba22",
                              "props": {
                                "load": {
                                  "idx": 3,
                                  "meta": {
                                    "type": "text"
                                  },
                                  "name": "prop",
                                  "type": "() => Promise<any>",
                                  "value": "async () => {\n  const data = await db.m_user.findFirst({\n    include: {\n      m_client_m_user_id_clientTom_client: true\n    },\n    where: {\n      id: user.id,\n    },\n  });\n\n  for (const [k, v] of Object.entries(data)) {\n    if (k === 'm_client_m_user_id_clientTom_client') {\n      form['m_client'] = v\n    } else {\n      form[k] = v;\n    }\n  }\n\n  form.render();\n\n  return { user: data };\n}",
                                  "valueBuilt": " async()=>{let e=await db.m_user.findFirst({include:{m_client_m_user_id_clientTom_client:!0},where:{id:user.id}});for(let[r,i]of Object.entries(e))r===\"m_client_m_user_id_clientTom_client\"?form.m_client=i:form[r]=i;return form.render(),{user:e}};\n"
                                },
                                "mode": {
                                  "idx": 6,
                                  "meta": {
                                    "type": "option",
                                    "options": "[\n  {\n    label: \"sample\",\n    value: \"sample\"\n  },\n  {\n    label: \"load\",\n    value: \"load\"\n  },\n]"
                                  },
                                  "name": "prop",
                                  "type": "string",
                                  "value": "\"load\"",
                                  "valueBuilt": "\"load\";\n"
                                },
                                "debug": {
                                  "idx": 5,
                                  "meta": {
                                    "type": "option",
                                    "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                  },
                                  "name": "prop",
                                  "type": "string",
                                  "value": "\"n\"",
                                  "valueBuilt": "\"n\";\n"
                                },
                                "ready": {
                                  "meta": {
                                    "type": "content-element"
                                  },
                                  "content": {
                                    "id": "smrs6ex3ob9pum9egwus946c",
                                    "adv": {
                                      "css": ""
                                    },
                                    "dim": {
                                      "h": "fit",
                                      "w": "fit"
                                    },
                                    "name": "ready",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "f49x1hm99usucwzvwbdsva7s",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "wpoy6p2olc2rc1oekxe751l2",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "nzcw5ar4fncpz1955ohzjdjn",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "gpf8hdj7vq6fdynmqq0w45wm",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "r3616uaj682l4nn6pl0jc95u",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "so25sxmmcz37gl4uw3jmhyip",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "ndge8iznheam58eq6r10gi47",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "q4p0c490n45xv1dhap6qjx76",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "o0188xjqh1ebg6e0nfn89epd",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "ahvgl3n2r5exwvf9g0sm73cv",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "cyucb6jfrmwmve4yk2i3o64c",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "sfuy2ad21x1ou1hbfgqs5149",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"display_name\"",
                                              "valueBuilt": "\"display_name\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"text\"",
                                              "valueBuilt": "\"text\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Nama Lengkap\"",
                                              "valueBuilt": "\"Nama Lengkap\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "readonly": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "option": "[\n  {\n    label: \"yes\",\n    value: \"y\"\n  },\n  {\n    label: \"no\",\n    value: \"n\"\n  },\n]",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            },
                                            "autocomplete": {
                                              "idx": 21,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"on\"",
                                              "visible": "type === \"password\" || type === \"text\"",
                                              "valueBuilt": "\"on\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "j0v1hkbtdsm3g1odtdm0dbbm",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "rhcxnh275ttl6oebnj94y60l",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "zx0g7qxf9nr41jo7xpn2elrc",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "xzoeaqhqjxdop8r2b5hd12c8",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "zapsyvkmiud51eyhzdbslwdt",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "xvncvk0i7febe0jvxfle78rw",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "yodk3k5vihh8yx6p7el904r8",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "udngwjqtqitsmjzz22ms9aeo",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "f0qk4k1f5l2at6703pdwkhhc",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "jmuw1qn4x6ng6ptirmgml9zl",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "x73otfruokr00rh0cw0mr8v8",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "i8z3a3tgb3c47fg88bwid33e",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"email\"",
                                              "valueBuilt": "\"email\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"text\"",
                                              "valueBuilt": "\"text\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Email\"",
                                              "valueBuilt": "\"Email\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            },
                                            "autocomplete": {
                                              "idx": 21,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"on\",\n    value: \"on\"\n  },\n  {\n    label: \"off\",\n    value: \"off\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"on\"",
                                              "visible": "type === \"password\" || type === \"text\"",
                                              "valueBuilt": "\"on\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "zxpsuend0uer4xiwq5d9l9gz",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "votyii0wnxk6m8tui4821u0x",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "iij9ihz6am7xun79nbbv7ezb",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "mr58tc0hisxextcbkt60nr3p",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "xq0rclrr00jvosua8lkc2irm",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "e7i3v24033ymjq53iq58x44s",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "bg7a2t6t04rxywqhv86y7vwn",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "w2sold4eqhtnreqnlwh5me3j",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "op781cxf9wpebyi0yl7s2qgd",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "damfhvzo5v6xhjx8zvg46xjv",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "a1vo184y21ck1a10r9rikyj1",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "h6a13oecefjdwnzy50ah969g",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"phone\"",
                                              "valueBuilt": "\"phone\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"text\"",
                                              "valueBuilt": "\"text\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"Wanita\", value: \"wanita\"},\n  {label: \"Pria\", value: \"pria\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"Wanita\",value:\"wanita\"},{label:\"Pria\",value:\"pria\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Nomor Telepon / HP\"",
                                              "valueBuilt": "\"Nomor Telepon / HP\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "yb0pct51fbxy4r7nvzwboi52",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "hfs5yv1hx6hslh19d26oivpr",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "yi8ws0khfq13tsalu1o7951d",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "gxuupz7pfrhsypv1ne0k2xag",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "vo41jia32a8rkm36bwztzdxm",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "xuq9pg7br9kmg5jj8l9q6t5h",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "b6hwk59w4qfxjjrtsyx73wpe",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "lui0908tun2ab0gj6amsneqi",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "rksu8oxzgi59o4g002im8h0u",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "o86qxzpdb11t92xdhrg7spog",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "t6gzkfyldnef1zz9tem2wn8g",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "fot6xcxx1q2wrmj8napu490q",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"code\"",
                                              "valueBuilt": "\"code\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"text\"",
                                              "valueBuilt": "\"text\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Code\"",
                                              "valueBuilt": "\"Code\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "fczprd3lhqw7da2p1ity5cc8",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "o5t9mio23qviboxhk62fvscc",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "vtjran3oockbf504lozsixii",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "vjo73v99yz3uxrbdns4f13e8",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "i3sukxigjgejr513ewcdoyoe",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "pwqqikngm48jdv0ahqyqjcqd",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "ltx2wv20420sh5nikuabyaby",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "frd1p0yjfrbxdrdx13fwjfa5",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "zpkkb4aw1g78fqe539m5tfce",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "heqwwj9p5a310vdef8ky28lz",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "iu4b5z1rtxu34ztz01pc4o5o",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "julkprf4kljpx09d0xdlvaz3",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"date_of_birth\"",
                                              "valueBuilt": "\"date_of_birth\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"date\"",
                                              "valueBuilt": "\"date\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Tanggal Lahir\"",
                                              "valueBuilt": "\"Tanggal Lahir\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "o64i45zksrh6robkhczgjvkf",
                                        "adv": {
                                          "css": ""
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "field",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "k9racorzmyec8wiiej9nmb14",
                                            "adv": {
                                              "js": "<div {...props}>\n  <Local\n    name=\"local\"\n    value={{\n      //local object\n      val: null,\n      items: [],\n    }}\n    effect={async (local) => {\n      if (type === \"dropdown\" ) {\n        local.items = await items();\n        local.render();\n      }\n    }}\n  >\n    {children}\n  </Local>\n</div>",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props},React.createElement(Local,{name:\"local\",value:{val:null,items:[]},effect:async e=>{type===\"dropdown\"&&(e.items=await items(),e.render())}},children)));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "box",
                                            "type": "item",
                                            "childs": [
                                              {
                                                "id": "xiw9wcu1wwbz0qswd7wjh4s4",
                                                "adv": {
                                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "label",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "ymq93kexovhvk9cbm5v4qfb6",
                                                    "adv": {
                                                      "js": "<div {...props}>{label}</div>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(\"div\",{...props},label));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "var",
                                                    "type": "item",
                                                    "childs": []
                                                  },
                                                  {
                                                    "id": "m3u9mwryoqwu8bbq60r4ogqb",
                                                    "adv": {
                                                      "js": "<>{required === \"y\" && <div {...props}>*</div>}</>",
                                                      "css": "",
                                                      "jsBuilt": "render(React.createElement(React.Fragment,null,required===\"y\"&&React.createElement(\"div\",{...props},\"*\")));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "full"
                                                    },
                                                    "html": "*",
                                                    "name": "required",
                                                    "text": "",
                                                    "type": "text",
                                                    "layout": {
                                                      "dir": "col",
                                                      "gap": 0,
                                                      "align": "center"
                                                    },
                                                    "mobile": {
                                                      "dim": {
                                                        "h": "fit",
                                                        "w": "fit"
                                                      },
                                                      "font": {
                                                        "size": 20,
                                                        "align": "left",
                                                        "color": "#ff0000",
                                                        "height": 115,
                                                        "wordBreak": "break-normal",
                                                        "whitespace": "whitespace-normal"
                                                      },
                                                      "layout": {
                                                        "dir": "col",
                                                        "gap": 0,
                                                        "align": "center"
                                                      },
                                                      "padding": {
                                                        "b": 0,
                                                        "l": 8,
                                                        "r": 8,
                                                        "t": 0
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "layout": {
                                                    "dir": "row",
                                                    "gap": 0,
                                                    "wrap": "flex-nowrap",
                                                    "align": "top-left"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 0,
                                                    "t": 10
                                                  }
                                                }
                                              },
                                              {
                                                "id": "u6l5hby9qtiri5f9d94rkjv8",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"text\" || type === \"date\" || type === \"datetime\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "& {\n  display: flex;\n\n  // &.desktop {}\n  // &:hover {}\n}",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,(type===\"text\"||type===\"date\"||type===\"datetime\")&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-field",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "wnet06qbhvec2ki4kmnyw62g",
                                                    "adv": {
                                                      "js": "<input\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  type={type === \"datetime\" ? \"datetime-local\" : type}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"input\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,type:type===\"datetime\"?\"datetime-local\":type,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "n3l93mq3q976fx4h7iy3s0z3",
                                                "adv": {
                                                  "js": "<>\n  {(type === \"textarea\") && (\n    <div {...props}>{children}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"textarea\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "text-area",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "wy5vkb0rd7aj7nqnom8t5owu",
                                                    "adv": {
                                                      "js": "<textarea\n  {...props}\n  placeholder={placeholder !== \"-\" ? placeholder : \"\"}\n  value={form[name] || \"\"}\n  spellCheck={false}\n  onChange={(e) => {\n    form[name] = e.currentTarget.value;\n    if (typeof change === \"function\") {\n      change(e.currentTarget.value);\n    }\n\n    if (!form._error) form._error = {};\n    if (required === \"y\" && !form[name]) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n  className={cx(\n    props.className,\n    css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`\n  )}\n/>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"textarea\",{...props,placeholder:placeholder!==\"-\"?placeholder:\"\",value:form[name]||\"\",spellCheck:!1,onChange:e=>{form[name]=e.currentTarget.value,typeof change==\"function\"&&change(e.currentTarget.value),form._error||(form._error={}),required===\"y\"&&!form[name]?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()},className:cx(props.className,css`\nfont-weight: bold;\n\n&:focus {\n  border-color: green;\n}\n`)}));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 86,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "layout": {
                                                        "dir": "row",
                                                        "gap": 0,
                                                        "wrap": "flex-nowrap",
                                                        "align": "left"
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 7,
                                                        "r": 7,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "l4a9tz1a6c9s4suemnf9q16f",
                                                "adv": {
                                                  "js": "<>{type === \"dropdown\" && <div {...props}>{children}</div>}</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,type===\"dropdown\"&&React.createElement(\"div\",{...props},children)));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "dropdown",
                                                "type": "item",
                                                "childs": [
                                                  {
                                                    "id": "t7t9v4797qbof496o7kv0291",
                                                    "adv": {
                                                      "js": "<select\n  {...props}\n  onChange={(event) => {\n    let selectElement = event.target;\n    let value = selectElement.value;\n    form[name] = value;\n\n    if (!form._error) form._error = {};\n    if (\n      (required === \"y\" && !form[name]) ||\n      (required === \"y\" && form[name] === \"null\")\n    ) {\n      form._error[name] = `${label} is required`;\n    } else {\n      delete form._error[name];\n    }\n\n    if (Object.keys(form._error).length > 0) {\n      form._valid = false;\n    } else {\n      form._valid = true;\n    }\n\n    form.render();\n  }}\n>\n  {local.items.map((e) => {\n    return <option value={e.value}>{e.label}</option>;\n  })}\n</select>",
                                                      "css": "& {\n  display: flex;\n  background: #FFF;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.10);\n  padding: 6px 10px;\n  // &.mobile {}\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                                                      "jsBuilt": "render(React.createElement(\"select\",{...props,onChange:e=>{let r=e.target.value;form[name]=r,form._error||(form._error={}),required===\"y\"&&!form[name]||required===\"y\"&&form[name]===\"null\"?form._error[name]=`${label} is required`:delete form._error[name],Object.keys(form._error).length>0?form._valid=!1:form._valid=!0,form.render()}},local.items.map(e=>React.createElement(\"option\",{value:e.value},e.label))));\n"
                                                    },
                                                    "dim": {
                                                      "h": "fit",
                                                      "w": "fit"
                                                    },
                                                    "name": "field",
                                                    "type": "item",
                                                    "childs": [],
                                                    "mobile": {
                                                      "dim": {
                                                        "h": 42,
                                                        "w": "full"
                                                      },
                                                      "border": {
                                                        "color": "#ffffff",
                                                        "style": "solid",
                                                        "stroke": {
                                                          "b": 3,
                                                          "l": 3,
                                                          "r": 3,
                                                          "t": 3
                                                        },
                                                        "rounded": {
                                                          "bl": 8,
                                                          "br": 8,
                                                          "tl": 8,
                                                          "tr": 8
                                                        }
                                                      },
                                                      "padding": {
                                                        "b": 5,
                                                        "l": 10,
                                                        "r": 10,
                                                        "t": 5
                                                      }
                                                    }
                                                  }
                                                ],
                                                "mobile": {
                                                  "dim": {
                                                    "h": "fit",
                                                    "w": "full"
                                                  },
                                                  "border": {
                                                    "color": "",
                                                    "style": "solid",
                                                    "stroke": {
                                                      "b": 0,
                                                      "l": 0,
                                                      "r": 0,
                                                      "t": 0
                                                    }
                                                  },
                                                  "padding": {
                                                    "b": 0,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 0
                                                  }
                                                }
                                              },
                                              {
                                                "id": "s8wd973fo4w5m4j6xp0nlmxi",
                                                "adv": {
                                                  "js": "<>\n  {form._error && form._error[name] && (\n    <div {...props}>{form._error[name]}</div>\n  )}\n</>",
                                                  "css": "",
                                                  "jsBuilt": "render(React.createElement(React.Fragment,null,form._error&&form._error[name]&&React.createElement(\"div\",{...props},form._error[name])));\n"
                                                },
                                                "dim": {
                                                  "h": "fit",
                                                  "w": "fit"
                                                },
                                                "name": "error-msg",
                                                "type": "item",
                                                "childs": [],
                                                "mobile": {
                                                  "font": {
                                                    "size": 15,
                                                    "align": "left",
                                                    "color": "#f84848",
                                                    "family": "Poppins",
                                                    "height": "auto",
                                                    "wordBreak": "break-normal",
                                                    "whitespace": "whitespace-normal"
                                                  },
                                                  "padding": {
                                                    "b": 3,
                                                    "l": 20,
                                                    "r": 20,
                                                    "t": 3
                                                  }
                                                }
                                              }
                                            ],
                                            "mobile": {
                                              "dim": {
                                                "h": "fit",
                                                "w": "full"
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full"
                                          },
                                          "padding": {
                                            "b": 7,
                                            "l": 0,
                                            "r": 0,
                                            "t": 0
                                          }
                                        },
                                        "component": {
                                          "id": "96886ca6-81a5-4c04-8d7e-7089e362b473",
                                          "group": {
                                            "id": "6a510a13-9fc1-4e52-9252-2489a1d4d2fc"
                                          },
                                          "props": {
                                            "name": {
                                              "idx": 3,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"address\"",
                                              "valueBuilt": "\"address\";\n"
                                            },
                                            "type": {
                                              "idx": 5,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"text\",\n    value: \"text\"\n  },\n  {\n    label: \"dropdown\",\n    value: \"dropdown\"\n  },\n  {\n    label: \"date\",\n    value: \"date\"\n  },\n  {\n    label: \"datetime\",\n    value: \"datetime\"\n  },\n  {\n    label: \"textarea\",\n    value: \"textarea\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"textarea\"",
                                              "valueBuilt": "\"textarea\";\n"
                                            },
                                            "items": {
                                              "idx": 30,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => any[] | Promise<any[]>",
                                              "value": "async () => {\n return [\n  {label: \"item-1\", value: \"item-1\"},\n  {label: \"item-2\", value: \"item-2\"},\n ]\n}",
                                              "visible": "type === \"dropdown\"",
                                              "valueBuilt": " async()=>[{label:\"item-1\",value:\"item-1\"},{label:\"item-2\",value:\"item-2\"}];\n"
                                            },
                                            "label": {
                                              "idx": 4,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"Alamat\"",
                                              "valueBuilt": "\"Alamat\";\n"
                                            },
                                            "change": {
                                              "idx": 7,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "() => void | Promise<void>",
                                              "value": "async (val) => {}",
                                              "valueBuilt": " async a=>{};\n"
                                            },
                                            "required": {
                                              "idx": 6,
                                              "meta": {
                                                "type": "option",
                                                "options": "[\n  {\n    label: \"YES\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"n\"",
                                              "valueBuilt": "\"n\";\n"
                                            },
                                            "placeholder": {
                                              "idx": 20,
                                              "meta": {
                                                "type": "text"
                                              },
                                              "name": "prop",
                                              "type": "string",
                                              "value": "\"-\"",
                                              "visible": "type === 'text' || type === \"textarea\"",
                                              "valueBuilt": "\"-\";\n"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "id": "t079yyqwjfnic3jn9y0gujt5",
                                        "adv": {
                                          "css": "& {\n  display: flex;\n  min-height:200px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}"
                                        },
                                        "dim": {
                                          "h": "fit",
                                          "w": "fit"
                                        },
                                        "name": "New Item",
                                        "type": "item",
                                        "childs": [],
                                        "mobile": {
                                          "dim": {
                                            "h": 109,
                                            "w": "full"
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "dim": {
                                        "h": "full",
                                        "w": "full"
                                      },
                                      "layout": {
                                        "dir": "col",
                                        "gap": 8,
                                        "wrap": "flex-nowrap",
                                        "align": "top-left"
                                      },
                                      "padding": {
                                        "b": 0,
                                        "l": 7,
                                        "r": 7,
                                        "t": 0
                                      }
                                    }
                                  }
                                },
                                "sample": {
                                  "idx": 4,
                                  "meta": {
                                    "type": "text"
                                  },
                                  "name": "prop",
                                  "type": "() => Promise<any>",
                                  "value": "async () => {\n  return {};\n}",
                                  "valueBuilt": " async()=>({});\n"
                                },
                                "loading": {
                                  "idx": 1,
                                  "meta": {
                                    "type": "content-element"
                                  },
                                  "name": "prop",
                                  "type": "string",
                                  "value": "\"hello\"",
                                  "content": {
                                    "id": "oq87alrykmjqwwo7wcp0ys9x",
                                    "dim": {
                                      "h": "full",
                                      "w": "full"
                                    },
                                    "name": "loading",
                                    "type": "item",
                                    "childs": [
                                      {
                                        "id": "fxzwd3jnfa7i1og0zp5943pe",
                                        "adv": {},
                                        "name": "Wrapped",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "sxfytr4op5y3aq1rsy3om2t4",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 177
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "id": "x456bop26wmpxrrtibphh7n4",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 199
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "id": "f8wgze75nbp2gzyltb46ycc0",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 184
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full",
                                            "hUnit": "px",
                                            "wUnit": "px"
                                          },
                                          "layout": {
                                            "dir": "col",
                                            "gap": 12,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 5,
                                            "l": 8,
                                            "r": 8,
                                            "t": 5
                                          }
                                        }
                                      },
                                      {
                                        "id": "kr0tckc2siqk4usgtcofffo4",
                                        "adv": {},
                                        "name": "Wrapped",
                                        "type": "item",
                                        "childs": [
                                          {
                                            "id": "c6q29ecf2je5s52kvzfh1r89",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 177
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "id": "sjo3ef1260367q9r2v01o0gf",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 199
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "id": "m14vx7dj0ejncaduwn3grylu",
                                            "adv": {
                                              "js": "<div {...props} className={cx(props.className, \"shine\")}>\n  {children}\n</div>",
                                              "css": "",
                                              "jsBuilt": "render(React.createElement(\"div\",{...props,className:cx(props.className,\"shine\")},children));\n"
                                            },
                                            "dim": {
                                              "h": "fit",
                                              "w": "fit"
                                            },
                                            "name": "bar",
                                            "type": "item",
                                            "childs": [],
                                            "mobile": {
                                              "dim": {
                                                "h": 12,
                                                "w": 184
                                              },
                                              "border": {
                                                "style": "solid",
                                                "rounded": {
                                                  "bl": 8,
                                                  "br": 8,
                                                  "tl": 8,
                                                  "tr": 8
                                                }
                                              }
                                            }
                                          }
                                        ],
                                        "mobile": {
                                          "dim": {
                                            "h": "fit",
                                            "w": "full",
                                            "hUnit": "px",
                                            "wUnit": "px"
                                          },
                                          "layout": {
                                            "dir": "col",
                                            "gap": 12,
                                            "wrap": "flex-nowrap",
                                            "align": "top-left"
                                          },
                                          "padding": {
                                            "b": 5,
                                            "l": 8,
                                            "r": 8,
                                            "t": 5
                                          }
                                        }
                                      }
                                    ],
                                    "mobile": {
                                      "layout": {
                                        "dir": "col",
                                        "gap": 23,
                                        "wrap": "flex-nowrap",
                                        "align": "top-left"
                                      }
                                    },
                                    "parentInstanceId": "mooptc28me7uvjpsyi3410pj"
                                  },
                                  "valueBuilt": "\"hello\""
                                },
                                "preview": {
                                  "idx": 2,
                                  "meta": {
                                    "type": "option",
                                    "options": "[\n  {\n    label: \"Ready\",\n    value: \"ready\"\n  },\n  {\n    label: \"Loading\",\n    value: \"loading\"\n  },\n]"
                                  },
                                  "name": "prop",
                                  "type": "string",
                                  "value": "\"ready\"",
                                  "valueBuilt": "\"ready\";\n"
                                }
                              }
                            }
                          }
                        ],
                        "mobile": {
                          "dim": {
                            "h": "full",
                            "w": "full",
                            "hUnit": "px",
                            "wUnit": "px"
                          },
                          "padding": {
                            "b": 0,
                            "l": 0,
                            "r": 0,
                            "t": 0
                          }
                        }
                      }
                    ],
                    "hidden": false,
                    "mobile": {
                      "dim": {
                        "h": "full",
                        "w": "full",
                        "hUnit": "px",
                        "wUnit": "px"
                      },
                      "padding": {
                        "b": 0,
                        "l": 0,
                        "r": 0,
                        "t": 0
                      }
                    }
                  },
                  {
                    "id": "t8wdcslfjwxa9kjfy9b5jdth",
                    "adv": {
                      "css": ""
                    },
                    "dim": {
                      "h": "fit",
                      "w": "fit"
                    },
                    "name": "submit",
                    "type": "item",
                    "childs": [
                      {
                        "id": "lh8xlosj11ehbuev0mhyxr7a",
                        "adv": {
                          "css": ""
                        },
                        "dim": {
                          "h": "fit",
                          "w": 0,
                          "wUnit": "px"
                        },
                        "name": "button",
                        "type": "item",
                        "childs": [
                          {
                            "id": "ji8xipzxqz7aw52oyixtq0xs",
                            "adv": {
                              "js": "<button\n  {...props}\n  style={{\n    backgroundColor:\n      type_button === \"Success\"\n        ? \"green\"\n        : type_button === \"Edit\"\n        ? \"#FFFFFF\"\n        : type_button === \"Danger\"\n        ? \"#ffffff\"\n        : type_button === \"Checkout\"\n        ? \"#159895\"\n        : type_button === \"Disabled\"\n        ? \"gray\"\n        : \"#0062A3\",\n    border:\n      type_button === \"Edit\"\n        ? \"2px solid #002B5B\"\n        : type_button === \"Danger\"\n        ? \"2px solid #870707\"\n        : \"0px\",\n    borderRadius: type_button === \"Checkout\" ? \"20px\" : \"10px\",\n    width: type_button === \"Checkout\" ? \"100px\" : width_button,\n  }}\n  type={type_button === \"Submit\" ? \"submit\" : \"button\"}\n  onPointerDown={(e) => {\n    if (type_button !== \"Disabled\" && type_button !== \"Submit\") {\n      if (action === \"navigate\") {\n        navigate(navigate_link);\n      } else {\n        action_function(e);\n      }\n    }\n  }}\n>\n  {children}\n</button>",
                              "css": "& {\n  display: flex;\n  min-height: 39px;\n\n  // &.mobile {}\n  // &.desktop {}\n  // &:hover {}\n}",
                              "jsBuilt": "render(React.createElement(\"button\",{...props,style:{backgroundColor:type_button===\"Success\"?\"green\":type_button===\"Edit\"?\"#FFFFFF\":type_button===\"Danger\"?\"#ffffff\":type_button===\"Checkout\"?\"#159895\":type_button===\"Disabled\"?\"gray\":\"#0062A3\",border:type_button===\"Edit\"?\"2px solid #002B5B\":type_button===\"Danger\"?\"2px solid #870707\":\"0px\",borderRadius:type_button===\"Checkout\"?\"20px\":\"10px\",width:type_button===\"Checkout\"?\"100px\":width_button},type:type_button===\"Submit\"?\"submit\":\"button\",onPointerDown:t=>{type_button!==\"Disabled\"&&type_button!==\"Submit\"&&(action===\"navigate\"?navigate(navigate_link):action_function(t))}},children));\n"
                            },
                            "dim": {
                              "h": "fit",
                              "w": "fit"
                            },
                            "name": "inside",
                            "type": "item",
                            "childs": [
                              {
                                "id": "d8bypny493tjosffi9bi6ub1",
                                "adv": {
                                  "js": "<div\n  {...props}\n  style={{\n    color:\n      type_button === \"Edit\"\n        ? \"#002B5B\"\n        : type_button === \"Danger\"\n        ? \"#870707\"\n        : \"white\",\n  }}\n>\n  {label_button}\n</div>",
                                  "css": "& {\n  display: flex;\n  font-weight: bold;\n\n  &:hover {\n    display: flex;\n  }\n}",
                                  "jsBuilt": "render(React.createElement(\"div\",{...props,style:{color:type_button===\"Edit\"?\"#002B5B\":type_button===\"Danger\"?\"#870707\":\"white\"}},label_button));\n"
                                },
                                "dim": {
                                  "h": "fit",
                                  "w": "fit"
                                },
                                "html": "Login",
                                "name": "text_button",
                                "text": "",
                                "type": "text",
                                "childs": [],
                                "layout": {
                                  "dir": "col",
                                  "gap": 0,
                                  "align": "center"
                                },
                                "mobile": {
                                  "bg": {
                                    "pos": "center",
                                    "size": "cover",
                                    "color": ""
                                  },
                                  "dim": {
                                    "h": "fit",
                                    "w": "full"
                                  },
                                  "font": {
                                    "size": 16,
                                    "color": "",
                                    "family": "Poppins",
                                    "height": "auto"
                                  }
                                },
                                "component": {
                                  "props": {}
                                }
                              }
                            ],
                            "layout": {
                              "dir": "col",
                              "gap": 0,
                              "align": "center"
                            },
                            "mobile": {
                              "bg": {
                                "pos": "center",
                                "size": "cover",
                                "color": ""
                              },
                              "dim": {
                                "h": 39,
                                "w": "fit"
                              },
                              "font": {
                                "size": 15,
                                "height": "auto"
                              },
                              "border": {
                                "color": "",
                                "style": "solid",
                                "rounded": {
                                  "bl": 0,
                                  "br": 0,
                                  "tl": 0,
                                  "tr": 0
                                }
                              },
                              "layout": {
                                "dir": "col",
                                "gap": 0,
                                "align": "center"
                              },
                              "linktag": {
                                "link": ""
                              }
                            },
                            "component": {
                              "props": {}
                            }
                          }
                        ],
                        "layout": {
                          "dir": "col",
                          "gap": 0,
                          "align": "left"
                        },
                        "mobile": {
                          "dim": {
                            "h": "fit",
                            "w": "fit"
                          },
                          "border": {
                            "style": "solid",
                            "rounded": {
                              "bl": 0,
                              "br": 0,
                              "tl": 0,
                              "tr": 0
                            }
                          },
                          "layout": {
                            "dir": "col",
                            "gap": 0,
                            "align": "center"
                          },
                          "linktag": {
                            "link": ""
                          }
                        },
                        "component": {
                          "id": "8680d22d-b66f-49e7-ae8b-fa1151993a47",
                          "name": "button",
                          "group": {
                            "id": "e08f9ffa-e31f-4540-b651-a8b9ebd6e0e5",
                            "name": "All"
                          },
                          "props": {
                            "action": {
                              "idx": 4,
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  {\n    label: \"function\",\n    value: \"function\"\n  },\n  {\n    label: \"navigate\",\n    value: \"navigate\"\n  },\n]"
                              },
                              "type": "string",
                              "value": "\"navigate\"",
                              "visible": "type_button !== 'Submit'",
                              "valueBuilt": "\"navigate\";\n"
                            },
                            "type_button": {
                              "idx": 1,
                              "meta": {
                                "type": "option",
                                "oldName": "new_prop",
                                "options": "[\n  { \n    label: \"Success\", \n    value: \"Success\" \n  },\n{ label: \"Edit\",\nvalue: \"Edit\"},\n  { \n    label: \"Danger\", \n    value: \"Danger\" \n  },\n  { \n    label: \"Submit\", \n    value: \"Submit\" \n  },\n  { \n    label: \"Action\", \n    value: \"Action\" \n  },\n  { \n    label: \"Disabled\", \n    value: \"Disabled\" \n  },\n  {\n    label:\"Checkout\",\n    value: \"Checkout\"\n  },\n]"
                              },
                              "type": "string",
                              "value": "form._saving ? \"Disabled\" : \"Submit\"",
                              "valueBuilt": " form._saving?\"Disabled\":\"Submit\";\n"
                            },
                            "label_button": {
                              "idx": 2,
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop"
                              },
                              "type": "string",
                              "value": "form._saving ? \"Saving...\" : \"Save\"",
                              "valueBuilt": " form._saving?\"Saving...\":\"Save\";\n"
                            },
                            "width_button": {
                              "idx": 3,
                              "meta": {
                                "type": "text",
                                "options": "[\n  {\n    label: \"100\",\n    value: \"y\"\n  },\n  {\n    label: \"NO\",\n    value: \"n\"\n  },\n]"
                              },
                              "name": "prop",
                              "type": "string",
                              "value": "\"250px\"",
                              "valueBuilt": "\"250px\";\n"
                            },
                            "navigate_link": {
                              "idx": 6,
                              "meta": {
                                "oldName": "navigate"
                              },
                              "type": "string",
                              "value": "\"/login\"",
                              "visible": "true",
                              "valueBuilt": "\"/login\";\n"
                            },
                            "action_function": {
                              "idx": 5,
                              "meta": {
                                "type": "text",
                                "oldName": "new_prop_1"
                              },
                              "type": "() => void",
                              "value": "() => {}",
                              "visible": "type_button !== 'Submit' && action === 'function'",
                              "valueBuilt": "()=>{};\n"
                            }
                          }
                        }
                      }
                    ],
                    "mobile": {
                      "dim": {
                        "h": "fit",
                        "w": "full"
                      },
                      "layout": {
                        "dir": "col",
                        "gap": 0,
                        "wrap": "flex-nowrap",
                        "align": "center"
                      },
                      "padding": {
                        "b": 22,
                        "l": 0,
                        "r": 0,
                        "t": 22
                      }
                    }
                  }
                ],
                "mobile": {
                  "dim": {
                    "h": "full",
                    "w": "full",
                    "hUnit": "px",
                    "wUnit": "px"
                  }
                }
              }
            ],
            "mobile": {
              "dim": {
                "h": "full",
                "w": "full",
                "hUnit": "px",
                "wUnit": "px"
              }
            }
          }
        ],
        "mobile": {
          "dim": {
            "h": "full",
            "w": "full"
          },
          "font": {
            "size": 15,
            "family": "Poppins",
            "height": "auto"
          },
          "layout": {
            "dir": "col",
            "gap": 2,
            "align": "top-center"
          },
          "padding": {
            "b": 0,
            "l": 0,
            "r": 0,
            "t": 0
          }
        },
        "component": {
          "props": {}
        }
      }
    ]
  },
  "id_site": "2512068e-fd68-44f5-9700-5153ccecf6a5",
  "created_at": "2023-07-25T07:46:29.267Z",
  "js_compiled": null,
  "js": null,
  "updated_at": "2023-10-09T01:30:28.651Z",
  "id_folder": "10f37dbf-d019-4379-a525-be6e15fc3370",
  "is_deleted": false,
  "id_layout": null,
  "is_default_layout": false
}